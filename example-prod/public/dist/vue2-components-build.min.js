(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global["vue2-components-build"] = {}));
})(this, (function (exports) { 'use strict';

  var uncurryThis$1 = functionUncurryThis;

  var objectIsPrototypeOf = uncurryThis$1({}.isPrototypeOf);

  var $ = _export;

  var global$1 = global_1;

  // https://tc39.es/ecma262/#sec-globalthis

  $({
    global: true
  }, {
    globalThis: global$1
  });

  var globalThis$6 = global$1;

  var globalThis$5 = globalThis$6;

  var globalThis$4 = globalThis$5;

  var globalThis$3 = globalThis$4;

  var globalThis$2 = globalThis$3;

  var globalThis$1 = globalThis$2;

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  var check = function check(it) {
    return it && it.Math == Math && it;
  }; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028


  var global_1 = // eslint-disable-next-line es-x/no-global-this -- safe
  check(typeof globalThis$1 == 'object' && globalThis$1) || check(typeof window == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback
  function () {
    return this;
  }() || Function('return this')();

  // `IsCallable` abstract operation
  // https://tc39.es/ecma262/#sec-iscallable
  var isCallable = function isCallable(argument) {
    return typeof argument == 'function';
  };

  var $String$3 = String;

  var tryToString = function tryToString(argument) {
    try {
      return $String$3(argument);
    } catch (error) {
      return 'Object';
    }
  };

  var $TypeError$c = TypeError; // `Assert: IsCallable(argument) is true`

  var aCallable = function aCallable(argument) {
    if (isCallable(argument)) return argument;
    throw $TypeError$c(tryToString(argument) + ' is not a function');
  };

  var isObject = function isObject(it) {
    return typeof it == 'object' ? it !== null : isCallable(it);
  };

  var $String$2 = String;
  var $TypeError$b = TypeError; // `Assert: Type(argument) is Object`

  var anObject = function anObject(argument) {
    if (isObject(argument)) return argument;
    throw $TypeError$b($String$2(argument) + ' is not an object');
  };

  var fails = function fails(exec) {
    try {
      return !!exec();
    } catch (error) {
      return true;
    }
  };

  var apply$4 = functionApply;

  var OPTIONAL_ARGUMENTS_LIST = !fails(function () {
    // eslint-disable-next-line es-x/no-reflect -- required for testing
    apply$1(function () {
      /* empty */
    });
  }); // `Reflect.apply` method
  // https://tc39.es/ecma262/#sec-reflect.apply

  $({
    target: 'Reflect',
    stat: true,
    forced: OPTIONAL_ARGUMENTS_LIST
  }, {
    apply: function apply(target, thisArgument, argumentsList) {
      return apply$4(aCallable(target), thisArgument, anObject(argumentsList));
    }
  });

  var path = {};

  var apply$3 = path.Reflect.apply;

  var apply$2 = apply$3;

  var apply$1 = apply$2;

  var functionBindNative = !fails(function () {
    var _context;

    // eslint-disable-next-line es-x/no-function-prototype-bind -- safe
    var test = _bindInstanceProperty(_context = function _context() {
      /* empty */
    }).call(_context); // eslint-disable-next-line no-prototype-builtins -- safe


    return typeof test != 'function' || test.hasOwnProperty('prototype');
  });

  var NATIVE_BIND = functionBindNative;

  var FunctionPrototype$3 = Function.prototype;
  var apply = FunctionPrototype$3.apply;
  var call$2 = FunctionPrototype$3.call; // eslint-disable-next-line es-x/no-reflect -- safe

  var functionApply = typeof Reflect == 'object' && apply$1 || (NATIVE_BIND ? _bindInstanceProperty(call$2).call(call$2, apply) : function () {
    return call$2.apply(apply, arguments);
  });

  var document$1 = global$1.document; // typeof document.createElement is 'object' in old IE

  var EXISTS$1 = isObject(document$1) && isObject(document$1.createElement);

  var documentCreateElement = function documentCreateElement(it) {
    return EXISTS$1 ? document$1.createElement(it) : {};
  };

  var DESCRIPTORS = descriptors;

  var ie8DomDefine = !DESCRIPTORS && !fails(function () {
    // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
    return defineProperty(documentCreateElement('div'), 'a', {
      get: function get() {
        return 7;
      }
    }).a != 7;
  });

  // https://bugs.chromium.org/p/v8/issues/detail?id=3334

  var v8PrototypeDefineBug = DESCRIPTORS && fails(function () {
    // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
    return defineProperty(function () {
      /* empty */
    }, 'prototype', {
      value: 42,
      writable: false
    }).prototype != 42;
  });

  var call$1 = Function.prototype.call;
  var functionCall = NATIVE_BIND ? _bindInstanceProperty(call$1).call(call$1, call$1) : function () {
    return call$1.apply(call$1, arguments);
  };

  var aFunction = function aFunction(variable) {
    return isCallable(variable) ? variable : undefined;
  };

  var getBuiltIn = function getBuiltIn(namespace, method) {
    return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global$1[namespace]) : path[namespace] && path[namespace][method] || global$1[namespace] && global$1[namespace][method];
  };

  var entryVirtual = function entryVirtual(CONSTRUCTOR) {
    return path[CONSTRUCTOR + 'Prototype'];
  };

  var concat$4 = _concatInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$e = Array.prototype;

  var concat$3 = function concat(it) {
    var own = _concatInstanceProperty(it);

    return it === ArrayPrototype$e || objectIsPrototypeOf(ArrayPrototype$e, it) && own === _concatInstanceProperty(ArrayPrototype$e) ? concat$4 : own;
  };

  var concat$2 = concat$3;

  var concat$1 = concat$2;
  var _concatInstanceProperty = concat$1;

  var isArray$4 = isArray;

  // https://tc39.es/ecma262/#sec-array.isarray

  $({
    target: 'Array',
    stat: true
  }, {
    isArray: isArray$4
  });

  var isArray$3 = path.Array.isArray;

  var isArray$2 = isArray$3;

  var isArray$1 = isArray$2;
  var _Array$isArray = isArray$1;

  var defineProperty$6 = defineProperty;

  var defineGlobalProperty = function defineGlobalProperty(key, value) {
    try {
      defineProperty$6(global$1, key, {
        value: value,
        configurable: true,
        writable: true
      });
    } catch (error) {
      global$1[key] = value;
    }

    return value;
  };

  var SHARED = '__core-js_shared__';
  var store$1 = global$1[SHARED] || defineGlobalProperty(SHARED, {});
  var sharedStore = store$1;

  var shared = createCommonjsModule(function (module) {
    (module.exports = function (key, value) {
      return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});
    })('versions', []).push({
      version: '3.23.5',
      mode: 'pure' ,
      copyright: 'Â© 2014-2022 Denis Pushkarev (zloirock.ru)',
      license: 'https://github.com/zloirock/core-js/blob/v3.23.5/LICENSE',
      source: 'https://github.com/zloirock/core-js'
    });
  });

  var $TypeError$a = TypeError; // `RequireObjectCoercible` abstract operation
  // https://tc39.es/ecma262/#sec-requireobjectcoercible

  var requireObjectCoercible = function requireObjectCoercible(it) {
    if (it == undefined) throw $TypeError$a("Can't call method on " + it);
    return it;
  };

  var $Object$4 = Object; // `ToObject` abstract operation
  // https://tc39.es/ecma262/#sec-toobject

  var toObject = function toObject(argument) {
    return $Object$4(requireObjectCoercible(argument));
  };

  var hasOwnProperty = uncurryThis$1({}.hasOwnProperty); // `HasOwnProperty` abstract operation
  // https://tc39.es/ecma262/#sec-hasownproperty
  // eslint-disable-next-line es-x/no-object-hasown -- safe

  var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
    return hasOwnProperty(toObject(it), key);
  };

  var id$1 = 0;
  var postfix = Math.random();
  var toString$1 = uncurryThis$1(1.0.toString);

  var uid = function uid(key) {
    return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$1(++id$1 + postfix, 36);
  };

  var classof$2 = classof;

  var $String$1 = String;

  var toString_1 = function toString_1(argument) {
    if (classof$2(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
    return $String$1(argument);
  };

  var createPropertyDescriptor = function createPropertyDescriptor(bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  var create$3 = objectCreate;

  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create

  $({
    target: 'Object',
    stat: true,
    sham: !DESCRIPTORS
  }, {
    create: create$3
  });

  var Object$2 = path.Object;

  var create$2 = function create(P, D) {
    return Object$2.create(P, D);
  };

  var create$1 = create$2;

  var create = create$1;
  var _Object$create = create;

  var definePropertiesModule = objectDefineProperties;

  var defineProperties$2 = definePropertiesModule.f; // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  // eslint-disable-next-line es-x/no-object-defineproperties -- safe

  $({
    target: 'Object',
    stat: true,
    forced: defineProperties !== defineProperties$2,
    sham: !DESCRIPTORS
  }, {
    defineProperties: defineProperties$2
  });

  var defineProperties_1 = createCommonjsModule(function (module) {
    var Object = path.Object;

    var defineProperties = module.exports = function defineProperties(T, D) {
      return Object.defineProperties(T, D);
    };

    if (Object.defineProperties.sham) defineProperties.sham = true;
  });

  var defineProperties$1 = defineProperties_1;

  var defineProperties = defineProperties$1;

  var keys$7 = _keysInstanceProperty(entryVirtual('Array'));

  var keys$6 = keys$7;

  var ArrayPrototype$d = Array.prototype;
  var DOMIterables$2 = {
    DOMTokenList: true,
    NodeList: true
  };

  var keys$5 = function keys(it) {
    var own = _keysInstanceProperty(it);

    return it === ArrayPrototype$d || objectIsPrototypeOf(ArrayPrototype$d, it) && own === _keysInstanceProperty(ArrayPrototype$d) || hasOwnProperty_1(DOMIterables$2, classof$2(it)) ? keys$6 : own;
  };

  var keys$4 = keys$5;
  var _keysInstanceProperty = keys$4;

  var objectKeys$1 = objectKeys;

  var FAILS_ON_PRIMITIVES$5 = fails(function () {
    objectKeys$1(1);
  }); // `Object.keys` method
  // https://tc39.es/ecma262/#sec-object.keys

  $({
    target: 'Object',
    stat: true,
    forced: FAILS_ON_PRIMITIVES$5
  }, {
    keys: function keys(it) {
      return objectKeys$1(toObject(it));
    }
  });

  var keys$3 = _keysInstanceProperty(path.Object);

  var keys$2 = keys$3;

  var keys$1 = keys$2;

  var require$$0$3 = arrayIncludes;

  var $includes = _includesInstanceProperty(require$$0$3); // FF99+ bug


  var BROKEN_ON_SPARSE = fails(function () {
    var _context;

    return !_includesInstanceProperty(_context = Array(1)).call(_context);
  }); // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes

  $({
    target: 'Array',
    proto: true,
    forced: BROKEN_ON_SPARSE
  }, {
    includes: function includes(el
    /* , fromIndex = 0 */
    ) {
      return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
    }
  }); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

  var includes$4 = _includesInstanceProperty(entryVirtual('Array'));

  var classof$1 = classofRaw;

  var wellKnownSymbol$1 = wellKnownSymbol;

  var MATCH$1 = wellKnownSymbol$1('match'); // `IsRegExp` abstract operation
  // https://tc39.es/ecma262/#sec-isregexp

  var isRegexp = function isRegexp(it) {
    var isRegExp;
    return isObject(it) && ((isRegExp = it[MATCH$1]) !== undefined ? !!isRegExp : classof$1(it) == 'RegExp');
  };

  var $TypeError$9 = TypeError;

  var notARegexp = function notARegexp(it) {
    if (isRegexp(it)) {
      throw $TypeError$9("The method doesn't accept regular expressions");
    }

    return it;
  };

  var MATCH = wellKnownSymbol$1('match');

  var correctIsRegexpLogic = function correctIsRegexpLogic(METHOD_NAME) {
    var regexp = /./;

    try {
      '/./'[METHOD_NAME](regexp);
    } catch (error1) {
      try {
        regexp[MATCH] = false;
        return '/./'[METHOD_NAME](regexp);
      } catch (error2) {
        /* empty */
      }
    }

    return false;
  };

  var stringIndexOf = uncurryThis$1(_indexOfInstanceProperty('')); // `String.prototype.includes` method
  // https://tc39.es/ecma262/#sec-string.prototype.includes

  $({
    target: 'String',
    proto: true,
    forced: !correctIsRegexpLogic('includes')
  }, {
    includes: function includes(searchString
    /* , position = 0 */
    ) {
      return !!~stringIndexOf(toString_1(requireObjectCoercible(this)), toString_1(notARegexp(searchString)), arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  var includes$3 = _includesInstanceProperty(entryVirtual('String'));

  var ArrayPrototype$c = Array.prototype;
  var StringPrototype = String.prototype;

  var includes$2 = function includes(it) {
    var own = _includesInstanceProperty(it);

    if (it === ArrayPrototype$c || objectIsPrototypeOf(ArrayPrototype$c, it) && own === _includesInstanceProperty(ArrayPrototype$c)) return includes$4;

    if (typeof it == 'string' || it === StringPrototype || objectIsPrototypeOf(StringPrototype, it) && own === _includesInstanceProperty(StringPrototype)) {
      return includes$3;
    }

    return own;
  };

  var includes$1 = includes$2;

  var includes = includes$1;
  var _includesInstanceProperty = includes;

  var trunc$3 = mathTrunc;

  // https://tc39.es/ecma262/#sec-math.trunc

  $({
    target: 'Math',
    stat: true
  }, {
    trunc: trunc$3
  });

  var trunc$2 = path.Math.trunc;

  var trunc$1 = trunc$2;

  var trunc = trunc$1;
  var _Math$trunc = trunc;

  var ceil = Math.ceil;
  var floor = Math.floor; // `Math.trunc` method
  // https://tc39.es/ecma262/#sec-math.trunc
  // eslint-disable-next-line es-x/no-math-trunc -- safe

  var mathTrunc = _Math$trunc || function trunc(x) {
    var n = +x;
    return (n > 0 ? floor : ceil)(n);
  };

  // https://tc39.es/ecma262/#sec-tointegerorinfinity

  var toIntegerOrInfinity = function toIntegerOrInfinity(argument) {
    var number = +argument; // eslint-disable-next-line no-self-compare -- NaN check

    return number !== number || number === 0 ? 0 : trunc$3(number);
  };

  var max$3 = Math.max;
  var min$2 = Math.min; // Helper for a popular repeating case of the spec:
  // Let integer be ? ToInteger(index).
  // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).

  var toAbsoluteIndex = function toAbsoluteIndex(index, length) {
    var integer = toIntegerOrInfinity(index);
    return integer < 0 ? max$3(integer + length, 0) : min$2(integer, length);
  };

  var min$1 = Math.min; // `ToLength` abstract operation
  // https://tc39.es/ecma262/#sec-tolength

  var toLength = function toLength(argument) {
    return argument > 0 ? min$1(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
  };

  // https://tc39.es/ecma262/#sec-lengthofarraylike

  var lengthOfArrayLike = function lengthOfArrayLike(obj) {
    return toLength(obj.length);
  };

  var toIndexedObject$1 = toIndexedObject;

  var createMethod$2 = function createMethod(IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIndexedObject$1($this);
      var length = lengthOfArrayLike(O);
      var index = toAbsoluteIndex(fromIndex, length);
      var value; // Array#includes uses SameValueZero equality algorithm
      // eslint-disable-next-line no-self-compare -- NaN check

      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++]; // eslint-disable-next-line no-self-compare -- NaN check

        if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
      } else for (; length > index; index++) {
        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
      }
      return !IS_INCLUDES && -1;
    };
  };

  var arrayIncludes = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod$2(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod$2(false)
  };

  _includesInstanceProperty(arrayIncludes);

  _indexOfInstanceProperty(arrayIncludes);

  var arrayMethodIsStrict = function arrayMethodIsStrict(METHOD_NAME, argument) {
    var method = [][METHOD_NAME];
    return !!method && fails(function () {
      // eslint-disable-next-line no-useless-call -- required for testing
      method.call(null, argument || function () {
        return 1;
      }, 1);
    });
  };

  /* eslint-disable es-x/no-array-prototype-indexof -- required for testing */


  var $IndexOf = _indexOfInstanceProperty(require$$0$3);

  var un$IndexOf = uncurryThis$1(_indexOfInstanceProperty([]));
  var NEGATIVE_ZERO = !!un$IndexOf && 1 / un$IndexOf([1], 1, -0) < 0;
  var STRICT_METHOD$3 = arrayMethodIsStrict('indexOf'); // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof

  $({
    target: 'Array',
    proto: true,
    forced: NEGATIVE_ZERO || !STRICT_METHOD$3
  }, {
    indexOf: function indexOf(searchElement
    /* , fromIndex = 0 */
    ) {
      var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
      return NEGATIVE_ZERO // convert -0 to +0
      ? un$IndexOf(this, searchElement, fromIndex) || 0 : $IndexOf(this, searchElement, fromIndex);
    }
  });

  var indexOf$4 = _indexOfInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$b = Array.prototype;

  var indexOf$3 = function indexOf(it) {
    var own = _indexOfInstanceProperty(it);

    return it === ArrayPrototype$b || objectIsPrototypeOf(ArrayPrototype$b, it) && own === _indexOfInstanceProperty(ArrayPrototype$b) ? indexOf$4 : own;
  };

  var indexOf$2 = indexOf$3;

  var indexOf$1 = indexOf$2;
  var _indexOfInstanceProperty = indexOf$1;

  var hiddenKeys$1 = {};

  var indexOf = _indexOfInstanceProperty(require$$0$3);

  var push$2 = uncurryThis$1([].push);

  var objectKeysInternal = function objectKeysInternal(object, names) {
    var O = toIndexedObject$1(object);
    var i = 0;
    var result = [];
    var key;

    for (key in O) {
      !hasOwnProperty_1(hiddenKeys$1, key) && hasOwnProperty_1(O, key) && push$2(result, key);
    } // Don't enum bug & hidden keys


    while (names.length > i) {
      if (hasOwnProperty_1(O, key = names[i++])) {
        ~indexOf(result, key) || push$2(result, key);
      }
    }

    return result;
  };

  // IE8- don't enum bug keys
  var enumBugKeys = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];

  // https://tc39.es/ecma262/#sec-object.keys
  // eslint-disable-next-line es-x/no-object-keys -- safe

  var objectKeys = keys$1 || function keys(O) {
    return objectKeysInternal(O, enumBugKeys);
  };

  var require$$0$2 = objectDefineProperty;

  // https://tc39.es/ecma262/#sec-object.defineproperties
  // eslint-disable-next-line es-x/no-object-defineproperties -- safe

  var f$7 = DESCRIPTORS && !v8PrototypeDefineBug ? defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var props = toIndexedObject$1(Properties);
    var keys = objectKeys$1(Properties);
    var length = keys.length;
    var index = 0;
    var key;

    while (length > index) {
      require$$0$2.f(O, key = keys[index++], props[key]);
    }

    return O;
  };
  var objectDefineProperties = {
    f: f$7
  };

  var html = getBuiltIn('document', 'documentElement');

  var keys = shared('keys');

  var sharedKey = function sharedKey(key) {
    return keys[key] || (keys[key] = uid(key));
  };

  /* global ActiveXObject -- old IE, WSH */

  var GT = '>';
  var LT = '<';
  var PROTOTYPE$1 = 'prototype';
  var SCRIPT = 'script';
  var IE_PROTO$1 = sharedKey('IE_PROTO');

  var EmptyConstructor = function EmptyConstructor() {
    /* empty */
  };

  var scriptTag = function scriptTag(content) {
    return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
  }; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype


  var NullProtoObjectViaActiveX = function NullProtoObjectViaActiveX(activeXDocument) {
    activeXDocument.write(scriptTag(''));
    activeXDocument.close();
    var temp = activeXDocument.parentWindow.Object;
    activeXDocument = null; // avoid memory leak

    return temp;
  }; // Create object with fake `null` prototype: use iframe Object with cleared prototype


  var NullProtoObjectViaIFrame = function NullProtoObjectViaIFrame() {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = documentCreateElement('iframe');
    var JS = 'java' + SCRIPT + ':';
    var iframeDocument;
    iframe.style.display = 'none';
    html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475

    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag('document.F=Object'));
    iframeDocument.close();
    return iframeDocument.F;
  }; // Check for document.domain and active x support
  // No need to use active x approach when document.domain is not set
  // see https://github.com/es-shims/es5-shim/issues/150
  // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
  // avoid IE GC bug


  var activeXDocument;

  var _NullProtoObject = function NullProtoObject() {
    try {
      activeXDocument = new ActiveXObject('htmlfile');
    } catch (error) {
      /* ignore */
    }

    _NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE
    : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH

    var length = enumBugKeys.length;

    while (length--) {
      delete _NullProtoObject[PROTOTYPE$1][enumBugKeys[length]];
    }

    return _NullProtoObject();
  };

  hiddenKeys$1[IE_PROTO$1] = true; // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  // eslint-disable-next-line es-x/no-object-create -- safe

  var objectCreate = _Object$create || function create(O, Properties) {
    var result;

    if (O !== null) {
      EmptyConstructor[PROTOTYPE$1] = anObject(O);
      result = new EmptyConstructor();
      EmptyConstructor[PROTOTYPE$1] = null; // add "__proto__" for Object.getPrototypeOf polyfill

      result[IE_PROTO$1] = O;
    } else result = _NullProtoObject();

    return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
  };

  var toPropertyKey$1 = toPropertyKey;

  var createProperty = function createProperty(object, key, value) {
    var propertyKey = toPropertyKey$1(key);
    if (propertyKey in object) require$$0$2.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;
  };

  var $Array$2 = Array;
  var max$2 = Math.max;

  var arraySliceSimple = function arraySliceSimple(O, start, end) {
    var length = lengthOfArrayLike(O);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = $Array$2(max$2(fin - k, 0));

    for (var n = 0; k < fin; k++, n++) {
      createProperty(result, n, O[k]);
    }

    result.length = n;
    return result;
  };

  var getOwnPropertyNamesModule = objectGetOwnPropertyNames;

  /* eslint-disable es-x/no-object-getownpropertynames -- safe */

  var $getOwnPropertyNames$1 = getOwnPropertyNamesModule.f;
  var windowNames = typeof window == 'object' && window && _Object$getOwnPropertyNames ? _Object$getOwnPropertyNames(window) : [];

  var getWindowNames = function getWindowNames(it) {
    try {
      return $getOwnPropertyNames$1(it);
    } catch (error) {
      return arraySliceSimple(windowNames);
    }
  }; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window


  var f$6 = function getOwnPropertyNames(it) {
    return windowNames && classof$1(it) == 'Window' ? getWindowNames(it) : $getOwnPropertyNames$1(toIndexedObject$1(it));
  };

  var objectGetOwnPropertyNamesExternal = {
    f: f$6
  };

  var getOwnPropertyNames$3 = objectGetOwnPropertyNamesExternal.f; // eslint-disable-next-line es-x/no-object-getownpropertynames -- required for testing

  var FAILS_ON_PRIMITIVES$4 = fails(function () {
    return !_Object$getOwnPropertyNames(1);
  }); // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames

  $({
    target: 'Object',
    stat: true,
    forced: FAILS_ON_PRIMITIVES$4
  }, {
    getOwnPropertyNames: getOwnPropertyNames$3
  });

  var Object$1 = path.Object;

  var getOwnPropertyNames$2 = function getOwnPropertyNames(it) {
    return Object$1.getOwnPropertyNames(it);
  };

  var getOwnPropertyNames$1 = getOwnPropertyNames$2;

  var getOwnPropertyNames = getOwnPropertyNames$1;
  var _Object$getOwnPropertyNames = getOwnPropertyNames;

  var hiddenKeys = _concatInstanceProperty(enumBugKeys).call(enumBugKeys, 'length', 'prototype'); // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  // eslint-disable-next-line es-x/no-object-getownpropertynames -- safe


  var f$5 = _Object$getOwnPropertyNames || function getOwnPropertyNames(O) {
    return objectKeysInternal(O, hiddenKeys);
  };

  var objectGetOwnPropertyNames = {
    f: f$5
  };

  // eslint-disable-next-line es-x/no-object-getownpropertysymbols -- safe
  var f$4 = getOwnPropertySymbols;
  var objectGetOwnPropertySymbols = {
    f: f$4
  };

  var $propertyIsEnumerable$1 = {}.propertyIsEnumerable; // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe

  var getOwnPropertyDescriptor$3 = _Object$getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug

  var NASHORN_BUG = getOwnPropertyDescriptor$3 && !$propertyIsEnumerable$1.call({
    1: 2
  }, 1); // `Object.prototype.propertyIsEnumerable` method implementation
  // https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable

  var f$3 = NASHORN_BUG ? function propertyIsEnumerable(V) {
    var descriptor = getOwnPropertyDescriptor$3(this, V);
    return !!descriptor && descriptor.enumerable;
  } : $propertyIsEnumerable$1;
  var objectPropertyIsEnumerable = {
    f: f$3
  };

  var createNonEnumerableProperty = DESCRIPTORS ? function (object, key, value) {
    return require$$0$2.f(object, key, createPropertyDescriptor(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  var defineBuiltIn = function defineBuiltIn(target, key, value, options) {
    if (options && options.enumerable) target[key] = value;else createNonEnumerableProperty(target, key, value);
    return target;
  };

  var f$2 = wellKnownSymbol$1;
  var wellKnownSymbolWrapped = {
    f: f$2
  };

  var defineProperty$5 = require$$0$2.f;

  var defineWellKnownSymbol = function defineWellKnownSymbol(NAME) {
    var Symbol = path.Symbol || (path.Symbol = {});
    if (!hasOwnProperty_1(Symbol, NAME)) defineProperty$5(Symbol, NAME, {
      value: wellKnownSymbolWrapped.f(NAME)
    });
  };

  var symbolDefineToPrimitive = function symbolDefineToPrimitive() {
    var Symbol = getBuiltIn('Symbol');
    var SymbolPrototype = Symbol && Symbol.prototype;
    var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
    var TO_PRIMITIVE = wellKnownSymbol$1('toPrimitive');

    if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
      // `Symbol.prototype[@@toPrimitive]` method
      // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
      // eslint-disable-next-line no-unused-vars -- required for .length
      defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {
        return functionCall(valueOf, this);
      }, {
        arity: 1
      });
    }
  };

  var TO_STRING_TAG_SUPPORT = toStringTagSupport;

  // https://tc39.es/ecma262/#sec-object.prototype.tostring


  var objectToString = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
    return '[object ' + classof$2(this) + ']';
  };

  var defineProperty$4 = require$$0$2.f;
  var TO_STRING_TAG$3 = wellKnownSymbol$1('toStringTag');

  var setToStringTag = function setToStringTag(it, TAG, STATIC, SET_METHOD) {
    if (it) {
      var target = STATIC ? it : it.prototype;

      if (!hasOwnProperty_1(target, TO_STRING_TAG$3)) {
        defineProperty$4(target, TO_STRING_TAG$3, {
          configurable: true,
          value: TAG
        });
      }

      if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {
        createNonEnumerableProperty(target, 'toString', objectToString);
      }
    }
  };

  var defineBuiltIns = function defineBuiltIns(target, src, options) {
    for (var key in src) {
      if (options && options.unsafe && target[key]) target[key] = src[key];else defineBuiltIn(target, key, src[key], options);
    }

    return target;
  };

  var $TypeError$8 = TypeError;
  var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

  var doesNotExceedSafeInteger = function doesNotExceedSafeInteger(it) {
    if (it > MAX_SAFE_INTEGER) throw $TypeError$8('Maximum allowed index exceeded');
    return it;
  };

  var isConstructor$1 = isConstructor;

  var SPECIES$2 = wellKnownSymbol$1('species');
  var $Array$1 = Array; // a part of `ArraySpeciesCreate` abstract operation
  // https://tc39.es/ecma262/#sec-arrayspeciescreate

  var arraySpeciesConstructor = function arraySpeciesConstructor(originalArray) {
    var C;

    if (isArray$4(originalArray)) {
      C = originalArray.constructor; // cross-realm fallback

      if (isConstructor$1(C) && (C === $Array$1 || isArray$4(C.prototype))) C = undefined;else if (isObject(C)) {
        C = C[SPECIES$2];
        if (C === null) C = undefined;
      }
    }

    return C === undefined ? $Array$1 : C;
  };

  // https://tc39.es/ecma262/#sec-arrayspeciescreate

  var arraySpeciesCreate = function arraySpeciesCreate(originalArray, length) {
    return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
  };

  var $TypeError$7 = TypeError;

  var deletePropertyOrThrow = function deletePropertyOrThrow(O, P) {
    if (!delete O[P]) throw $TypeError$7('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));
  };

  var engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';

  var process = global$1.process;
  var Deno = global$1.Deno;
  var versions = process && process.versions || Deno && Deno.version;
  var v8 = versions && versions.v8;
  var match, version;

  if (v8) {
    match = v8.split('.'); // in old Chrome, versions of V8 isn't V8 = Chrome / 10
    // but their correct versions are not interesting for us

    version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
  } // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
  // so check `userAgent` even if `.v8` exists, but 0


  if (!version && engineUserAgent) {
    match = engineUserAgent.match(/Edge\/(\d+)/);

    if (!match || match[1] >= 74) {
      match = engineUserAgent.match(/Chrome\/(\d+)/);
      if (match) version = +match[1];
    }
  }

  var engineV8Version = version;

  var SPECIES$1 = wellKnownSymbol$1('species');

  var arrayMethodHasSpeciesSupport = function arrayMethodHasSpeciesSupport(METHOD_NAME) {
    // We can't use this feature detection in V8 since it causes
    // deoptimization and serious performance degradation
    // https://github.com/zloirock/core-js/issues/677
    return engineV8Version >= 51 || !fails(function () {
      var array = [];
      var constructor = array.constructor = {};

      constructor[SPECIES$1] = function () {
        return {
          foo: 1
        };
      };

      return array[METHOD_NAME](Boolean).foo !== 1;
    });
  };

  var HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport('splice');
  var max$1 = Math.max;
  var min = Math.min; // `Array.prototype.splice` method
  // https://tc39.es/ecma262/#sec-array.prototype.splice
  // with adding support of @@species

  $({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT$3
  }, {
    splice: function splice(start, deleteCount
    /* , ...items */
    ) {
      var O = toObject(this);
      var len = lengthOfArrayLike(O);
      var actualStart = toAbsoluteIndex(start, len);
      var argumentsLength = arguments.length;
      var insertCount, actualDeleteCount, A, k, from, to;

      if (argumentsLength === 0) {
        insertCount = actualDeleteCount = 0;
      } else if (argumentsLength === 1) {
        insertCount = 0;
        actualDeleteCount = len - actualStart;
      } else {
        insertCount = argumentsLength - 2;
        actualDeleteCount = min(max$1(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
      }

      doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);
      A = arraySpeciesCreate(O, actualDeleteCount);

      for (k = 0; k < actualDeleteCount; k++) {
        from = actualStart + k;
        if (from in O) createProperty(A, k, O[from]);
      }

      A.length = actualDeleteCount;

      if (insertCount < actualDeleteCount) {
        for (k = actualStart; k < len - actualDeleteCount; k++) {
          from = k + actualDeleteCount;
          to = k + insertCount;
          if (from in O) O[to] = O[from];else deletePropertyOrThrow(O, to);
        }

        for (k = len; k > len - actualDeleteCount + insertCount; k--) {
          deletePropertyOrThrow(O, k - 1);
        }
      } else if (insertCount > actualDeleteCount) {
        for (k = len - actualDeleteCount; k > actualStart; k--) {
          from = k + actualDeleteCount - 1;
          to = k + insertCount - 1;
          if (from in O) O[to] = O[from];else deletePropertyOrThrow(O, to);
        }
      }

      for (k = 0; k < insertCount; k++) {
        O[k + actualStart] = arguments[k + 2];
      }

      O.length = len - actualDeleteCount + insertCount;
      return A;
    }
  });

  var splice$4 = _spliceInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$a = Array.prototype;

  var splice$3 = function splice(it) {
    var own = _spliceInstanceProperty(it);

    return it === ArrayPrototype$a || objectIsPrototypeOf(ArrayPrototype$a, it) && own === _spliceInstanceProperty(ArrayPrototype$a) ? splice$4 : own;
  };

  var splice$2 = splice$3;

  var splice$1 = splice$2;
  var _spliceInstanceProperty = splice$1;

  var isExtensible$3 = objectIsExtensible;

  // https://tc39.es/ecma262/#sec-object.isextensible
  // eslint-disable-next-line es-x/no-object-isextensible -- safe

  $({
    target: 'Object',
    stat: true,
    forced: isExtensible !== isExtensible$3
  }, {
    isExtensible: isExtensible$3
  });

  var isExtensible$2 = path.Object.isExtensible;

  var isExtensible$1 = isExtensible$2;

  var isExtensible = isExtensible$1;

  var arrayBufferNonExtensible = fails(function () {
    if (typeof ArrayBuffer == 'function') {
      var buffer = new ArrayBuffer(8); // eslint-disable-next-line es-x/no-object-isextensible, es-x/no-object-defineproperty -- safe

      if (isExtensible(buffer)) defineProperty(buffer, 'a', {
        value: 8
      });
    }
  });

  var $isExtensible = isExtensible;
  var FAILS_ON_PRIMITIVES$3 = fails(function () {
    $isExtensible(1);
  }); // `Object.isExtensible` method
  // https://tc39.es/ecma262/#sec-object.isextensible

  var objectIsExtensible = FAILS_ON_PRIMITIVES$3 || arrayBufferNonExtensible ? function isExtensible(it) {
    if (!isObject(it)) return false;
    if (arrayBufferNonExtensible && classof$1(it) == 'ArrayBuffer') return false;
    return $isExtensible ? $isExtensible(it) : true;
  } : $isExtensible;

  var InternalMetadataModule = internalMetadata;

  var FREEZING = freezing;

  var onFreeze = InternalMetadataModule.onFreeze; // eslint-disable-next-line es-x/no-object-preventextensions -- safe

  var $preventExtensions = _Object$preventExtensions;
  var FAILS_ON_PRIMITIVES$2 = fails(function () {
    $preventExtensions(1);
  }); // `Object.preventExtensions` method
  // https://tc39.es/ecma262/#sec-object.preventextensions

  $({
    target: 'Object',
    stat: true,
    forced: FAILS_ON_PRIMITIVES$2,
    sham: !FREEZING
  }, {
    preventExtensions: function preventExtensions(it) {
      return $preventExtensions && isObject(it) ? $preventExtensions(onFreeze(it)) : it;
    }
  });

  var preventExtensions$2 = path.Object.preventExtensions;

  var preventExtensions$1 = preventExtensions$2;

  var preventExtensions = preventExtensions$1;
  var _Object$preventExtensions = preventExtensions;

  var freezing = !fails(function () {
    // eslint-disable-next-line es-x/no-object-isextensible, es-x/no-object-preventextensions -- required for testing
    return isExtensible(_Object$preventExtensions({}));
  });

  var internalMetadata = createCommonjsModule(function (module) {
    var defineProperty = require$$0$2.f;
    var REQUIRED = false;
    var METADATA = uid('meta');
    var id = 0;

    var setMetadata = function setMetadata(it) {
      defineProperty(it, METADATA, {
        value: {
          objectID: 'O' + id++,
          // object ID
          weakData: {} // weak collections IDs

        }
      });
    };

    var fastKey = function fastKey(it, create) {
      // return a primitive with prefix
      if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;

      if (!hasOwnProperty_1(it, METADATA)) {
        // can't set metadata to uncaught frozen object
        if (!isExtensible$3(it)) return 'F'; // not necessary to add metadata

        if (!create) return 'E'; // add missing metadata

        setMetadata(it); // return object ID
      }

      return it[METADATA].objectID;
    };

    var getWeakData = function getWeakData(it, create) {
      if (!hasOwnProperty_1(it, METADATA)) {
        // can't set metadata to uncaught frozen object
        if (!isExtensible$3(it)) return true; // not necessary to add metadata

        if (!create) return false; // add missing metadata

        setMetadata(it); // return the store of weak collections IDs
      }

      return it[METADATA].weakData;
    }; // add metadata on freeze-family methods calling


    var onFreeze = function onFreeze(it) {
      if (FREEZING && REQUIRED && isExtensible$3(it) && !hasOwnProperty_1(it, METADATA)) setMetadata(it);
      return it;
    };

    var enable = function enable() {
      meta.enable = function () {
        /* empty */
      };

      REQUIRED = true;
      var getOwnPropertyNames = getOwnPropertyNamesModule.f;
      var splice = uncurryThis$1(_spliceInstanceProperty([]));
      var test = {};
      test[METADATA] = 1; // prevent exposing of metadata key

      if (getOwnPropertyNames(test).length) {
        getOwnPropertyNamesModule.f = function (it) {
          var result = getOwnPropertyNames(it);

          for (var i = 0, length = result.length; i < length; i++) {
            if (result[i] === METADATA) {
              splice(result, i, 1);
              break;
            }
          }

          return result;
        };

        $({
          target: 'Object',
          stat: true,
          forced: true
        }, {
          getOwnPropertyNames: objectGetOwnPropertyNamesExternal.f
        });
      }
    };

    var meta = module.exports = {
      enable: enable,
      fastKey: fastKey,
      getWeakData: getWeakData,
      onFreeze: onFreeze
    };
    hiddenKeys$1[METADATA] = true;
  });
  internalMetadata.enable;
  internalMetadata.fastKey;
  internalMetadata.getWeakData;
  internalMetadata.onFreeze;

  var entries$3 = _entriesInstanceProperty(entryVirtual('Array'));

  var entries$2 = entries$3;

  var ArrayPrototype$9 = Array.prototype;
  var DOMIterables$1 = {
    DOMTokenList: true,
    NodeList: true
  };

  var entries$1 = function entries(it) {
    var own = _entriesInstanceProperty(it);

    return it === ArrayPrototype$9 || objectIsPrototypeOf(ArrayPrototype$9, it) && own === _entriesInstanceProperty(ArrayPrototype$9) || hasOwnProperty_1(DOMIterables$1, classof$2(it)) ? entries$2 : own;
  };

  var entries = entries$1;
  var _entriesInstanceProperty = entries;

  var bind$5 = uncurryThis$1(_bindInstanceProperty(uncurryThis$1)); // optional / simple context binding

  var functionBindContext = function functionBindContext(fn, that) {
    aCallable(fn);
    return that === undefined ? fn : NATIVE_BIND ? bind$5(fn, that) : function
      /* ...args */
    () {
      return fn.apply(that, arguments);
    };
  };

  var iterators = {};

  var ITERATOR$3 = wellKnownSymbol$1('iterator');
  var ArrayPrototype$8 = Array.prototype; // check on default Array iterator

  var isArrayIteratorMethod = function isArrayIteratorMethod(it) {
    return it !== undefined && (iterators.Array === it || ArrayPrototype$8[ITERATOR$3] === it);
  };

  // https://tc39.es/ecma262/#sec-getmethod

  var getMethod = function getMethod(V, P) {
    var func = V[P];
    return func == null ? undefined : aCallable(func);
  };

  var ITERATOR$2 = wellKnownSymbol$1('iterator');

  var getIteratorMethod = function getIteratorMethod(it) {
    if (it != undefined) return getMethod(it, ITERATOR$2) || getMethod(it, '@@iterator') || iterators[classof$2(it)];
  };

  var $TypeError$6 = TypeError;

  var getIterator = function getIterator(argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
    if (aCallable(iteratorMethod)) return anObject(functionCall(iteratorMethod, argument));
    throw $TypeError$6(tryToString(argument) + ' is not iterable');
  };

  var iteratorClose = function iteratorClose(iterator, kind, value) {
    var innerResult, innerError;
    anObject(iterator);

    try {
      innerResult = getMethod(iterator, 'return');

      if (!innerResult) {
        if (kind === 'throw') throw value;
        return value;
      }

      innerResult = functionCall(innerResult, iterator);
    } catch (error) {
      innerError = true;
      innerResult = error;
    }

    if (kind === 'throw') throw value;
    if (innerError) throw innerResult;
    anObject(innerResult);
    return value;
  };

  var $TypeError$5 = TypeError;

  var Result = function Result(stopped, result) {
    this.stopped = stopped;
    this.result = result;
  };

  var ResultPrototype = Result.prototype;

  var iterate = function iterate(iterable, unboundFunction, options) {
    var that = options && options.that;
    var AS_ENTRIES = !!(options && options.AS_ENTRIES);
    var IS_RECORD = !!(options && options.IS_RECORD);
    var IS_ITERATOR = !!(options && options.IS_ITERATOR);
    var INTERRUPTED = !!(options && options.INTERRUPTED);
    var fn = functionBindContext(unboundFunction, that);
    var iterator, iterFn, index, length, result, next, step;

    var stop = function stop(condition) {
      if (iterator) iteratorClose(iterator, 'normal', condition);
      return new Result(true, condition);
    };

    var callFn = function callFn(value) {
      if (AS_ENTRIES) {
        anObject(value);
        return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
      }

      return INTERRUPTED ? fn(value, stop) : fn(value);
    };

    if (IS_RECORD) {
      iterator = iterable.iterator;
    } else if (IS_ITERATOR) {
      iterator = iterable;
    } else {
      iterFn = getIteratorMethod(iterable);
      if (!iterFn) throw $TypeError$5(tryToString(iterable) + ' is not iterable'); // optimisation for array iterators

      if (isArrayIteratorMethod(iterFn)) {
        for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
          result = callFn(iterable[index]);
          if (result && objectIsPrototypeOf(ResultPrototype, result)) return result;
        }

        return new Result(false);
      }

      iterator = getIterator(iterable, iterFn);
    }

    next = IS_RECORD ? iterable.next : iterator.next;

    while (!(step = functionCall(next, iterator)).done) {
      try {
        result = callFn(step.value);
      } catch (error) {
        iteratorClose(iterator, 'throw', error);
      }

      if (typeof result == 'object' && result && objectIsPrototypeOf(ResultPrototype, result)) return result;
    }

    return new Result(false);
  };

  var $TypeError$4 = TypeError;

  var anInstance = function anInstance(it, Prototype) {
    if (objectIsPrototypeOf(Prototype, it)) return it;
    throw $TypeError$4('Incorrect invocation');
  };

  var require$$0$1 = arrayIteration;

  var $map = _mapInstanceProperty(require$$0$1);

  var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport('map'); // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  // with adding support of @@species

  $({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT$2
  }, {
    map: function map(callbackfn
    /* , thisArg */
    ) {
      return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  var map$3 = _mapInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$7 = Array.prototype;

  var map$2 = function map(it) {
    var own = _mapInstanceProperty(it);

    return it === ArrayPrototype$7 || objectIsPrototypeOf(ArrayPrototype$7, it) && own === _mapInstanceProperty(ArrayPrototype$7) ? map$3 : own;
  };

  var map$1 = map$2;

  var map = map$1;
  var _mapInstanceProperty = map;

  var $filter = _filterInstanceProperty(require$$0$1);

  var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport('filter'); // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  // with adding support of @@species

  $({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT$1
  }, {
    filter: function filter(callbackfn
    /* , thisArg */
    ) {
      return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  var filter$3 = _filterInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$6 = Array.prototype;

  var filter$2 = function filter(it) {
    var own = _filterInstanceProperty(it);

    return it === ArrayPrototype$6 || objectIsPrototypeOf(ArrayPrototype$6, it) && own === _filterInstanceProperty(ArrayPrototype$6) ? filter$3 : own;
  };

  var filter$1 = filter$2;

  var filter = filter$1;
  var _filterInstanceProperty = filter;

  var $some = _someInstanceProperty(require$$0$1);

  var STRICT_METHOD$2 = arrayMethodIsStrict('some'); // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some

  $({
    target: 'Array',
    proto: true,
    forced: !STRICT_METHOD$2
  }, {
    some: function some(callbackfn
    /* , thisArg */
    ) {
      return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  var some$3 = _someInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$5 = Array.prototype;

  var some$2 = function some(it) {
    var own = _someInstanceProperty(it);

    return it === ArrayPrototype$5 || objectIsPrototypeOf(ArrayPrototype$5, it) && own === _someInstanceProperty(ArrayPrototype$5) ? some$3 : own;
  };

  var some$1 = some$2;

  var some = some$1;
  var _someInstanceProperty = some;

  var $every = _everyInstanceProperty(require$$0$1);

  var STRICT_METHOD$1 = arrayMethodIsStrict('every'); // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every

  $({
    target: 'Array',
    proto: true,
    forced: !STRICT_METHOD$1
  }, {
    every: function every(callbackfn
    /* , thisArg */
    ) {
      return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  var every$3 = _everyInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$4 = Array.prototype;

  var every$2 = function every(it) {
    var own = _everyInstanceProperty(it);

    return it === ArrayPrototype$4 || objectIsPrototypeOf(ArrayPrototype$4, it) && own === _everyInstanceProperty(ArrayPrototype$4) ? every$3 : own;
  };

  var every$1 = every$2;

  var every = every$1;
  var _everyInstanceProperty = every;

  var _context$2;

  var $find = _findInstanceProperty(require$$0$1);

  var FIND = 'find';
  var SKIPS_HOLES$1 = true; // Shouldn't skip holes

  if (FIND in []) _findInstanceProperty(_context$2 = Array(1)).call(_context$2, function () {
    SKIPS_HOLES$1 = false;
  }); // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find

  $({
    target: 'Array',
    proto: true,
    forced: SKIPS_HOLES$1
  }, {
    find: function find(callbackfn
    /* , that = undefined */
    ) {
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  }); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

  var find$4 = _findInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$3 = Array.prototype;

  var find$3 = function find(it) {
    var own = _findInstanceProperty(it);

    return it === ArrayPrototype$3 || objectIsPrototypeOf(ArrayPrototype$3, it) && own === _findInstanceProperty(ArrayPrototype$3) ? find$4 : own;
  };

  var find$2 = find$3;

  var find$1 = find$2;
  var _findInstanceProperty = find$1;

  var _context$1;

  var $findIndex = _findIndexInstanceProperty(require$$0$1);

  var FIND_INDEX = 'findIndex';
  var SKIPS_HOLES = true; // Shouldn't skip holes

  if (FIND_INDEX in []) _findIndexInstanceProperty(_context$1 = Array(1)).call(_context$1, function () {
    SKIPS_HOLES = false;
  }); // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findindex

  $({
    target: 'Array',
    proto: true,
    forced: SKIPS_HOLES
  }, {
    findIndex: function findIndex(callbackfn
    /* , that = undefined */
    ) {
      return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  }); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

  var findIndex$4 = _findIndexInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$2 = Array.prototype;

  var findIndex$3 = function findIndex(it) {
    var own = _findIndexInstanceProperty(it);

    return it === ArrayPrototype$2 || objectIsPrototypeOf(ArrayPrototype$2, it) && own === _findIndexInstanceProperty(ArrayPrototype$2) ? findIndex$4 : own;
  };

  var findIndex$2 = findIndex$3;

  var findIndex$1 = findIndex$2;
  var _findIndexInstanceProperty = findIndex$1;

  var IndexedObject = indexedObject;

  var push$1 = uncurryThis$1([].push); // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation

  var createMethod$1 = function createMethod(TYPE) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var IS_FILTER_REJECT = TYPE == 7;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    return function ($this, callbackfn, that, specificCreate) {
      var O = toObject($this);
      var self = IndexedObject(O);
      var boundFunction = functionBindContext(callbackfn, that);
      var length = lengthOfArrayLike(self);
      var index = 0;
      var create = specificCreate || arraySpeciesCreate;
      var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
      var value, result;

      for (; length > index; index++) {
        if (NO_HOLES || index in self) {
          value = self[index];
          result = boundFunction(value, index, O);

          if (TYPE) {
            if (IS_MAP) target[index] = result; // map
            else if (result) switch (TYPE) {
              case 3:
                return true;
              // some

              case 5:
                return value;
              // find

              case 6:
                return index;
              // findIndex

              case 2:
                push$1(target, value);
              // filter
            } else switch (TYPE) {
              case 4:
                return false;
              // every

              case 7:
                push$1(target, value);
              // filterReject
            }
          }
        }
      }

      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
  };

  var arrayIteration = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod$1(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod$1(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod$1(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod$1(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod$1(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod$1(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod$1(6),
    // `Array.prototype.filterReject` method
    // https://github.com/tc39/proposal-array-filtering
    filterReject: createMethod$1(7)
  };

  _forEachInstanceProperty(arrayIteration);

  _mapInstanceProperty(arrayIteration);

  _filterInstanceProperty(arrayIteration);

  _someInstanceProperty(arrayIteration);

  _everyInstanceProperty(arrayIteration);

  _findInstanceProperty(arrayIteration);

  _findIndexInstanceProperty(arrayIteration);
  arrayIteration.filterReject;

  var InternalStateModule = internalState;

  var defineProperty$3 = require$$0$2.f;

  var forEach$4 = _forEachInstanceProperty(require$$0$1);

  var setInternalState$4 = InternalStateModule.set;
  var internalStateGetterFor$1 = InternalStateModule.getterFor;

  var collection = function collection(CONSTRUCTOR_NAME, wrapper, common) {
    var IS_MAP = _indexOfInstanceProperty(CONSTRUCTOR_NAME).call(CONSTRUCTOR_NAME, 'Map') !== -1;
    var IS_WEAK = _indexOfInstanceProperty(CONSTRUCTOR_NAME).call(CONSTRUCTOR_NAME, 'Weak') !== -1;
    var ADDER = IS_MAP ? 'set' : 'add';
    var NativeConstructor = global$1[CONSTRUCTOR_NAME];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    var exported = {};
    var Constructor;

    if (!DESCRIPTORS || !isCallable(NativeConstructor) || !(IS_WEAK || _forEachInstanceProperty(NativePrototype) && !fails(function () {
      var _context;

      _entriesInstanceProperty(_context = new NativeConstructor()).call(_context).next();
    }))) {
      // create collection constructor
      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
      InternalMetadataModule.enable();
    } else {
      Constructor = wrapper(function (target, iterable) {
        setInternalState$4(anInstance(target, Prototype), {
          type: CONSTRUCTOR_NAME,
          collection: new NativeConstructor()
        });
        if (iterable != undefined) iterate(iterable, target[ADDER], {
          that: target,
          AS_ENTRIES: IS_MAP
        });
      });
      var Prototype = Constructor.prototype;
      var getInternalState = internalStateGetterFor$1(CONSTRUCTOR_NAME);
      forEach$4(['add', 'clear', 'delete', 'forEach', 'get', 'has', 'set', 'keys', 'values', 'entries'], function (KEY) {
        var IS_ADDER = KEY == 'add' || KEY == 'set';

        if (KEY in NativePrototype && !(IS_WEAK && KEY == 'clear')) {
          createNonEnumerableProperty(Prototype, KEY, function (a, b) {
            var collection = getInternalState(this).collection;
            if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
            var result = collection[KEY](a === 0 ? 0 : a, b);
            return IS_ADDER ? this : result;
          });
        }
      });
      IS_WEAK || defineProperty$3(Prototype, 'size', {
        configurable: true,
        get: function get() {
          return getInternalState(this).collection.size;
        }
      });
    }

    setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);
    exported[CONSTRUCTOR_NAME] = Constructor;
    $({
      global: true,
      forced: true
    }, exported);
    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
    return Constructor;
  };

  var getWeakData = InternalMetadataModule.getWeakData;
  var setInternalState$3 = InternalStateModule.set;
  var internalStateGetterFor = InternalStateModule.getterFor;

  var find = _findInstanceProperty(require$$0$1);

  var findIndex = _findIndexInstanceProperty(require$$0$1);

  var splice = uncurryThis$1(_spliceInstanceProperty([]));
  var id = 0; // fallback for uncaught frozen keys

  var uncaughtFrozenStore = function uncaughtFrozenStore(store) {
    return store.frozen || (store.frozen = new UncaughtFrozenStore());
  };

  var UncaughtFrozenStore = function UncaughtFrozenStore() {
    this.entries = [];
  };

  var findUncaughtFrozen = function findUncaughtFrozen(store, key) {
    return find(_entriesInstanceProperty(store), function (it) {
      return it[0] === key;
    });
  };

  UncaughtFrozenStore.prototype = {
    get: function get(key) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) return entry[1];
    },
    has: function has(key) {
      return !!findUncaughtFrozen(this, key);
    },
    set: function set(key, value) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) entry[1] = value;else _entriesInstanceProperty(this).push([key, value]);
    },
    'delete': function _delete(key) {
      var index = findIndex(_entriesInstanceProperty(this), function (it) {
        return it[0] === key;
      });
      if (~index) splice(_entriesInstanceProperty(this), index, 1);
      return !!~index;
    }
  };
  var collectionWeak = {
    getConstructor: function getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function (that, iterable) {
        anInstance(that, Prototype);
        setInternalState$3(that, {
          type: CONSTRUCTOR_NAME,
          id: id++,
          frozen: undefined
        });
        if (iterable != undefined) iterate(iterable, that[ADDER], {
          that: that,
          AS_ENTRIES: IS_MAP
        });
      });
      var Prototype = Constructor.prototype;
      var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

      var define = function define(that, key, value) {
        var state = getInternalState(that);
        var data = getWeakData(anObject(key), true);
        if (data === true) uncaughtFrozenStore(state).set(key, value);else data[state.id] = value;
        return that;
      };

      defineBuiltIns(Prototype, {
        // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
        // https://tc39.es/ecma262/#sec-weakset.prototype.delete
        'delete': function _delete(key) {
          var state = getInternalState(this);
          if (!isObject(key)) return false;
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state)['delete'](key);
          return data && hasOwnProperty_1(data, state.id) && delete data[state.id];
        },
        // `{ WeakMap, WeakSet }.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-weakmap.prototype.has
        // https://tc39.es/ecma262/#sec-weakset.prototype.has
        has: function has(key) {
          var state = getInternalState(this);
          if (!isObject(key)) return false;
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).has(key);
          return data && hasOwnProperty_1(data, state.id);
        }
      });
      defineBuiltIns(Prototype, IS_MAP ? {
        // `WeakMap.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.get
        get: function get(key) {
          var state = getInternalState(this);

          if (isObject(key)) {
            var data = getWeakData(key);
            if (data === true) return uncaughtFrozenStore(state).get(key);
            return data ? data[state.id] : undefined;
          }
        },
        // `WeakMap.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-weakmap.prototype.set
        set: function set(key, value) {
          return define(this, key, value);
        }
      } : {
        // `WeakSet.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-weakset.prototype.add
        add: function add(value) {
          return define(this, value, true);
        }
      });
      return Constructor;
    }
  };
  collectionWeak.getConstructor;

  var functionToString = uncurryThis$1(Function.toString); // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper

  if (!isCallable(sharedStore.inspectSource)) {
    sharedStore.inspectSource = function (it) {
      return functionToString(it);
    };
  }

  var inspectSource = sharedStore.inspectSource;

  var WeakMap$1 = weakMap;
  var nativeWeakMap = isCallable(WeakMap$1) && /native code/.test(inspectSource(WeakMap$1));

  var enforceInternalState = InternalStateModule.enforce;
  var IS_IE11 = !global$1.ActiveXObject && 'ActiveXObject' in global$1;
  var InternalWeakMap;

  var wrapper = function wrapper(init) {
    return function WeakMap() {
      return init(this, arguments.length ? arguments[0] : undefined);
    };
  }; // `WeakMap` constructor
  // https://tc39.es/ecma262/#sec-weakmap-constructor


  var $WeakMap = collection('WeakMap', wrapper, collectionWeak); // IE11 WeakMap frozen keys fix
  // We can't use feature detection because it crash some old IE builds
  // https://github.com/zloirock/core-js/issues/485

  if (nativeWeakMap && IS_IE11) {
    InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
    InternalMetadataModule.enable();
    var WeakMapPrototype = $WeakMap.prototype;
    var nativeDelete = uncurryThis$1(WeakMapPrototype['delete']);
    var nativeHas = uncurryThis$1(WeakMapPrototype.has);
    var nativeGet = uncurryThis$1(WeakMapPrototype.get);
    var nativeSet = uncurryThis$1(WeakMapPrototype.set);
    defineBuiltIns(WeakMapPrototype, {
      'delete': function _delete(key) {
        if (isObject(key) && !isExtensible$3(key)) {
          var state = enforceInternalState(this);
          if (!state.frozen) state.frozen = new InternalWeakMap();
          return nativeDelete(this, key) || state.frozen['delete'](key);
        }

        return nativeDelete(this, key);
      },
      has: function has(key) {
        if (isObject(key) && !isExtensible$3(key)) {
          var state = enforceInternalState(this);
          if (!state.frozen) state.frozen = new InternalWeakMap();
          return nativeHas(this, key) || state.frozen.has(key);
        }

        return nativeHas(this, key);
      },
      get: function get(key) {
        if (isObject(key) && !isExtensible$3(key)) {
          var state = enforceInternalState(this);
          if (!state.frozen) state.frozen = new InternalWeakMap();
          return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
        }

        return nativeGet(this, key);
      },
      set: function set(key, value) {
        if (isObject(key) && !isExtensible$3(key)) {
          var state = enforceInternalState(this);
          if (!state.frozen) state.frozen = new InternalWeakMap();
          nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
        } else nativeSet(this, key, value);

        return this;
      }
    });
  }

  var weakMap$2 = path.WeakMap;

  var weakMap$1 = weakMap$2;

  var weakMap = weakMap$1;

  var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
  var TypeError$2 = global$1.TypeError;
  var WeakMap = weakMap;
  var set, get, has;

  var enforce = function enforce(it) {
    return has(it) ? get(it) : set(it, {});
  };

  var getterFor = function getterFor(TYPE) {
    return function (it) {
      var state;

      if (!isObject(it) || (state = get(it)).type !== TYPE) {
        throw TypeError$2('Incompatible receiver, ' + TYPE + ' required');
      }

      return state;
    };
  };

  if (nativeWeakMap || sharedStore.state) {
    var store = sharedStore.state || (sharedStore.state = new WeakMap());
    var wmget = uncurryThis$1(store.get);
    var wmhas = uncurryThis$1(store.has);
    var wmset = uncurryThis$1(store.set);

    set = function set(it, metadata) {
      if (wmhas(store, it)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      wmset(store, it, metadata);
      return metadata;
    };

    get = function get(it) {
      return wmget(store, it) || {};
    };

    has = function has(it) {
      return wmhas(store, it);
    };
  } else {
    var STATE = sharedKey('state');
    hiddenKeys$1[STATE] = true;

    set = function set(it, metadata) {
      if (hasOwnProperty_1(it, STATE)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      createNonEnumerableProperty(it, STATE, metadata);
      return metadata;
    };

    get = function get(it) {
      return hasOwnProperty_1(it, STATE) ? it[STATE] : {};
    };

    has = function has(it) {
      return hasOwnProperty_1(it, STATE);
    };
  }

  var internalState = {
    set: set,
    get: get,
    has: has,
    enforce: enforce,
    getterFor: getterFor
  };

  var NATIVE_SYMBOL = nativeSymbol;

  var require$$0 = objectGetOwnPropertyDescriptor;

  var $forEach$1 = _forEachInstanceProperty(require$$0$1);

  var HIDDEN = sharedKey('hidden');
  var SYMBOL = 'Symbol';
  var PROTOTYPE = 'prototype';
  var setInternalState$2 = InternalStateModule.set;
  var getInternalState$2 = InternalStateModule.getterFor(SYMBOL);
  var ObjectPrototype$1 = Object[PROTOTYPE];
  var $Symbol = _Symbol;
  var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
  var TypeError$1 = global$1.TypeError;
  var QObject = global$1.QObject;
  var nativeGetOwnPropertyDescriptor$1 = require$$0.f;
  var nativeDefineProperty = require$$0$2.f;
  var nativeGetOwnPropertyNames = objectGetOwnPropertyNamesExternal.f;
  var nativePropertyIsEnumerable = objectPropertyIsEnumerable.f;
  var push = uncurryThis$1([].push);
  var AllSymbols = shared('symbols');
  var ObjectPrototypeSymbols = shared('op-symbols');
  var WellKnownSymbolsStore$1 = shared('wks'); // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173

  var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687

  var setSymbolDescriptor = DESCRIPTORS && fails(function () {
    return create$3(nativeDefineProperty({}, 'a', {
      get: function get() {
        return nativeDefineProperty(this, 'a', {
          value: 7
        }).a;
      }
    })).a != 7;
  }) ? function (O, P, Attributes) {
    var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype$1, P);
    if (ObjectPrototypeDescriptor) delete ObjectPrototype$1[P];
    nativeDefineProperty(O, P, Attributes);

    if (ObjectPrototypeDescriptor && O !== ObjectPrototype$1) {
      nativeDefineProperty(ObjectPrototype$1, P, ObjectPrototypeDescriptor);
    }
  } : nativeDefineProperty;

  var wrap = function wrap(tag, description) {
    var symbol = AllSymbols[tag] = create$3(SymbolPrototype);
    setInternalState$2(symbol, {
      type: SYMBOL,
      tag: tag,
      description: description
    });
    if (!DESCRIPTORS) symbol.description = description;
    return symbol;
  };

  var $defineProperty$1 = function defineProperty(O, P, Attributes) {
    if (O === ObjectPrototype$1) $defineProperty$1(ObjectPrototypeSymbols, P, Attributes);
    anObject(O);
    var key = toPropertyKey$1(P);
    anObject(Attributes);

    if (hasOwnProperty_1(AllSymbols, key)) {
      if (!Attributes.enumerable) {
        if (!hasOwnProperty_1(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
        O[HIDDEN][key] = true;
      } else {
        if (hasOwnProperty_1(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
        Attributes = create$3(Attributes, {
          enumerable: createPropertyDescriptor(0, false)
        });
      }

      return setSymbolDescriptor(O, key, Attributes);
    }

    return nativeDefineProperty(O, key, Attributes);
  };

  var $defineProperties = function defineProperties(O, Properties) {
    var _context;

    anObject(O);
    var properties = toIndexedObject$1(Properties);

    var keys = _concatInstanceProperty(_context = objectKeys$1(properties)).call(_context, $getOwnPropertySymbols(properties));

    $forEach$1(keys, function (key) {
      if (!DESCRIPTORS || functionCall($propertyIsEnumerable, properties, key)) $defineProperty$1(O, key, properties[key]);
    });
    return O;
  };

  var $create = function create(O, Properties) {
    return Properties === undefined ? create$3(O) : $defineProperties(create$3(O), Properties);
  };

  var $propertyIsEnumerable = function propertyIsEnumerable(V) {
    var P = toPropertyKey$1(V);
    var enumerable = functionCall(nativePropertyIsEnumerable, this, P);
    if (this === ObjectPrototype$1 && hasOwnProperty_1(AllSymbols, P) && !hasOwnProperty_1(ObjectPrototypeSymbols, P)) return false;
    return enumerable || !hasOwnProperty_1(this, P) || !hasOwnProperty_1(AllSymbols, P) || hasOwnProperty_1(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
  };

  var $getOwnPropertyDescriptor$2 = function getOwnPropertyDescriptor(O, P) {
    var it = toIndexedObject$1(O);
    var key = toPropertyKey$1(P);
    if (it === ObjectPrototype$1 && hasOwnProperty_1(AllSymbols, key) && !hasOwnProperty_1(ObjectPrototypeSymbols, key)) return;
    var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);

    if (descriptor && hasOwnProperty_1(AllSymbols, key) && !(hasOwnProperty_1(it, HIDDEN) && it[HIDDEN][key])) {
      descriptor.enumerable = true;
    }

    return descriptor;
  };

  var $getOwnPropertyNames = function getOwnPropertyNames(O) {
    var names = nativeGetOwnPropertyNames(toIndexedObject$1(O));
    var result = [];
    $forEach$1(names, function (key) {
      if (!hasOwnProperty_1(AllSymbols, key) && !hasOwnProperty_1(hiddenKeys$1, key)) push(result, key);
    });
    return result;
  };

  var $getOwnPropertySymbols = function $getOwnPropertySymbols(O) {
    var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$1;
    var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject$1(O));
    var result = [];
    $forEach$1(names, function (key) {
      if (hasOwnProperty_1(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwnProperty_1(ObjectPrototype$1, key))) {
        push(result, AllSymbols[key]);
      }
    });
    return result;
  }; // `Symbol` constructor
  // https://tc39.es/ecma262/#sec-symbol-constructor


  if (!NATIVE_SYMBOL) {
    $Symbol = function Symbol() {
      if (objectIsPrototypeOf(SymbolPrototype, this)) throw TypeError$1('Symbol is not a constructor');
      var description = !arguments.length || arguments[0] === undefined ? undefined : toString_1(arguments[0]);
      var tag = uid(description);

      var setter = function setter(value) {
        if (this === ObjectPrototype$1) functionCall(setter, ObjectPrototypeSymbols, value);
        if (hasOwnProperty_1(this, HIDDEN) && hasOwnProperty_1(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
      };

      if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype$1, tag, {
        configurable: true,
        set: setter
      });
      return wrap(tag, description);
    };

    SymbolPrototype = $Symbol[PROTOTYPE];
    defineBuiltIn(SymbolPrototype, 'toString', function toString() {
      return getInternalState$2(this).tag;
    });
    defineBuiltIn($Symbol, 'withoutSetter', function (description) {
      return wrap(uid(description), description);
    });
    objectPropertyIsEnumerable.f = $propertyIsEnumerable;
    require$$0$2.f = $defineProperty$1;
    definePropertiesModule.f = $defineProperties;
    require$$0.f = $getOwnPropertyDescriptor$2;
    getOwnPropertyNamesModule.f = objectGetOwnPropertyNamesExternal.f = $getOwnPropertyNames;
    objectGetOwnPropertySymbols.f = $getOwnPropertySymbols;

    wellKnownSymbolWrapped.f = function (name) {
      return wrap(wellKnownSymbol$1(name), name);
    };

    if (DESCRIPTORS) {
      // https://github.com/tc39/proposal-Symbol-description
      nativeDefineProperty(SymbolPrototype, 'description', {
        configurable: true,
        get: function description() {
          return getInternalState$2(this).description;
        }
      });
    }
  }

  $({
    global: true,
    constructor: true,
    wrap: true,
    forced: !NATIVE_SYMBOL,
    sham: !NATIVE_SYMBOL
  }, {
    Symbol: $Symbol
  });
  $forEach$1(objectKeys$1(WellKnownSymbolsStore$1), function (name) {
    defineWellKnownSymbol(name);
  });
  $({
    target: SYMBOL,
    stat: true,
    forced: !NATIVE_SYMBOL
  }, {
    useSetter: function useSetter() {
      USE_SETTER = true;
    },
    useSimple: function useSimple() {
      USE_SETTER = false;
    }
  });
  $({
    target: 'Object',
    stat: true,
    forced: !NATIVE_SYMBOL,
    sham: !DESCRIPTORS
  }, {
    // `Object.create` method
    // https://tc39.es/ecma262/#sec-object.create
    create: $create,
    // `Object.defineProperty` method
    // https://tc39.es/ecma262/#sec-object.defineproperty
    defineProperty: $defineProperty$1,
    // `Object.defineProperties` method
    // https://tc39.es/ecma262/#sec-object.defineproperties
    defineProperties: $defineProperties,
    // `Object.getOwnPropertyDescriptor` method
    // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor$2
  });
  $({
    target: 'Object',
    stat: true,
    forced: !NATIVE_SYMBOL
  }, {
    // `Object.getOwnPropertyNames` method
    // https://tc39.es/ecma262/#sec-object.getownpropertynames
    getOwnPropertyNames: $getOwnPropertyNames
  }); // `Symbol.prototype[@@toPrimitive]` method
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive

  symbolDefineToPrimitive(); // `Symbol.prototype[@@toStringTag]` property
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag

  setToStringTag($Symbol, SYMBOL);
  hiddenKeys$1[HIDDEN] = true;

  var _for$2 = path.Symbol['for'];

  var _for$1 = _for$2;

  var _for = _for$1;

  var keyFor$2 = path.Symbol.keyFor;

  var keyFor$1 = keyFor$2;

  var keyFor = keyFor$1;

  /* eslint-disable es-x/no-symbol -- safe */

  var nativeSymbolRegistry = NATIVE_SYMBOL && !!_for && !!keyFor;

  var StringToSymbolRegistry = shared('string-to-symbol-registry');
  var SymbolToStringRegistry$1 = shared('symbol-to-string-registry'); // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for

  $({
    target: 'Symbol',
    stat: true,
    forced: !nativeSymbolRegistry
  }, {
    'for': function _for(key) {
      var string = toString_1(key);
      if (hasOwnProperty_1(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
      var symbol = getBuiltIn('Symbol')(string);
      StringToSymbolRegistry[string] = symbol;
      SymbolToStringRegistry$1[symbol] = string;
      return symbol;
    }
  });

  var isSymbol$1 = isSymbol;

  var SymbolToStringRegistry = shared('symbol-to-string-registry'); // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor

  $({
    target: 'Symbol',
    stat: true,
    forced: !nativeSymbolRegistry
  }, {
    keyFor: function keyFor(sym) {
      if (!isSymbol$1(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');
      if (hasOwnProperty_1(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
    }
  });

  var arraySlice = uncurryThis$1(_sliceInstanceProperty([]));

  var $stringify = getBuiltIn('JSON', 'stringify');
  var exec$1 = uncurryThis$1(/./.exec);
  var charAt$2 = uncurryThis$1(''.charAt);
  var charCodeAt$1 = uncurryThis$1(''.charCodeAt);
  var replace = uncurryThis$1(''.replace);
  var numberToString = uncurryThis$1(1.0.toString);
  var tester = /[\uD800-\uDFFF]/g;
  var low = /^[\uD800-\uDBFF]$/;
  var hi = /^[\uDC00-\uDFFF]$/;
  var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {
    var symbol = getBuiltIn('Symbol')(); // MS Edge converts symbol values to JSON as {}

    return $stringify([symbol]) != '[null]' // WebKit converts symbol values to JSON as null
    || $stringify({
      a: symbol
    }) != '{}' // V8 throws on boxed symbols
    || $stringify(Object(symbol)) != '{}';
  }); // https://github.com/tc39/proposal-well-formed-stringify

  var ILL_FORMED_UNICODE = fails(function () {
    return $stringify("\uDF06\uD834") !== "\"\\udf06\\ud834\"" || $stringify("\uDEAD") !== "\"\\udead\"";
  });

  var stringifyWithSymbolsFix = function stringifyWithSymbolsFix(it, replacer) {
    var args = arraySlice(arguments);
    var $replacer = replacer;
    if (!isObject(replacer) && it === undefined || isSymbol$1(it)) return; // IE8 returns string on undefined

    if (!isArray$4(replacer)) replacer = function replacer(key, value) {
      if (isCallable($replacer)) value = functionCall($replacer, this, key, value);
      if (!isSymbol$1(value)) return value;
    };
    args[1] = replacer;
    return apply$4($stringify, null, args);
  };

  var fixIllFormed = function fixIllFormed(match, offset, string) {
    var prev = charAt$2(string, offset - 1);
    var next = charAt$2(string, offset + 1);

    if (exec$1(low, match) && !exec$1(hi, next) || exec$1(hi, match) && !exec$1(low, prev)) {
      return "\\u" + numberToString(charCodeAt$1(match, 0), 16);
    }

    return match;
  };

  if ($stringify) {
    // `JSON.stringify` method
    // https://tc39.es/ecma262/#sec-json.stringify
    $({
      target: 'JSON',
      stat: true,
      arity: 3,
      forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE
    }, {
      // eslint-disable-next-line no-unused-vars -- required for `.length`
      stringify: function stringify(it, replacer, space) {
        var args = arraySlice(arguments);
        var result = apply$4(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
        return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;
      }
    });
  }

  // https://bugs.chromium.org/p/v8/issues/detail?id=3443

  var FORCED$2 = !NATIVE_SYMBOL || fails(function () {
    objectGetOwnPropertySymbols.f(1);
  }); // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols

  $({
    target: 'Object',
    stat: true,
    forced: FORCED$2
  }, {
    getOwnPropertySymbols: function getOwnPropertySymbols(it) {
      var $getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
      return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
    }
  });

  var getOwnPropertySymbols$2 = path.Object.getOwnPropertySymbols;

  var getOwnPropertySymbols$1 = getOwnPropertySymbols$2;

  var getOwnPropertySymbols = getOwnPropertySymbols$1;

  /* eslint-disable es-x/no-symbol -- required for testing */
  // eslint-disable-next-line es-x/no-object-getownpropertysymbols -- required for testing

  var nativeSymbol = !!getOwnPropertySymbols && !fails(function () {
    var symbol = _Symbol(); // Chrome 38 Symbol has incorrect toString conversion
    // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances


    return !String(symbol) || !(Object(symbol) instanceof _Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !_Symbol.sham && engineV8Version && engineV8Version < 41;
  });

  var USE_SYMBOL_AS_UID = useSymbolAsUid;

  var WellKnownSymbolsStore = shared('wks');
  var Symbol = _Symbol;
  var symbolFor = Symbol && Symbol['for'];
  var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

  var wellKnownSymbol = function wellKnownSymbol(name) {
    if (!hasOwnProperty_1(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
      var description = 'Symbol.' + name;

      if (NATIVE_SYMBOL && hasOwnProperty_1(Symbol, name)) {
        WellKnownSymbolsStore[name] = Symbol[name];
      } else if (USE_SYMBOL_AS_UID && symbolFor) {
        WellKnownSymbolsStore[name] = symbolFor(description);
      } else {
        WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
      }
    }

    return WellKnownSymbolsStore[name];
  };

  var TO_STRING_TAG$2 = wellKnownSymbol$1('toStringTag');
  var test = {};
  test[TO_STRING_TAG$2] = 'z';
  var toStringTagSupport = String(test) === '[object z]';

  var TO_STRING_TAG$1 = wellKnownSymbol$1('toStringTag');
  var $Object$3 = Object; // ES3 wrong here

  var CORRECT_ARGUMENTS = classof$1(function () {
    return arguments;
  }()) == 'Arguments'; // fallback for IE11 Script Access Denied error

  var tryGet = function tryGet(it, key) {
    try {
      return it[key];
    } catch (error) {
      /* empty */
    }
  }; // getting tag from ES6+ `Object.prototype.toString`


  var classof = TO_STRING_TAG_SUPPORT ? classof$1 : function (it) {
    var O, tag, result;
    return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
    : typeof (tag = tryGet(O = $Object$3(it), TO_STRING_TAG$1)) == 'string' ? tag // builtinTag case
    : CORRECT_ARGUMENTS ? classof$1(O) // ES3 arguments fallback
    : (result = classof$1(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
  };

  var noop = function noop() {
    /* empty */
  };

  var empty = [];
  var construct$1 = getBuiltIn('Reflect', 'construct');
  var constructorRegExp = /^\s*(?:class|function)\b/;
  var exec = uncurryThis$1(constructorRegExp.exec);
  var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

  var isConstructorModern = function isConstructor(argument) {
    if (!isCallable(argument)) return false;

    try {
      construct$1(noop, empty, argument);
      return true;
    } catch (error) {
      return false;
    }
  };

  var isConstructorLegacy = function isConstructor(argument) {
    if (!isCallable(argument)) return false;

    switch (classof$2(argument)) {
      case 'AsyncFunction':
      case 'GeneratorFunction':
      case 'AsyncGeneratorFunction':
        return false;
    }

    try {
      // we can't check .prototype since constructors produced by .bind haven't it
      // `Function#toString` throws on some built-it function in some legacy engines
      // (for example, `DOMQuad` and similar in FF41-)
      return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
    } catch (error) {
      return true;
    }
  };

  isConstructorLegacy.sham = true; // `IsConstructor` abstract operation
  // https://tc39.es/ecma262/#sec-isconstructor

  var isConstructor = !construct$1 || fails(function () {
    var called;
    return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {
      called = true;
    }) || called;
  }) ? isConstructorLegacy : isConstructorModern;

  var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
  var SPECIES = wellKnownSymbol$1('species');
  var $Array = Array;
  var max = Math.max; // `Array.prototype.slice` method
  // https://tc39.es/ecma262/#sec-array.prototype.slice
  // fallback for not array-like ES3 strings and DOM objects

  $({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT
  }, {
    slice: function slice(start, end) {
      var O = toIndexedObject$1(this);
      var length = lengthOfArrayLike(O);
      var k = toAbsoluteIndex(start, length);
      var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible

      var Constructor, result, n;

      if (isArray$4(O)) {
        Constructor = O.constructor; // cross-realm fallback

        if (isConstructor$1(Constructor) && (Constructor === $Array || isArray$4(Constructor.prototype))) {
          Constructor = undefined;
        } else if (isObject(Constructor)) {
          Constructor = Constructor[SPECIES];
          if (Constructor === null) Constructor = undefined;
        }

        if (Constructor === $Array || Constructor === undefined) {
          return arraySlice(O, k, fin);
        }
      }

      result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));

      for (n = 0; k < fin; k++, n++) {
        if (k in O) createProperty(result, n, O[k]);
      }

      result.length = n;
      return result;
    }
  });

  var slice$3 = _sliceInstanceProperty(entryVirtual('Array'));

  var ArrayPrototype$1 = Array.prototype;

  var slice$2 = function slice(it) {
    var own = _sliceInstanceProperty(it);

    return it === ArrayPrototype$1 || objectIsPrototypeOf(ArrayPrototype$1, it) && own === _sliceInstanceProperty(ArrayPrototype$1) ? slice$3 : own;
  };

  var slice$1 = slice$2;

  var slice = slice$1;
  var _sliceInstanceProperty = slice;

  var toString = uncurryThis$1({}.toString);
  var stringSlice$1 = uncurryThis$1(_sliceInstanceProperty(''));

  var classofRaw = function classofRaw(it) {
    return stringSlice$1(toString(it), 8, -1);
  };

  // https://tc39.es/ecma262/#sec-isarray
  // eslint-disable-next-line es-x/no-array-isarray -- safe

  var isArray = _Array$isArray || function isArray(argument) {
    return classof$1(argument) == 'Array';
  };

  var IS_CONCAT_SPREADABLE = wellKnownSymbol$1('isConcatSpreadable'); // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/679

  var IS_CONCAT_SPREADABLE_SUPPORT = engineV8Version >= 51 || !fails(function () {
    var array = [];
    array[IS_CONCAT_SPREADABLE] = false;
    return _concatInstanceProperty(array).call(array)[0] !== array;
  });
  var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

  var isConcatSpreadable = function isConcatSpreadable(O) {
    if (!isObject(O)) return false;
    var spreadable = O[IS_CONCAT_SPREADABLE];
    return spreadable !== undefined ? !!spreadable : isArray$4(O);
  };

  var FORCED$1 = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method
  // https://tc39.es/ecma262/#sec-array.prototype.concat
  // with adding support of @@isConcatSpreadable and @@species

  $({
    target: 'Array',
    proto: true,
    arity: 1,
    forced: FORCED$1
  }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    concat: function concat(arg) {
      var O = toObject(this);
      var A = arraySpeciesCreate(O, 0);
      var n = 0;
      var i, k, length, len, E;

      for (i = -1, length = arguments.length; i < length; i++) {
        E = i === -1 ? O : arguments[i];

        if (isConcatSpreadable(E)) {
          len = lengthOfArrayLike(E);
          doesNotExceedSafeInteger(n + len);

          for (k = 0; k < len; k++, n++) {
            if (k in E) createProperty(A, n, E[k]);
          }
        } else {
          doesNotExceedSafeInteger(n + 1);
          createProperty(A, n++, E);
        }
      }

      A.length = n;
      return A;
    }
  });

  // https://tc39.es/ecma262/#sec-symbol.asynciterator

  defineWellKnownSymbol('asyncIterator');

  // https://tc39.es/ecma262/#sec-symbol.hasinstance

  defineWellKnownSymbol('hasInstance');

  // https://tc39.es/ecma262/#sec-symbol.isconcatspreadable

  defineWellKnownSymbol('isConcatSpreadable');

  // https://tc39.es/ecma262/#sec-symbol.iterator

  defineWellKnownSymbol('iterator');

  // https://tc39.es/ecma262/#sec-symbol.match

  defineWellKnownSymbol('match');

  // https://tc39.es/ecma262/#sec-symbol.matchall

  defineWellKnownSymbol('matchAll');

  // https://tc39.es/ecma262/#sec-symbol.replace

  defineWellKnownSymbol('replace');

  // https://tc39.es/ecma262/#sec-symbol.search

  defineWellKnownSymbol('search');

  // https://tc39.es/ecma262/#sec-symbol.species

  defineWellKnownSymbol('species');

  // https://tc39.es/ecma262/#sec-symbol.split

  defineWellKnownSymbol('split');

  // https://tc39.es/ecma262/#sec-symbol.toprimitive

  defineWellKnownSymbol('toPrimitive'); // `Symbol.prototype[@@toPrimitive]` method
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive

  symbolDefineToPrimitive();

  // https://tc39.es/ecma262/#sec-symbol.tostringtag

  defineWellKnownSymbol('toStringTag'); // `Symbol.prototype[@@toStringTag]` property
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag

  setToStringTag(getBuiltIn('Symbol'), 'Symbol');

  // https://tc39.es/ecma262/#sec-symbol.unscopables

  defineWellKnownSymbol('unscopables');

  // https://tc39.es/ecma262/#sec-json-@@tostringtag

  setToStringTag(global$1.JSON, 'JSON', true);

  var symbol$2 = path.Symbol;

  var symbol$1 = symbol$2;

  var symbol = symbol$1;
  var _Symbol = symbol;

  var charAt$1 = uncurryThis$1(''.charAt);
  var charCodeAt = uncurryThis$1(''.charCodeAt);
  var stringSlice = uncurryThis$1(_sliceInstanceProperty(''));

  var createMethod = function createMethod(CONVERT_TO_STRING) {
    return function ($this, pos) {
      var S = toString_1(requireObjectCoercible($this));
      var position = toIntegerOrInfinity(pos);
      var size = S.length;
      var first, second;
      if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
      first = charCodeAt(S, position);
      return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt$1(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
    };
  };

  var stringMultibyte = {
    // `String.prototype.codePointAt` method
    // https://tc39.es/ecma262/#sec-string.prototype.codepointat
    codeAt: createMethod(false),
    // `String.prototype.at` method
    // https://github.com/mathiasbynens/String.prototype.at
    charAt: createMethod(true)
  };

  var FunctionPrototype$2 = Function.prototype; // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe

  var getDescriptor = DESCRIPTORS && _Object$getOwnPropertyDescriptor;
  var EXISTS = hasOwnProperty_1(FunctionPrototype$2, 'name'); // additional protection from minified / mangled / dropped function names

  var PROPER = EXISTS && function something() {
    /* empty */
  }.name === 'something';

  var CONFIGURABLE$1 = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype$2, 'name').configurable);
  var functionName = {
    EXISTS: EXISTS,
    PROPER: PROPER,
    CONFIGURABLE: CONFIGURABLE$1
  };

  var correctPrototypeGetter = !fails(function () {
    function F() {
      /* empty */
    }

    F.prototype.constructor = null; // eslint-disable-next-line es-x/no-object-getprototypeof -- required for testing

    return getPrototypeOf(new F()) !== F.prototype;
  });

  var getPrototypeOf$3 = objectGetPrototypeOf;

  var FAILS_ON_PRIMITIVES$1 = fails(function () {
    getPrototypeOf$3(1);
  }); // `Object.getPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.getprototypeof

  $({
    target: 'Object',
    stat: true,
    forced: FAILS_ON_PRIMITIVES$1,
    sham: !correctPrototypeGetter
  }, {
    getPrototypeOf: function getPrototypeOf(it) {
      return getPrototypeOf$3(toObject(it));
    }
  });

  var getPrototypeOf$2 = path.Object.getPrototypeOf;

  var getPrototypeOf$1 = getPrototypeOf$2;

  var getPrototypeOf = getPrototypeOf$1;

  var IE_PROTO = sharedKey('IE_PROTO');
  var $Object$2 = Object;
  var ObjectPrototype = $Object$2.prototype; // `Object.getPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.getprototypeof
  // eslint-disable-next-line es-x/no-object-getprototypeof -- safe

  var objectGetPrototypeOf = correctPrototypeGetter ? getPrototypeOf : function (O) {
    var object = toObject(O);
    if (hasOwnProperty_1(object, IE_PROTO)) return object[IE_PROTO];
    var constructor = object.constructor;

    if (isCallable(constructor) && object instanceof constructor) {
      return constructor.prototype;
    }

    return object instanceof $Object$2 ? ObjectPrototype : null;
  };

  var ITERATOR$1 = wellKnownSymbol$1('iterator');
  var BUGGY_SAFARI_ITERATORS$1 = false; // `%IteratorPrototype%` object
  // https://tc39.es/ecma262/#sec-%iteratorprototype%-object

  var IteratorPrototype$1, PrototypeOfArrayIteratorPrototype, arrayIterator;
  /* eslint-disable es-x/no-array-prototype-keys -- safe */

  if (_keysInstanceProperty([])) {
    var _context;

    arrayIterator = _keysInstanceProperty(_context = []).call(_context); // Safari 8 has buggy iterators w/o `next`

    if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;else {
      PrototypeOfArrayIteratorPrototype = getPrototypeOf$3(getPrototypeOf$3(arrayIterator));
      if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$1 = PrototypeOfArrayIteratorPrototype;
    }
  }

  var NEW_ITERATOR_PROTOTYPE = IteratorPrototype$1 == undefined || fails(function () {
    var test = {}; // FF44- legacy iterators case

    return IteratorPrototype$1[ITERATOR$1].call(test) !== test;
  });
  if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$1 = {};else IteratorPrototype$1 = create$3(IteratorPrototype$1); // `%IteratorPrototype%[@@iterator]()` method
  // https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator

  if (!isCallable(IteratorPrototype$1[ITERATOR$1])) {
    defineBuiltIn(IteratorPrototype$1, ITERATOR$1, function () {
      return this;
    });
  }

  var iteratorsCore = {
    IteratorPrototype: IteratorPrototype$1,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
  };

  var IteratorPrototype = iteratorsCore.IteratorPrototype;

  var returnThis$1 = function returnThis() {
    return this;
  };

  var createIteratorConstructor = function createIteratorConstructor(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
    var TO_STRING_TAG = NAME + ' Iterator';
    IteratorConstructor.prototype = create$3(IteratorPrototype, {
      next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next)
    });
    setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
    iterators[TO_STRING_TAG] = returnThis$1;
    return IteratorConstructor;
  };

  var setPrototypeOf$3 = objectSetPrototypeOf;

  // https://tc39.es/ecma262/#sec-object.setprototypeof

  $({
    target: 'Object',
    stat: true
  }, {
    setPrototypeOf: setPrototypeOf$3
  });

  var setPrototypeOf$2 = path.Object.setPrototypeOf;

  var setPrototypeOf$1 = setPrototypeOf$2;

  var setPrototypeOf = setPrototypeOf$1;
  var _Object$setPrototypeOf = setPrototypeOf;

  var $String = String;
  var $TypeError$3 = TypeError;

  var aPossiblePrototype = function aPossiblePrototype(argument) {
    if (typeof argument == 'object' || isCallable(argument)) return argument;
    throw $TypeError$3("Can't set " + $String(argument) + ' as a prototype');
  };

  /* eslint-disable no-proto -- safe */
  // `Object.setPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.setprototypeof
  // Works with __proto__ only. Old v8 can't work with null proto objects.
  // eslint-disable-next-line es-x/no-object-setprototypeof -- safe

  var objectSetPrototypeOf = _Object$setPrototypeOf || ('__proto__' in {} ? function () {
    var CORRECT_SETTER = false;
    var test = {};
    var setter;

    try {
      // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe
      setter = uncurryThis$1(_Object$getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
      setter(test, []);
      CORRECT_SETTER = test instanceof Array;
    } catch (error) {
      /* empty */
    }

    return function setPrototypeOf(O, proto) {
      anObject(O);
      aPossiblePrototype(proto);
      if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;
      return O;
    };
  }() : undefined);

  var PROPER_FUNCTION_NAME = functionName.PROPER;
  var BUGGY_SAFARI_ITERATORS = iteratorsCore.BUGGY_SAFARI_ITERATORS;
  var ITERATOR = wellKnownSymbol$1('iterator');
  var KEYS = 'keys';
  var VALUES = 'values';
  var ENTRIES = 'entries';

  var returnThis = function returnThis() {
    return this;
  };

  var defineIterator = function defineIterator(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
    createIteratorConstructor(IteratorConstructor, NAME, next);

    var getIterationMethod = function getIterationMethod(KIND) {
      if (KIND === DEFAULT && defaultIterator) return defaultIterator;
      if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];

      switch (KIND) {
        case KEYS:
          return function keys() {
            return new IteratorConstructor(this, KIND);
          };

        case VALUES:
          return function values() {
            return new IteratorConstructor(this, KIND);
          };

        case ENTRIES:
          return function entries() {
            return new IteratorConstructor(this, KIND);
          };
      }

      return function () {
        return new IteratorConstructor(this);
      };
    };

    var TO_STRING_TAG = NAME + ' Iterator';
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME == 'Array' ? _entriesInstanceProperty(IterablePrototype) || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY; // fix native

    if (anyNativeIterator) {
      CurrentIteratorPrototype = getPrototypeOf$3(anyNativeIterator.call(new Iterable()));

      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {


        setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
        iterators[TO_STRING_TAG] = returnThis;
      }
    } // fix Array.prototype.{ values, @@iterator }.name in V8 / FF


    if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
      {
        INCORRECT_VALUES_NAME = true;

        defaultIterator = function values() {
          return functionCall(nativeIterator, this);
        };
      }
    } // export additional methods


    if (DEFAULT) {
      methods = {
        values: getIterationMethod(VALUES),
        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
        entries: getIterationMethod(ENTRIES)
      };
      if (FORCED) for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
        }
      } else $({
        target: NAME,
        proto: true,
        forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
      }, methods);
    } // define iterator


    if ((FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
      defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, {
        name: DEFAULT
      });
    }

    iterators[NAME] = defaultIterator;
    return methods;
  };

  var charAt = stringMultibyte.charAt;
  var STRING_ITERATOR = 'String Iterator';
  var setInternalState$1 = InternalStateModule.set;
  var getInternalState$1 = InternalStateModule.getterFor(STRING_ITERATOR); // `String.prototype[@@iterator]` method
  // https://tc39.es/ecma262/#sec-string.prototype-@@iterator

  defineIterator(String, 'String', function (iterated) {
    setInternalState$1(this, {
      type: STRING_ITERATOR,
      string: toString_1(iterated),
      index: 0
    }); // `%StringIteratorPrototype%.next` method
    // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
  }, function next() {
    var state = getInternalState$1(this);
    var string = state.string;
    var index = state.index;
    var point;
    if (index >= string.length) return {
      value: undefined,
      done: true
    };
    point = charAt(string, index);
    state.index += point.length;
    return {
      value: point,
      done: false
    };
  });

  var iterator$2 = wellKnownSymbolWrapped.f('iterator');

  var iterator$1 = iterator$2;

  var iterator = iterator$1;

  /* eslint-disable es-x/no-symbol -- required for testing */

  var useSymbolAsUid = NATIVE_SYMBOL && !_Symbol.sham && typeof iterator == 'symbol';

  var $Object$1 = Object;
  var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
    return typeof it == 'symbol';
  } : function (it) {
    var $Symbol = getBuiltIn('Symbol');
    return isCallable($Symbol) && objectIsPrototypeOf($Symbol.prototype, $Object$1(it));
  };

  var $TypeError$2 = TypeError; // `OrdinaryToPrimitive` abstract operation
  // https://tc39.es/ecma262/#sec-ordinarytoprimitive

  var ordinaryToPrimitive = function ordinaryToPrimitive(input, pref) {
    var fn, val;
    if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = functionCall(fn, input))) return val;
    if (isCallable(fn = input.valueOf) && !isObject(val = functionCall(fn, input))) return val;
    if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = functionCall(fn, input))) return val;
    throw $TypeError$2("Can't convert object to primitive value");
  };

  var $TypeError$1 = TypeError;
  var TO_PRIMITIVE = wellKnownSymbol$1('toPrimitive'); // `ToPrimitive` abstract operation
  // https://tc39.es/ecma262/#sec-toprimitive

  var toPrimitive = function toPrimitive(input, pref) {
    if (!isObject(input) || isSymbol$1(input)) return input;
    var exoticToPrim = getMethod(input, TO_PRIMITIVE);
    var result;

    if (exoticToPrim) {
      if (pref === undefined) pref = 'default';
      result = functionCall(exoticToPrim, input, pref);
      if (!isObject(result) || isSymbol$1(result)) return result;
      throw $TypeError$1("Can't convert object to primitive value");
    }

    if (pref === undefined) pref = 'number';
    return ordinaryToPrimitive(input, pref);
  };

  // https://tc39.es/ecma262/#sec-topropertykey

  var toPropertyKey = function toPropertyKey(argument) {
    var key = toPrimitive(argument, 'string');
    return isSymbol$1(key) ? key : key + '';
  };

  var $TypeError = TypeError; // eslint-disable-next-line es-x/no-object-defineproperty -- safe

  var $defineProperty = defineProperty; // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe

  var $getOwnPropertyDescriptor$1 = _Object$getOwnPropertyDescriptor;
  var ENUMERABLE = 'enumerable';
  var CONFIGURABLE = 'configurable';
  var WRITABLE = 'writable'; // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty

  var f$1 = DESCRIPTORS ? v8PrototypeDefineBug ? function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPropertyKey$1(P);
    anObject(Attributes);

    if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
      var current = $getOwnPropertyDescriptor$1(O, P);

      if (current && current[WRITABLE]) {
        O[P] = Attributes.value;
        Attributes = {
          configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
          enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
          writable: false
        };
      }
    }

    return $defineProperty(O, P, Attributes);
  } : $defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPropertyKey$1(P);
    anObject(Attributes);
    if (ie8DomDefine) try {
      return $defineProperty(O, P, Attributes);
    } catch (error) {
      /* empty */
    }
    if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
  var objectDefineProperty = {
    f: f$1
  };

  var defineProperty$2 = require$$0$2.f; // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  // eslint-disable-next-line es-x/no-object-defineproperty -- safe

  $({
    target: 'Object',
    stat: true,
    forced: defineProperty !== defineProperty$2,
    sham: !DESCRIPTORS
  }, {
    defineProperty: defineProperty$2
  });

  var defineProperty_1 = createCommonjsModule(function (module) {
    var Object = path.Object;

    var defineProperty = module.exports = function defineProperty(it, key, desc) {
      return Object.defineProperty(it, key, desc);
    };

    if (Object.defineProperty.sham) defineProperty.sham = true;
  });

  var defineProperty$1 = defineProperty_1;

  var defineProperty = defineProperty$1;

  var descriptors = !fails(function () {
    // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
    return defineProperty({}, 1, {
      get: function get() {
        return 7;
      }
    })[1] != 7;
  });

  var nativeGetOwnPropertyDescriptor = require$$0.f;
  var FAILS_ON_PRIMITIVES = fails(function () {
    nativeGetOwnPropertyDescriptor(1);
  });
  var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES; // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

  $({
    target: 'Object',
    stat: true,
    forced: FORCED,
    sham: !DESCRIPTORS
  }, {
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
      return nativeGetOwnPropertyDescriptor(toIndexedObject$1(it), key);
    }
  });

  var getOwnPropertyDescriptor_1 = createCommonjsModule(function (module) {
    var Object = path.Object;

    var getOwnPropertyDescriptor = module.exports = function getOwnPropertyDescriptor(it, key) {
      return Object.getOwnPropertyDescriptor(it, key);
    };

    if (Object.getOwnPropertyDescriptor.sham) getOwnPropertyDescriptor.sham = true;
  });

  var getOwnPropertyDescriptor$2 = getOwnPropertyDescriptor_1;

  var getOwnPropertyDescriptor$1 = getOwnPropertyDescriptor$2;
  var _Object$getOwnPropertyDescriptor = getOwnPropertyDescriptor$1;

  var $getOwnPropertyDescriptor = _Object$getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

  var f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
    O = toIndexedObject$1(O);
    P = toPropertyKey$1(P);
    if (ie8DomDefine) try {
      return $getOwnPropertyDescriptor(O, P);
    } catch (error) {
      /* empty */
    }
    if (hasOwnProperty_1(O, P)) return createPropertyDescriptor(!functionCall(objectPropertyIsEnumerable.f, O, P), O[P]);
  };
  var objectGetOwnPropertyDescriptor = {
    f: f
  };

  var replacement = /#|\.prototype\./;

  var isForced = function isForced(feature, detection) {
    var value = data[normalize(feature)];
    return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
  };

  var normalize = isForced.normalize = function (string) {
    return String(string).replace(replacement, '.').toLowerCase();
  };

  var data = isForced.data = {};
  var NATIVE = isForced.NATIVE = 'N';
  var POLYFILL = isForced.POLYFILL = 'P';
  var isForced_1 = isForced;

  var getOwnPropertyDescriptor = require$$0.f;

  var wrapConstructor = function wrapConstructor(NativeConstructor) {
    var Wrapper = function Wrapper(a, b, c) {
      if (this instanceof Wrapper) {
        switch (arguments.length) {
          case 0:
            return new NativeConstructor();

          case 1:
            return new NativeConstructor(a);

          case 2:
            return new NativeConstructor(a, b);
        }

        return new NativeConstructor(a, b, c);
      }

      return apply$4(NativeConstructor, this, arguments);
    };

    Wrapper.prototype = NativeConstructor.prototype;
    return Wrapper;
  };
  /*
    options.target         - name of the target object
    options.global         - target is the global object
    options.stat           - export as static methods of target
    options.proto          - export as prototype methods of target
    options.real           - real prototype method for the `pure` version
    options.forced         - export even if the native feature is available
    options.bind           - bind methods to the target, required for the `pure` version
    options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
    options.unsafe         - use the simple assignment of property instead of delete + defineProperty
    options.sham           - add a flag to not completely full polyfills
    options.enumerable     - export as enumerable property
    options.dontCallGetSet - prevent calling a getter on target
    options.name           - the .name of the function if it does not match the key
  */


  var _export = function _export(options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var PROTO = options.proto;
    var nativeSource = GLOBAL ? global$1 : STATIC ? global$1[TARGET] : (global$1[TARGET] || {}).prototype;
    var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];
    var targetPrototype = target.prototype;
    var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
    var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;

    for (key in source) {
      FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contains in native

      USE_NATIVE = !FORCED && nativeSource && hasOwnProperty_1(nativeSource, key);
      targetProperty = target[key];
      if (USE_NATIVE) if (options.dontCallGetSet) {
        descriptor = getOwnPropertyDescriptor(nativeSource, key);
        nativeProperty = descriptor && descriptor.value;
      } else nativeProperty = nativeSource[key]; // export native or implementation

      sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
      if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue; // bind timers to global for call from export context

      if (_bindInstanceProperty(options) && USE_NATIVE) resultProperty = functionBindContext(sourceProperty, global$1); // wrap global constructors for prevent changs in this version
      else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty); // make static versions for prototype methods
      else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis$1(sourceProperty); // default case
      else resultProperty = sourceProperty; // add a flag to not completely full polyfills

      if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
        createNonEnumerableProperty(resultProperty, 'sham', true);
      }

      createNonEnumerableProperty(target, key, resultProperty);

      if (PROTO) {
        VIRTUAL_PROTOTYPE = TARGET + 'Prototype';

        if (!hasOwnProperty_1(path, VIRTUAL_PROTOTYPE)) {
          createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});
        } // export virtual prototype methods


        createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty); // export real prototype methods

        if (options.real && targetPrototype && !targetPrototype[key]) {
          createNonEnumerableProperty(targetPrototype, key, sourceProperty);
        }
      }
    }
  };

  var $Function = Function;
  var concat = uncurryThis$1(_concatInstanceProperty([]));
  var join = uncurryThis$1([].join);
  var factories = {};

  var construct = function construct(C, argsLength, args) {
    if (!hasOwnProperty_1(factories, argsLength)) {
      for (var list = [], i = 0; i < argsLength; i++) {
        list[i] = 'a[' + i + ']';
      }

      factories[argsLength] = $Function('C,a', 'return new C(' + join(list, ',') + ')');
    }

    return factories[argsLength](C, args);
  }; // `Function.prototype.bind` method implementation
  // https://tc39.es/ecma262/#sec-function.prototype.bind


  var functionBind = NATIVE_BIND ? _bindInstanceProperty($Function) : function bind(that
  /* , ...args */
  ) {
    var F = aCallable(this);
    var Prototype = F.prototype;
    var partArgs = arraySlice(arguments, 1);

    var boundFunction = function
      /* args... */
    bound() {
      var args = concat(partArgs, arraySlice(arguments));
      return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
    };

    if (isObject(Prototype)) boundFunction.prototype = Prototype;
    return boundFunction;
  };

  // `Function.prototype.bind` method
  // https://tc39.es/ecma262/#sec-function.prototype.bind

  $({
    target: 'Function',
    proto: true,
    forced: _bindInstanceProperty(Function) !== functionBind
  }, {
    bind: functionBind
  });

  var bind$4 = _bindInstanceProperty(entryVirtual('Function'));

  var FunctionPrototype$1 = Function.prototype;

  var bind$3 = function bind(it) {
    var own = _bindInstanceProperty(it);

    return it === FunctionPrototype$1 || objectIsPrototypeOf(FunctionPrototype$1, it) && own === _bindInstanceProperty(FunctionPrototype$1) ? bind$4 : own;
  };

  var bind$2 = bind$3;

  var bind$1 = bind$2;
  var _bindInstanceProperty = bind$1;

  var FunctionPrototype = Function.prototype;

  var bind = _bindInstanceProperty(FunctionPrototype);

  var call = FunctionPrototype.call;

  var uncurryThis = NATIVE_BIND && _bindInstanceProperty(bind).call(bind, call, call);

  var functionUncurryThis = NATIVE_BIND ? function (fn) {
    return fn && uncurryThis(fn);
  } : function (fn) {
    return fn && function () {
      return call.apply(fn, arguments);
    };
  };

  var $Object = Object;
  var split = uncurryThis$1(''.split); // fallback for non-array-like ES3 and non-enumerable old V8 strings

  var indexedObject = fails(function () {
    // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
    // eslint-disable-next-line no-prototype-builtins -- safe
    return !$Object('z').propertyIsEnumerable(0);
  }) ? function (it) {
    return classof$1(it) == 'String' ? split(it, '') : $Object(it);
  } : $Object;

  var toIndexedObject = function toIndexedObject(it) {
    return IndexedObject(requireObjectCoercible(it));
  };

  require$$0$2.f;
  var ARRAY_ITERATOR = 'Array Iterator';
  var setInternalState = InternalStateModule.set;
  var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR); // `Array.prototype.entries` method
  // https://tc39.es/ecma262/#sec-array.prototype.entries
  // `Array.prototype.keys` method
  // https://tc39.es/ecma262/#sec-array.prototype.keys
  // `Array.prototype.values` method
  // https://tc39.es/ecma262/#sec-array.prototype.values
  // `Array.prototype[@@iterator]` method
  // https://tc39.es/ecma262/#sec-array.prototype-@@iterator
  // `CreateArrayIterator` internal method
  // https://tc39.es/ecma262/#sec-createarrayiterator

  defineIterator(Array, 'Array', function (iterated, kind) {
    setInternalState(this, {
      type: ARRAY_ITERATOR,
      target: toIndexedObject$1(iterated),
      // target
      index: 0,
      // next index
      kind: kind // kind

    }); // `%ArrayIteratorPrototype%.next` method
    // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
  }, function () {
    var state = getInternalState(this);
    var target = state.target;
    var kind = state.kind;
    var index = state.index++;

    if (!target || index >= target.length) {
      state.target = undefined;
      return {
        value: undefined,
        done: true
      };
    }

    if (kind == 'keys') return {
      value: index,
      done: false
    };
    if (kind == 'values') return {
      value: target[index],
      done: false
    };
    return {
      value: [index, target[index]],
      done: false
    };
  }, 'values'); // argumentsList[@@iterator] is %ArrayProto_values%
  // https://tc39.es/ecma262/#sec-createunmappedargumentsobject
  // https://tc39.es/ecma262/#sec-createmappedargumentsobject

  iterators.Arguments = iterators.Array; // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

  // iterable DOM collections
  // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
  var domIterables = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };

  var TO_STRING_TAG = wellKnownSymbol$1('toStringTag');

  for (var COLLECTION_NAME in domIterables) {
    var Collection = global$1[COLLECTION_NAME];
    var CollectionPrototype = Collection && Collection.prototype;

    if (CollectionPrototype && classof$2(CollectionPrototype) !== TO_STRING_TAG) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }

    iterators[COLLECTION_NAME] = iterators.Array;
  }

  var $forEach = _forEachInstanceProperty(require$$0$1);

  var STRICT_METHOD = arrayMethodIsStrict('forEach'); // `Array.prototype.forEach` method implementation
  // https://tc39.es/ecma262/#sec-array.prototype.foreach

  var arrayForEach = !STRICT_METHOD ? function forEach(callbackfn
  /* , thisArg */
  ) {
    return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined); // eslint-disable-next-line es-x/no-array-prototype-foreach -- safe
  } : _forEachInstanceProperty([]);

  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  // eslint-disable-next-line es-x/no-array-prototype-foreach -- safe


  $({
    target: 'Array',
    proto: true,
    forced: _forEachInstanceProperty([]) != arrayForEach
  }, {
    forEach: arrayForEach
  });

  var forEach$3 = _forEachInstanceProperty(entryVirtual('Array'));

  var forEach$2 = forEach$3;

  var ArrayPrototype = Array.prototype;
  var DOMIterables = {
    DOMTokenList: true,
    NodeList: true
  };

  var forEach$1 = function forEach(it) {
    var own = _forEachInstanceProperty(it);

    return it === ArrayPrototype || objectIsPrototypeOf(ArrayPrototype, it) && own === _forEachInstanceProperty(ArrayPrototype) || hasOwnProperty_1(DOMIterables, classof$2(it)) ? forEach$2 : own;
  };

  var forEach = forEach$1;
  var _forEachInstanceProperty = forEach;

  //
  //
  //
  //
  //
  //

  var script$1 = {
      name: 'ui-button',
  };

  function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
  /* server only */
  , shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
      createInjectorSSR = createInjector;
      createInjector = shadowMode;
      shadowMode = false;
    } // Vue.extend constructor export interop.


    var options = typeof script === 'function' ? script.options : script; // render functions

    if (template && template.render) {
      options.render = template.render;
      options.staticRenderFns = template.staticRenderFns;
      options._compiled = true; // functional template

      if (isFunctionalTemplate) {
        options.functional = true;
      }
    } // scopedId


    if (scopeId) {
      options._scopeId = scopeId;
    }

    var hook;

    if (moduleIdentifier) {
      // server build
      hook = function hook(context) {
        // 2.3 injection
        context = context || // cached call
        this.$vnode && this.$vnode.ssrContext || // stateful
        this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
        // 2.2 with runInNewContext: true

        if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
          context = __VUE_SSR_CONTEXT__;
        } // inject component styles


        if (style) {
          style.call(this, createInjectorSSR(context));
        } // register component module identifier for async chunk inference


        if (context && context._registeredComponents) {
          context._registeredComponents.add(moduleIdentifier);
        }
      }; // used by ssr in case component is cached and beforeCreate
      // never gets called


      options._ssrRegister = hook;
    } else if (style) {
      hook = shadowMode ? function (context) {
        style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
      } : function (context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook) {
      if (options.functional) {
        // register for functional component in vue file
        var originalRender = options.render;

        options.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        var _context;

        // inject component registration as beforeCreate hook
        var existing = options.beforeCreate;
        options.beforeCreate = existing ? _concatInstanceProperty(_context = []).call(_context, existing, hook) : [hook];
      }
    }

    return script;
  }

  /* script */
  const __vue_script__$1 = script$1;

  /* template */
  var __vue_render__$1 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c(
      "button",
      _vm._g({ staticClass: "ui-button" }, _vm.$listeners),
      [_vm._t("default")],
      2
    )
  };
  var __vue_staticRenderFns__$1 = [];
  __vue_render__$1._withStripped = true;

    /* style */
    const __vue_inject_styles__$1 = undefined;
    /* scoped */
    const __vue_scope_id__$1 = undefined;
    /* module identifier */
    const __vue_module_identifier__$1 = undefined;
    /* functional template */
    const __vue_is_functional_template__$1 = false;
    /* style inject */
    
    /* style inject SSR */
    
    /* style inject shadow dom */
    

    
    const __vue_component__$1 = /*#__PURE__*/normalizeComponent(
      { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
      __vue_inject_styles__$1,
      __vue_script__$1,
      __vue_scope_id__$1,
      __vue_is_functional_template__$1,
      __vue_module_identifier__$1,
      false,
      undefined,
      undefined,
      undefined
    );

  __vue_component__$1.install = function (Vue) {
    Vue.component(__vue_component__$1.name, __vue_component__$1);
  };

  function addCount(count) {
    return ++count;
  }

  //

  var script = {
      name: 'ui-form',

      components: {
          [__vue_component__$1.name]: __vue_component__$1,
      },

      data() {
          return {
              count: 0,
          }
      },

      methods: {
          onClick() {
              this.count = addCount(this.count);
          }
      }
  };

  /* script */
  const __vue_script__ = script;

  /* template */
  var __vue_render__ = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", { staticClass: "ui-form-container" }, [
      _c(
        "div",
        { staticStyle: { "font-weight": "bold", "margin-bottom": "15px" } },
        [_vm._v("ç»ä»¶ ui-form")]
      ),
      _vm._v(" "),
      _c("div", { staticClass: "ui-form-content" }, [
        _vm._v("\n        count: " + _vm._s(_vm.count) + "\n    "),
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "ui-form-footer" },
        [_c("ui-button", { on: { click: _vm.onClick } }, [_vm._v("count++")])],
        1
      ),
    ])
  };
  var __vue_staticRenderFns__ = [];
  __vue_render__._withStripped = true;

    /* style */
    const __vue_inject_styles__ = undefined;
    /* scoped */
    const __vue_scope_id__ = undefined;
    /* module identifier */
    const __vue_module_identifier__ = undefined;
    /* functional template */
    const __vue_is_functional_template__ = false;
    /* style inject */
    
    /* style inject SSR */
    
    /* style inject shadow dom */
    

    
    const __vue_component__ = /*#__PURE__*/normalizeComponent(
      { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
      __vue_inject_styles__,
      __vue_script__,
      __vue_scope_id__,
      __vue_is_functional_template__,
      __vue_module_identifier__,
      false,
      undefined,
      undefined,
      undefined
    );

  __vue_component__.install = function (Vue) {
    Vue.component(__vue_component__.name, __vue_component__);
  };

  var components = [__vue_component__$1, __vue_component__];

  var install = function install(Vue) {
    _forEachInstanceProperty(components).call(components, function (component) {
      Vue.use(component);
    });
  };
  var index = {
    install: install
  }; // unpkgå¼å¥æ¶ï¼ä¼åå¼å¥vueå¹¶æè½½å°windowå¯¹è±¡ä¸

  if (typeof window !== 'undefined' && typeof window.Vue !== 'undefined') {
    console.log('vue2-components-build window.Vueå­å¨');
    install(window.Vue);
  }

  exports.Button = __vue_component__$1;
  exports.Form = __vue_component__;
  exports["default"] = index;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=vue2-components-build.min.js.map
