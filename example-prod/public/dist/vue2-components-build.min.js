(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global["vue2-components-build"] = {}));
})(this, (function (exports) { 'use strict';

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function getDefaultExportFromCjs (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	var forEach$4 = {exports: {}};

	var bind$8 = {exports: {}};

	var uncurryThis$j = functionUncurryThis;
	var objectIsPrototypeOf = uncurryThis$j({}.isPrototypeOf);

	var globalThis$6 = {exports: {}};

	var globalThis$5 = {exports: {}};

	var $$m = _export;
	var global$e = global$d; // `globalThis` object
	// https://tc39.es/ecma262/#sec-globalthis

	$$m({
	  global: true
	}, {
	  globalThis: global$e
	});

	var globalThis$4 = {exports: {}};

	(function (module) {
	  module.exports = global$d;
	})(globalThis$4);

	var parent$p = globalThis$4.exports;
	var globalThis$3 = parent$p;

	var parent$o = globalThis$3;
	var globalThis$2 = parent$o;

	var parent$n = globalThis$2;
	var globalThis$1 = parent$n;

	(function (module) {
	  module.exports = globalThis$1;
	})(globalThis$5);

	(function (module) {
	  module.exports = globalThis$5.exports;
	})(globalThis$6);

	var _globalThis = /*@__PURE__*/getDefaultExportFromCjs(globalThis$6.exports);

	var check = function check(it) {
	  return it && it.Math == Math && it;
	}; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028


	var global$d = // eslint-disable-next-line es-x/no-global-this -- safe
	check(typeof _globalThis == 'object' && _globalThis) || check(typeof window == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe
	check(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) || // eslint-disable-next-line no-new-func -- fallback
	function () {
	  return this;
	}() || Function('return this')();

	var apply$5 = {exports: {}};

	// https://tc39.es/ecma262/#sec-iscallable

	var isCallable$f = function isCallable(argument) {
	  return typeof argument == 'function';
	};

	var $String$3 = String;

	var tryToString$2 = function tryToString(argument) {
	  try {
	    return $String$3(argument);
	  } catch (error) {
	    return 'Object';
	  }
	};

	var isCallable$e = isCallable$f;
	var tryToString$1 = tryToString$2;
	var $TypeError$7 = TypeError; // `Assert: IsCallable(argument) is true`

	var aCallable$4 = function aCallable(argument) {
	  if (isCallable$e(argument)) return argument;
	  throw $TypeError$7(tryToString$1(argument) + ' is not a function');
	};

	var isCallable$d = isCallable$f;

	var isObject$a = function isObject(it) {
	  return typeof it == 'object' ? it !== null : isCallable$d(it);
	};

	var isObject$9 = isObject$a;
	var $String$2 = String;
	var $TypeError$6 = TypeError; // `Assert: Type(argument) is Object`

	var anObject$6 = function anObject(argument) {
	  if (isObject$9(argument)) return argument;
	  throw $TypeError$6($String$2(argument) + ' is not an object');
	};

	var fails$l = function fails(exec) {
	  try {
	    return !!exec();
	  } catch (error) {
	    return true;
	  }
	};

	var $$l = _export;
	var functionApply$1 = functionApply;
	var aCallable$3 = aCallable$4;
	var anObject$5 = anObject$6;
	var fails$k = fails$l; // MS Edge argumentsList argument is optional

	var OPTIONAL_ARGUMENTS_LIST = !fails$k(function () {
	  // eslint-disable-next-line es-x/no-reflect -- required for testing
	  _Reflect$apply(function () {
	    /* empty */
	  });
	}); // `Reflect.apply` method
	// https://tc39.es/ecma262/#sec-reflect.apply

	$$l({
	  target: 'Reflect',
	  stat: true,
	  forced: OPTIONAL_ARGUMENTS_LIST
	}, {
	  apply: function apply(target, thisArgument, argumentsList) {
	    return functionApply$1(aCallable$3(target), thisArgument, anObject$5(argumentsList));
	  }
	});

	var path$j = {};

	var path$i = path$j;
	var apply$4 = path$i.Reflect.apply;

	var parent$m = apply$4;
	var apply$3 = parent$m;

	(function (module) {
	  module.exports = apply$3;
	})(apply$5);

	var _Reflect$apply = /*@__PURE__*/getDefaultExportFromCjs(apply$5.exports);

	var fails$j = fails$l;
	var functionBindNative = !fails$j(function () {
	  var _context;

	  // eslint-disable-next-line es-x/no-function-prototype-bind -- safe
	  var test = _bindInstanceProperty(_context = function _context() {
	    /* empty */
	  }).call(_context); // eslint-disable-next-line no-prototype-builtins -- safe


	  return typeof test != 'function' || test.hasOwnProperty('prototype');
	});

	var NATIVE_BIND$4 = functionBindNative;
	var FunctionPrototype$3 = Function.prototype;
	var apply$2 = FunctionPrototype$3.apply;
	var call$9 = FunctionPrototype$3.call; // eslint-disable-next-line es-x/no-reflect -- safe

	var functionApply = typeof Reflect == 'object' && _Reflect$apply || (NATIVE_BIND$4 ? _bindInstanceProperty(call$9).call(call$9, apply$2) : function () {
	  return call$9.apply(apply$2, arguments);
	});

	var getOwnPropertyDescriptor$5 = {exports: {}};

	var getOwnPropertyDescriptor$4 = {exports: {}};

	var defineProperty$7 = {exports: {}};

	var defineProperty$6 = {exports: {}};

	var objectDefineProperty = {};

	var global$c = global$d;
	var isObject$8 = isObject$a;
	var document$1 = global$c.document; // typeof document.createElement is 'object' in old IE

	var EXISTS$1 = isObject$8(document$1) && isObject$8(document$1.createElement);

	var documentCreateElement$1 = function documentCreateElement(it) {
	  return EXISTS$1 ? document$1.createElement(it) : {};
	};

	var DESCRIPTORS$b = descriptors;
	var fails$i = fails$l;
	var createElement = documentCreateElement$1; // Thanks to IE8 for its funny defineProperty

	var ie8DomDefine = !DESCRIPTORS$b && !fails$i(function () {
	  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
	  return _Object$defineProperty(createElement('div'), 'a', {
	    get: function get() {
	      return 7;
	    }
	  }).a != 7;
	});

	var DESCRIPTORS$a = descriptors;
	var fails$h = fails$l; // V8 ~ Chrome 36-
	// https://bugs.chromium.org/p/v8/issues/detail?id=3334

	var v8PrototypeDefineBug = DESCRIPTORS$a && fails$h(function () {
	  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
	  return _Object$defineProperty(function () {
	    /* empty */
	  }, 'prototype', {
	    value: 42,
	    writable: false
	  }).prototype != 42;
	});

	var NATIVE_BIND$3 = functionBindNative;
	var call$8 = Function.prototype.call;
	var functionCall = NATIVE_BIND$3 ? _bindInstanceProperty(call$8).call(call$8, call$8) : function () {
	  return call$8.apply(call$8, arguments);
	};

	var path$h = path$j;
	var global$b = global$d;
	var isCallable$c = isCallable$f;

	var aFunction = function aFunction(variable) {
	  return isCallable$c(variable) ? variable : undefined;
	};

	var getBuiltIn$8 = function getBuiltIn(namespace, method) {
	  return arguments.length < 2 ? aFunction(path$h[namespace]) || aFunction(global$b[namespace]) : path$h[namespace] && path$h[namespace][method] || global$b[namespace] && global$b[namespace][method];
	};

	var symbol$2 = {exports: {}};

	var concat$4 = {exports: {}};

	var path$g = path$j;

	var entryVirtual$7 = function entryVirtual(CONSTRUCTOR) {
	  return path$g[CONSTRUCTOR + 'Prototype'];
	};

	var entryVirtual$6 = entryVirtual$7;

	var concat$3 = _concatInstanceProperty(entryVirtual$6('Array'));

	var isPrototypeOf$8 = objectIsPrototypeOf;
	var method$6 = concat$3;
	var ArrayPrototype$5 = Array.prototype;

	var concat$2 = function concat(it) {
	  var own = _concatInstanceProperty(it);

	  return it === ArrayPrototype$5 || isPrototypeOf$8(ArrayPrototype$5, it) && own === _concatInstanceProperty(ArrayPrototype$5) ? method$6 : own;
	};

	var parent$l = concat$2;
	var concat$1 = parent$l;

	(function (module) {
	  module.exports = concat$1;
	})(concat$4);

	var _concatInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(concat$4.exports);

	var isArray$8 = {exports: {}};

	var $$k = _export;
	var isArray$7 = isArray$1; // `Array.isArray` method
	// https://tc39.es/ecma262/#sec-array.isarray

	$$k({
	  target: 'Array',
	  stat: true
	}, {
	  isArray: isArray$7
	});

	var path$f = path$j;
	var isArray$6 = path$f.Array.isArray;

	var parent$k = isArray$6;
	var isArray$5 = parent$k;

	(function (module) {
	  module.exports = isArray$5;
	})(isArray$8);

	var _Array$isArray = /*@__PURE__*/getDefaultExportFromCjs(isArray$8.exports);

	var slice$3 = {exports: {}};

	var shared$6 = {exports: {}};

	var global$a = global$d; // eslint-disable-next-line es-x/no-object-defineproperty -- safe

	var defineProperty$5 = _Object$defineProperty;

	var defineGlobalProperty$1 = function defineGlobalProperty(key, value) {
	  try {
	    defineProperty$5(global$a, key, {
	      value: value,
	      configurable: true,
	      writable: true
	    });
	  } catch (error) {
	    global$a[key] = value;
	  }

	  return value;
	};

	var global$9 = global$d;
	var defineGlobalProperty = defineGlobalProperty$1;
	var SHARED = '__core-js_shared__';
	var store$3 = global$9[SHARED] || defineGlobalProperty(SHARED, {});
	var sharedStore = store$3;

	var store$2 = sharedStore;
	(shared$6.exports = function (key, value) {
	  return store$2[key] || (store$2[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: '3.23.5',
	  mode: 'pure' ,
	  copyright: 'Â© 2014-2022 Denis Pushkarev (zloirock.ru)',
	  license: 'https://github.com/zloirock/core-js/blob/v3.23.5/LICENSE',
	  source: 'https://github.com/zloirock/core-js'
	});

	var $TypeError$5 = TypeError; // `RequireObjectCoercible` abstract operation
	// https://tc39.es/ecma262/#sec-requireobjectcoercible

	var requireObjectCoercible$3 = function requireObjectCoercible(it) {
	  if (it == undefined) throw $TypeError$5("Can't call method on " + it);
	  return it;
	};

	var requireObjectCoercible$2 = requireObjectCoercible$3;
	var $Object$4 = Object; // `ToObject` abstract operation
	// https://tc39.es/ecma262/#sec-toobject

	var toObject$7 = function toObject(argument) {
	  return $Object$4(requireObjectCoercible$2(argument));
	};

	var uncurryThis$i = functionUncurryThis;
	var toObject$6 = toObject$7;
	var hasOwnProperty = uncurryThis$i({}.hasOwnProperty); // `HasOwnProperty` abstract operation
	// https://tc39.es/ecma262/#sec-hasownproperty
	// eslint-disable-next-line es-x/no-object-hasown -- safe

	var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
	  return hasOwnProperty(toObject$6(it), key);
	};

	var uncurryThis$h = functionUncurryThis;
	var id = 0;
	var postfix = Math.random();
	var toString$6 = uncurryThis$h(1.0.toString);

	var uid$3 = function uid(key) {
	  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$6(++id + postfix, 36);
	};

	var getOwnPropertySymbols$2 = {exports: {}};

	var classof$a = classof$6;
	var $String$1 = String;

	var toString$5 = function toString(argument) {
	  if (classof$a(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
	  return $String$1(argument);
	};

	var createPropertyDescriptor$5 = function createPropertyDescriptor(bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};

	var create$5 = {exports: {}};

	var $$j = _export;
	var DESCRIPTORS$9 = descriptors;
	var create$4 = objectCreate; // `Object.create` method
	// https://tc39.es/ecma262/#sec-object.create

	$$j({
	  target: 'Object',
	  stat: true,
	  sham: !DESCRIPTORS$9
	}, {
	  create: create$4
	});

	var path$e = path$j;
	var Object$5 = path$e.Object;

	var create$3 = function create(P, D) {
	  return Object$5.create(P, D);
	};

	var parent$j = create$3;
	var create$2 = parent$j;

	(function (module) {
	  module.exports = create$2;
	})(create$5);

	var _Object$create = /*@__PURE__*/getDefaultExportFromCjs(create$5.exports);

	var defineProperties$4 = {exports: {}};

	var defineProperties$3 = {exports: {}};

	var $$i = _export;
	var DESCRIPTORS$8 = descriptors;
	var defineProperties$2 = objectDefineProperties.f; // `Object.defineProperties` method
	// https://tc39.es/ecma262/#sec-object.defineproperties
	// eslint-disable-next-line es-x/no-object-defineproperties -- safe

	$$i({
	  target: 'Object',
	  stat: true,
	  forced: _Object$defineProperties !== defineProperties$2,
	  sham: !DESCRIPTORS$8
	}, {
	  defineProperties: defineProperties$2
	});

	var path$d = path$j;
	var Object$4 = path$d.Object;

	var defineProperties$1 = defineProperties$3.exports = function defineProperties(T, D) {
	  return Object$4.defineProperties(T, D);
	};

	if (Object$4.defineProperties.sham) defineProperties$1.sham = true;

	var parent$i = defineProperties$3.exports;
	var defineProperties = parent$i;

	(function (module) {
	  module.exports = defineProperties;
	})(defineProperties$4);

	var _Object$defineProperties = /*@__PURE__*/getDefaultExportFromCjs(defineProperties$4.exports);

	var objectDefineProperties = {};

	var keys$7 = {exports: {}};

	var keys$6 = {exports: {}};

	var entryVirtual$5 = entryVirtual$7;

	var keys$5 = _keysInstanceProperty(entryVirtual$5('Array'));

	var parent$h = keys$5;
	var keys$4 = parent$h;

	var classof$9 = classof$6;
	var hasOwn$f = hasOwnProperty_1;
	var isPrototypeOf$7 = objectIsPrototypeOf;
	var method$5 = keys$4;
	var ArrayPrototype$4 = Array.prototype;
	var DOMIterables$3 = {
	  DOMTokenList: true,
	  NodeList: true
	};

	var keys$3 = function keys(it) {
	  var own = _keysInstanceProperty(it);

	  return it === ArrayPrototype$4 || isPrototypeOf$7(ArrayPrototype$4, it) && own === _keysInstanceProperty(ArrayPrototype$4) || hasOwn$f(DOMIterables$3, classof$9(it)) ? method$5 : own;
	};

	(function (module) {
	  module.exports = keys$3;
	})(keys$6);

	var _keysInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(keys$6.exports);

	var $$h = _export;
	var toObject$5 = toObject$7;
	var nativeKeys = objectKeys$2;
	var fails$g = fails$l;
	var FAILS_ON_PRIMITIVES$3 = fails$g(function () {
	  nativeKeys(1);
	}); // `Object.keys` method
	// https://tc39.es/ecma262/#sec-object.keys

	$$h({
	  target: 'Object',
	  stat: true,
	  forced: FAILS_ON_PRIMITIVES$3
	}, {
	  keys: function keys(it) {
	    return nativeKeys(toObject$5(it));
	  }
	});

	var path$c = path$j;

	var keys$2 = _keysInstanceProperty(path$c.Object);

	var parent$g = keys$2;
	var keys$1 = parent$g;

	(function (module) {
	  module.exports = keys$1;
	})(keys$7);

	var _Object$keys = /*@__PURE__*/getDefaultExportFromCjs(keys$7.exports);

	var indexOf$4 = {exports: {}};

	var trunc$4 = {exports: {}};

	var $$g = _export;
	var trunc$3 = mathTrunc; // `Math.trunc` method
	// https://tc39.es/ecma262/#sec-math.trunc

	$$g({
	  target: 'Math',
	  stat: true
	}, {
	  trunc: trunc$3
	});

	var path$b = path$j;
	var trunc$2 = path$b.Math.trunc;

	var parent$f = trunc$2;
	var trunc$1 = parent$f;

	(function (module) {
	  module.exports = trunc$1;
	})(trunc$4);

	var _Math$trunc = /*@__PURE__*/getDefaultExportFromCjs(trunc$4.exports);

	var ceil = Math.ceil;
	var floor = Math.floor; // `Math.trunc` method
	// https://tc39.es/ecma262/#sec-math.trunc
	// eslint-disable-next-line es-x/no-math-trunc -- safe

	var mathTrunc = _Math$trunc || function trunc(x) {
	  var n = +x;
	  return (n > 0 ? floor : ceil)(n);
	};

	var trunc = mathTrunc; // `ToIntegerOrInfinity` abstract operation
	// https://tc39.es/ecma262/#sec-tointegerorinfinity

	var toIntegerOrInfinity$3 = function toIntegerOrInfinity(argument) {
	  var number = +argument; // eslint-disable-next-line no-self-compare -- NaN check

	  return number !== number || number === 0 ? 0 : trunc(number);
	};

	var toIntegerOrInfinity$2 = toIntegerOrInfinity$3;
	var max$2 = Math.max;
	var min$1 = Math.min; // Helper for a popular repeating case of the spec:
	// Let integer be ? ToInteger(index).
	// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).

	var toAbsoluteIndex$3 = function toAbsoluteIndex(index, length) {
	  var integer = toIntegerOrInfinity$2(index);
	  return integer < 0 ? max$2(integer + length, 0) : min$1(integer, length);
	};

	var toIntegerOrInfinity$1 = toIntegerOrInfinity$3;
	var min = Math.min; // `ToLength` abstract operation
	// https://tc39.es/ecma262/#sec-tolength

	var toLength$1 = function toLength(argument) {
	  return argument > 0 ? min(toIntegerOrInfinity$1(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
	};

	var toLength = toLength$1; // `LengthOfArrayLike` abstract operation
	// https://tc39.es/ecma262/#sec-lengthofarraylike

	var lengthOfArrayLike$5 = function lengthOfArrayLike(obj) {
	  return toLength(obj.length);
	};

	var toIndexedObject$9 = toIndexedObject$1;
	var toAbsoluteIndex$2 = toAbsoluteIndex$3;
	var lengthOfArrayLike$4 = lengthOfArrayLike$5; // `Array.prototype.{ indexOf, includes }` methods implementation

	var createMethod$2 = function createMethod(IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIndexedObject$9($this);
	    var length = lengthOfArrayLike$4(O);
	    var index = toAbsoluteIndex$2(fromIndex, length);
	    var value; // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare -- NaN check

	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++]; // eslint-disable-next-line no-self-compare -- NaN check

	      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
	    } else for (; length > index; index++) {
	      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
	    }
	    return !IS_INCLUDES && -1;
	  };
	};

	var arrayIncludes = {
	  // `Array.prototype.includes` method
	  // https://tc39.es/ecma262/#sec-array.prototype.includes
	  includes: createMethod$2(true),
	  // `Array.prototype.indexOf` method
	  // https://tc39.es/ecma262/#sec-array.prototype.indexof
	  indexOf: createMethod$2(false)
	};

	var fails$f = fails$l;

	var arrayMethodIsStrict$2 = function arrayMethodIsStrict(METHOD_NAME, argument) {
	  var method = [][METHOD_NAME];
	  return !!method && fails$f(function () {
	    // eslint-disable-next-line no-useless-call -- required for testing
	    method.call(null, argument || function () {
	      return 1;
	    }, 1);
	  });
	};

	/* eslint-disable es-x/no-array-prototype-indexof -- required for testing */


	var $$f = _export;
	var uncurryThis$g = functionUncurryThis;

	var $IndexOf = _indexOfInstanceProperty(arrayIncludes);

	var arrayMethodIsStrict$1 = arrayMethodIsStrict$2;
	var un$IndexOf = uncurryThis$g(_indexOfInstanceProperty([]));
	var NEGATIVE_ZERO = !!un$IndexOf && 1 / un$IndexOf([1], 1, -0) < 0;
	var STRICT_METHOD$1 = arrayMethodIsStrict$1('indexOf'); // `Array.prototype.indexOf` method
	// https://tc39.es/ecma262/#sec-array.prototype.indexof

	$$f({
	  target: 'Array',
	  proto: true,
	  forced: NEGATIVE_ZERO || !STRICT_METHOD$1
	}, {
	  indexOf: function indexOf(searchElement
	  /* , fromIndex = 0 */
	  ) {
	    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
	    return NEGATIVE_ZERO // convert -0 to +0
	    ? un$IndexOf(this, searchElement, fromIndex) || 0 : $IndexOf(this, searchElement, fromIndex);
	  }
	});

	var entryVirtual$4 = entryVirtual$7;

	var indexOf$3 = _indexOfInstanceProperty(entryVirtual$4('Array'));

	var isPrototypeOf$6 = objectIsPrototypeOf;
	var method$4 = indexOf$3;
	var ArrayPrototype$3 = Array.prototype;

	var indexOf$2 = function indexOf(it) {
	  var own = _indexOfInstanceProperty(it);

	  return it === ArrayPrototype$3 || isPrototypeOf$6(ArrayPrototype$3, it) && own === _indexOfInstanceProperty(ArrayPrototype$3) ? method$4 : own;
	};

	var parent$e = indexOf$2;
	var indexOf$1 = parent$e;

	(function (module) {
	  module.exports = indexOf$1;
	})(indexOf$4);

	var _indexOfInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(indexOf$4.exports);

	var hiddenKeys$5 = {};

	var uncurryThis$f = functionUncurryThis;
	var hasOwn$e = hasOwnProperty_1;
	var toIndexedObject$8 = toIndexedObject$1;

	var indexOf = _indexOfInstanceProperty(arrayIncludes);

	var hiddenKeys$4 = hiddenKeys$5;
	var push$2 = uncurryThis$f([].push);

	var objectKeysInternal = function objectKeysInternal(object, names) {
	  var O = toIndexedObject$8(object);
	  var i = 0;
	  var result = [];
	  var key;

	  for (key in O) {
	    !hasOwn$e(hiddenKeys$4, key) && hasOwn$e(O, key) && push$2(result, key);
	  } // Don't enum bug & hidden keys


	  while (names.length > i) {
	    if (hasOwn$e(O, key = names[i++])) {
	      ~indexOf(result, key) || push$2(result, key);
	    }
	  }

	  return result;
	};

	var enumBugKeys$3 = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];

	var internalObjectKeys$1 = objectKeysInternal;
	var enumBugKeys$2 = enumBugKeys$3; // `Object.keys` method
	// https://tc39.es/ecma262/#sec-object.keys
	// eslint-disable-next-line es-x/no-object-keys -- safe

	var objectKeys$2 = _Object$keys || function keys(O) {
	  return internalObjectKeys$1(O, enumBugKeys$2);
	};

	var DESCRIPTORS$7 = descriptors;
	var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
	var definePropertyModule$3 = objectDefineProperty;
	var anObject$4 = anObject$6;
	var toIndexedObject$7 = toIndexedObject$1;
	var objectKeys$1 = objectKeys$2; // `Object.defineProperties` method
	// https://tc39.es/ecma262/#sec-object.defineproperties
	// eslint-disable-next-line es-x/no-object-defineproperties -- safe

	objectDefineProperties.f = DESCRIPTORS$7 && !V8_PROTOTYPE_DEFINE_BUG$1 ? _Object$defineProperties : function defineProperties(O, Properties) {
	  anObject$4(O);
	  var props = toIndexedObject$7(Properties);
	  var keys = objectKeys$1(Properties);
	  var length = keys.length;
	  var index = 0;
	  var key;

	  while (length > index) {
	    definePropertyModule$3.f(O, key = keys[index++], props[key]);
	  }

	  return O;
	};

	var getBuiltIn$7 = getBuiltIn$8;
	var html$1 = getBuiltIn$7('document', 'documentElement');

	var shared$5 = shared$6.exports;
	var uid$2 = uid$3;
	var keys = shared$5('keys');

	var sharedKey$4 = function sharedKey(key) {
	  return keys[key] || (keys[key] = uid$2(key));
	};

	var anObject$3 = anObject$6;
	var definePropertiesModule$1 = objectDefineProperties;
	var enumBugKeys$1 = enumBugKeys$3;
	var hiddenKeys$3 = hiddenKeys$5;
	var html = html$1;
	var documentCreateElement = documentCreateElement$1;
	var sharedKey$3 = sharedKey$4;
	var GT = '>';
	var LT = '<';
	var PROTOTYPE$1 = 'prototype';
	var SCRIPT = 'script';
	var IE_PROTO$1 = sharedKey$3('IE_PROTO');

	var EmptyConstructor = function EmptyConstructor() {
	  /* empty */
	};

	var scriptTag = function scriptTag(content) {
	  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
	}; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype


	var NullProtoObjectViaActiveX = function NullProtoObjectViaActiveX(activeXDocument) {
	  activeXDocument.write(scriptTag(''));
	  activeXDocument.close();
	  var temp = activeXDocument.parentWindow.Object;
	  activeXDocument = null; // avoid memory leak

	  return temp;
	}; // Create object with fake `null` prototype: use iframe Object with cleared prototype


	var NullProtoObjectViaIFrame = function NullProtoObjectViaIFrame() {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = documentCreateElement('iframe');
	  var JS = 'java' + SCRIPT + ':';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475

	  iframe.src = String(JS);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(scriptTag('document.F=Object'));
	  iframeDocument.close();
	  return iframeDocument.F;
	}; // Check for document.domain and active x support
	// No need to use active x approach when document.domain is not set
	// see https://github.com/es-shims/es5-shim/issues/150
	// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
	// avoid IE GC bug


	var activeXDocument;

	var _NullProtoObject = function NullProtoObject() {
	  try {
	    activeXDocument = new ActiveXObject('htmlfile');
	  } catch (error) {
	    /* ignore */
	  }

	  _NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE
	  : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH

	  var length = enumBugKeys$1.length;

	  while (length--) {
	    delete _NullProtoObject[PROTOTYPE$1][enumBugKeys$1[length]];
	  }

	  return _NullProtoObject();
	};

	hiddenKeys$3[IE_PROTO$1] = true; // `Object.create` method
	// https://tc39.es/ecma262/#sec-object.create
	// eslint-disable-next-line es-x/no-object-create -- safe

	var objectCreate = _Object$create || function create(O, Properties) {
	  var result;

	  if (O !== null) {
	    EmptyConstructor[PROTOTYPE$1] = anObject$3(O);
	    result = new EmptyConstructor();
	    EmptyConstructor[PROTOTYPE$1] = null; // add "__proto__" for Object.getPrototypeOf polyfill

	    result[IE_PROTO$1] = O;
	  } else result = _NullProtoObject();

	  return Properties === undefined ? result : definePropertiesModule$1.f(result, Properties);
	};

	var getOwnPropertyNames$3 = {exports: {}};

	var objectGetOwnPropertyNamesExternal = {};

	var toPropertyKey$4 = toPropertyKey$2;
	var definePropertyModule$2 = objectDefineProperty;
	var createPropertyDescriptor$4 = createPropertyDescriptor$5;

	var createProperty$3 = function createProperty(object, key, value) {
	  var propertyKey = toPropertyKey$4(key);
	  if (propertyKey in object) definePropertyModule$2.f(object, propertyKey, createPropertyDescriptor$4(0, value));else object[propertyKey] = value;
	};

	var toAbsoluteIndex$1 = toAbsoluteIndex$3;
	var lengthOfArrayLike$3 = lengthOfArrayLike$5;
	var createProperty$2 = createProperty$3;
	var $Array$2 = Array;
	var max$1 = Math.max;

	var arraySliceSimple = function arraySliceSimple(O, start, end) {
	  var length = lengthOfArrayLike$3(O);
	  var k = toAbsoluteIndex$1(start, length);
	  var fin = toAbsoluteIndex$1(end === undefined ? length : end, length);
	  var result = $Array$2(max$1(fin - k, 0));

	  for (var n = 0; k < fin; k++, n++) {
	    createProperty$2(result, n, O[k]);
	  }

	  result.length = n;
	  return result;
	};

	var classof$8 = classofRaw;
	var toIndexedObject$6 = toIndexedObject$1;
	var $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
	var arraySlice$3 = arraySliceSimple;
	var windowNames = typeof window == 'object' && window && _Object$getOwnPropertyNames ? _Object$getOwnPropertyNames(window) : [];

	var getWindowNames = function getWindowNames(it) {
	  try {
	    return $getOwnPropertyNames$1(it);
	  } catch (error) {
	    return arraySlice$3(windowNames);
	  }
	}; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window


	objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames(it) {
	  return windowNames && classof$8(it) == 'Window' ? getWindowNames(it) : $getOwnPropertyNames$1(toIndexedObject$6(it));
	};

	var $$e = _export;
	var fails$e = fails$l;
	var getOwnPropertyNames$2 = objectGetOwnPropertyNamesExternal.f; // eslint-disable-next-line es-x/no-object-getownpropertynames -- required for testing

	var FAILS_ON_PRIMITIVES$2 = fails$e(function () {
	  return !_Object$getOwnPropertyNames(1);
	}); // `Object.getOwnPropertyNames` method
	// https://tc39.es/ecma262/#sec-object.getownpropertynames

	$$e({
	  target: 'Object',
	  stat: true,
	  forced: FAILS_ON_PRIMITIVES$2
	}, {
	  getOwnPropertyNames: getOwnPropertyNames$2
	});

	var path$a = path$j;
	var Object$3 = path$a.Object;

	var getOwnPropertyNames$1 = function getOwnPropertyNames(it) {
	  return Object$3.getOwnPropertyNames(it);
	};

	var parent$d = getOwnPropertyNames$1;
	var getOwnPropertyNames = parent$d;

	(function (module) {
	  module.exports = getOwnPropertyNames;
	})(getOwnPropertyNames$3);

	var _Object$getOwnPropertyNames = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyNames$3.exports);

	var objectGetOwnPropertyNames = {};

	var internalObjectKeys = objectKeysInternal;
	var enumBugKeys = enumBugKeys$3;

	var hiddenKeys$2 = _concatInstanceProperty(enumBugKeys).call(enumBugKeys, 'length', 'prototype'); // `Object.getOwnPropertyNames` method
	// https://tc39.es/ecma262/#sec-object.getownpropertynames
	// eslint-disable-next-line es-x/no-object-getownpropertynames -- safe


	objectGetOwnPropertyNames.f = _Object$getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return internalObjectKeys(O, hiddenKeys$2);
	};

	var objectGetOwnPropertySymbols = {};

	objectGetOwnPropertySymbols.f = _Object$getOwnPropertySymbols;

	var objectPropertyIsEnumerable = {};

	var $propertyIsEnumerable$1 = {}.propertyIsEnumerable; // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe

	var getOwnPropertyDescriptor$3 = _Object$getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug

	var NASHORN_BUG = getOwnPropertyDescriptor$3 && !$propertyIsEnumerable$1.call({
	  1: 2
	}, 1); // `Object.prototype.propertyIsEnumerable` method implementation
	// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable

	objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
	  var descriptor = getOwnPropertyDescriptor$3(this, V);
	  return !!descriptor && descriptor.enumerable;
	} : $propertyIsEnumerable$1;

	var DESCRIPTORS$6 = descriptors;
	var definePropertyModule$1 = objectDefineProperty;
	var createPropertyDescriptor$3 = createPropertyDescriptor$5;
	var createNonEnumerableProperty$5 = DESCRIPTORS$6 ? function (object, key, value) {
	  return definePropertyModule$1.f(object, key, createPropertyDescriptor$3(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};

	var createNonEnumerableProperty$4 = createNonEnumerableProperty$5;

	var defineBuiltIn$4 = function defineBuiltIn(target, key, value, options) {
	  if (options && options.enumerable) target[key] = value;else createNonEnumerableProperty$4(target, key, value);
	  return target;
	};

	var wellKnownSymbolWrapped = {};

	var wellKnownSymbol$e = wellKnownSymbol$9;
	wellKnownSymbolWrapped.f = wellKnownSymbol$e;

	var path$9 = path$j;
	var hasOwn$d = hasOwnProperty_1;
	var wrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;
	var defineProperty$4 = objectDefineProperty.f;

	var defineWellKnownSymbol$e = function defineWellKnownSymbol(NAME) {
	  var Symbol = path$9.Symbol || (path$9.Symbol = {});
	  if (!hasOwn$d(Symbol, NAME)) defineProperty$4(Symbol, NAME, {
	    value: wrappedWellKnownSymbolModule$1.f(NAME)
	  });
	};

	var call$7 = functionCall;
	var getBuiltIn$6 = getBuiltIn$8;
	var wellKnownSymbol$d = wellKnownSymbol$9;
	var defineBuiltIn$3 = defineBuiltIn$4;

	var symbolDefineToPrimitive = function symbolDefineToPrimitive() {
	  var Symbol = getBuiltIn$6('Symbol');
	  var SymbolPrototype = Symbol && Symbol.prototype;
	  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
	  var TO_PRIMITIVE = wellKnownSymbol$d('toPrimitive');

	  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
	    // `Symbol.prototype[@@toPrimitive]` method
	    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
	    // eslint-disable-next-line no-unused-vars -- required for .length
	    defineBuiltIn$3(SymbolPrototype, TO_PRIMITIVE, function (hint) {
	      return call$7(valueOf, this);
	    }, {
	      arity: 1
	    });
	  }
	};

	var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;
	var classof$7 = classof$6; // `Object.prototype.toString` method implementation
	// https://tc39.es/ecma262/#sec-object.prototype.tostring

	var objectToString = TO_STRING_TAG_SUPPORT$2 ? {}.toString : function toString() {
	  return '[object ' + classof$7(this) + ']';
	};

	var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;
	var defineProperty$3 = objectDefineProperty.f;
	var createNonEnumerableProperty$3 = createNonEnumerableProperty$5;
	var hasOwn$c = hasOwnProperty_1;
	var toString$4 = objectToString;
	var wellKnownSymbol$c = wellKnownSymbol$9;
	var TO_STRING_TAG$3 = wellKnownSymbol$c('toStringTag');

	var setToStringTag$5 = function setToStringTag(it, TAG, STATIC, SET_METHOD) {
	  if (it) {
	    var target = STATIC ? it : it.prototype;

	    if (!hasOwn$c(target, TO_STRING_TAG$3)) {
	      defineProperty$3(target, TO_STRING_TAG$3, {
	        configurable: true,
	        value: TAG
	      });
	    }

	    if (SET_METHOD && !TO_STRING_TAG_SUPPORT$1) {
	      createNonEnumerableProperty$3(target, 'toString', toString$4);
	    }
	  }
	};

	var uncurryThis$e = functionUncurryThis;
	var isCallable$b = isCallable$f;
	var store$1 = sharedStore;
	var functionToString = uncurryThis$e(Function.toString); // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper

	if (!isCallable$b(store$1.inspectSource)) {
	  store$1.inspectSource = function (it) {
	    return functionToString(it);
	  };
	}

	var inspectSource$2 = store$1.inspectSource;

	var global$8 = global$d;
	var isCallable$a = isCallable$f;
	var inspectSource$1 = inspectSource$2;
	var WeakMap$1 = global$8.WeakMap;
	var nativeWeakMap = isCallable$a(WeakMap$1) && /native code/.test(inspectSource$1(WeakMap$1));

	var NATIVE_WEAK_MAP = nativeWeakMap;
	var global$7 = global$d;
	var uncurryThis$d = functionUncurryThis;
	var isObject$7 = isObject$a;
	var createNonEnumerableProperty$2 = createNonEnumerableProperty$5;
	var hasOwn$b = hasOwnProperty_1;
	var shared$4 = sharedStore;
	var sharedKey$2 = sharedKey$4;
	var hiddenKeys$1 = hiddenKeys$5;
	var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
	var TypeError$2 = global$7.TypeError;
	var WeakMap = global$7.WeakMap;
	var set, get, has;

	var enforce = function enforce(it) {
	  return has(it) ? get(it) : set(it, {});
	};

	var getterFor = function getterFor(TYPE) {
	  return function (it) {
	    var state;

	    if (!isObject$7(it) || (state = get(it)).type !== TYPE) {
	      throw TypeError$2('Incompatible receiver, ' + TYPE + ' required');
	    }

	    return state;
	  };
	};

	if (NATIVE_WEAK_MAP || shared$4.state) {
	  var store = shared$4.state || (shared$4.state = new WeakMap());
	  var wmget = uncurryThis$d(store.get);
	  var wmhas = uncurryThis$d(store.has);
	  var wmset = uncurryThis$d(store.set);

	  set = function set(it, metadata) {
	    if (wmhas(store, it)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);
	    metadata.facade = it;
	    wmset(store, it, metadata);
	    return metadata;
	  };

	  get = function get(it) {
	    return wmget(store, it) || {};
	  };

	  has = function has(it) {
	    return wmhas(store, it);
	  };
	} else {
	  var STATE = sharedKey$2('state');
	  hiddenKeys$1[STATE] = true;

	  set = function set(it, metadata) {
	    if (hasOwn$b(it, STATE)) throw new TypeError$2(OBJECT_ALREADY_INITIALIZED);
	    metadata.facade = it;
	    createNonEnumerableProperty$2(it, STATE, metadata);
	    return metadata;
	  };

	  get = function get(it) {
	    return hasOwn$b(it, STATE) ? it[STATE] : {};
	  };

	  has = function has(it) {
	    return hasOwn$b(it, STATE);
	  };
	}

	var internalState = {
	  set: set,
	  get: get,
	  has: has,
	  enforce: enforce,
	  getterFor: getterFor
	};

	var uncurryThis$c = functionUncurryThis;
	var aCallable$2 = aCallable$4;
	var NATIVE_BIND$2 = functionBindNative;
	var bind$7 = uncurryThis$c(_bindInstanceProperty(uncurryThis$c)); // optional / simple context binding

	var functionBindContext = function functionBindContext(fn, that) {
	  aCallable$2(fn);
	  return that === undefined ? fn : NATIVE_BIND$2 ? bind$7(fn, that) : function
	    /* ...args */
	  () {
	    return fn.apply(that, arguments);
	  };
	};

	var isArray$4 = isArray$1;
	var isConstructor$2 = isConstructor$1;
	var isObject$6 = isObject$a;
	var wellKnownSymbol$b = wellKnownSymbol$9;
	var SPECIES$2 = wellKnownSymbol$b('species');
	var $Array$1 = Array; // a part of `ArraySpeciesCreate` abstract operation
	// https://tc39.es/ecma262/#sec-arrayspeciescreate

	var arraySpeciesConstructor$1 = function arraySpeciesConstructor(originalArray) {
	  var C;

	  if (isArray$4(originalArray)) {
	    C = originalArray.constructor; // cross-realm fallback

	    if (isConstructor$2(C) && (C === $Array$1 || isArray$4(C.prototype))) C = undefined;else if (isObject$6(C)) {
	      C = C[SPECIES$2];
	      if (C === null) C = undefined;
	    }
	  }

	  return C === undefined ? $Array$1 : C;
	};

	var arraySpeciesConstructor = arraySpeciesConstructor$1; // `ArraySpeciesCreate` abstract operation
	// https://tc39.es/ecma262/#sec-arrayspeciescreate

	var arraySpeciesCreate$2 = function arraySpeciesCreate(originalArray, length) {
	  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
	};

	var bind$6 = functionBindContext;
	var uncurryThis$b = functionUncurryThis;
	var IndexedObject$1 = indexedObject;
	var toObject$4 = toObject$7;
	var lengthOfArrayLike$2 = lengthOfArrayLike$5;
	var arraySpeciesCreate$1 = arraySpeciesCreate$2;
	var push$1 = uncurryThis$b([].push); // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation

	var createMethod$1 = function createMethod(TYPE) {
	  var IS_MAP = TYPE == 1;
	  var IS_FILTER = TYPE == 2;
	  var IS_SOME = TYPE == 3;
	  var IS_EVERY = TYPE == 4;
	  var IS_FIND_INDEX = TYPE == 6;
	  var IS_FILTER_REJECT = TYPE == 7;
	  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
	  return function ($this, callbackfn, that, specificCreate) {
	    var O = toObject$4($this);
	    var self = IndexedObject$1(O);
	    var boundFunction = bind$6(callbackfn, that);
	    var length = lengthOfArrayLike$2(self);
	    var index = 0;
	    var create = specificCreate || arraySpeciesCreate$1;
	    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
	    var value, result;

	    for (; length > index; index++) {
	      if (NO_HOLES || index in self) {
	        value = self[index];
	        result = boundFunction(value, index, O);

	        if (TYPE) {
	          if (IS_MAP) target[index] = result; // map
	          else if (result) switch (TYPE) {
	            case 3:
	              return true;
	            // some

	            case 5:
	              return value;
	            // find

	            case 6:
	              return index;
	            // findIndex

	            case 2:
	              push$1(target, value);
	            // filter
	          } else switch (TYPE) {
	            case 4:
	              return false;
	            // every

	            case 7:
	              push$1(target, value);
	            // filterReject
	          }
	        }
	      }
	    }

	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
	  };
	};

	var arrayIteration = {
	  // `Array.prototype.forEach` method
	  // https://tc39.es/ecma262/#sec-array.prototype.foreach
	  forEach: createMethod$1(0),
	  // `Array.prototype.map` method
	  // https://tc39.es/ecma262/#sec-array.prototype.map
	  map: createMethod$1(1),
	  // `Array.prototype.filter` method
	  // https://tc39.es/ecma262/#sec-array.prototype.filter
	  filter: createMethod$1(2),
	  // `Array.prototype.some` method
	  // https://tc39.es/ecma262/#sec-array.prototype.some
	  some: createMethod$1(3),
	  // `Array.prototype.every` method
	  // https://tc39.es/ecma262/#sec-array.prototype.every
	  every: createMethod$1(4),
	  // `Array.prototype.find` method
	  // https://tc39.es/ecma262/#sec-array.prototype.find
	  find: createMethod$1(5),
	  // `Array.prototype.findIndex` method
	  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
	  findIndex: createMethod$1(6),
	  // `Array.prototype.filterReject` method
	  // https://github.com/tc39/proposal-array-filtering
	  filterReject: createMethod$1(7)
	};

	var $$d = _export;
	var global$6 = global$d;
	var call$6 = functionCall;
	var uncurryThis$a = functionUncurryThis;
	var DESCRIPTORS$5 = descriptors;
	var NATIVE_SYMBOL$5 = nativeSymbol;
	var fails$d = fails$l;
	var hasOwn$a = hasOwnProperty_1;
	var isPrototypeOf$5 = objectIsPrototypeOf;
	var anObject$2 = anObject$6;
	var toIndexedObject$5 = toIndexedObject$1;
	var toPropertyKey$3 = toPropertyKey$2;
	var $toString = toString$5;
	var createPropertyDescriptor$2 = createPropertyDescriptor$5;
	var nativeObjectCreate = objectCreate;
	var objectKeys = objectKeys$2;
	var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
	var getOwnPropertyNamesExternal = objectGetOwnPropertyNamesExternal;
	var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
	var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
	var definePropertyModule = objectDefineProperty;
	var definePropertiesModule = objectDefineProperties;
	var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
	var defineBuiltIn$2 = defineBuiltIn$4;
	var shared$3 = shared$6.exports;
	var sharedKey$1 = sharedKey$4;
	var hiddenKeys = hiddenKeys$5;
	var uid$1 = uid$3;
	var wellKnownSymbol$a = wellKnownSymbol$9;
	var wrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
	var defineWellKnownSymbol$d = defineWellKnownSymbol$e;
	var defineSymbolToPrimitive$1 = symbolDefineToPrimitive;
	var setToStringTag$4 = setToStringTag$5;
	var InternalStateModule$2 = internalState;

	var $forEach$1 = _forEachInstanceProperty(arrayIteration);

	var HIDDEN = sharedKey$1('hidden');
	var SYMBOL = 'Symbol';
	var PROTOTYPE = 'prototype';
	var setInternalState$2 = InternalStateModule$2.set;
	var getInternalState$2 = InternalStateModule$2.getterFor(SYMBOL);
	var ObjectPrototype$1 = Object[PROTOTYPE];
	var $Symbol = global$6.Symbol;
	var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
	var TypeError$1 = global$6.TypeError;
	var QObject = global$6.QObject;
	var nativeGetOwnPropertyDescriptor$1 = getOwnPropertyDescriptorModule.f;
	var nativeDefineProperty = definePropertyModule.f;
	var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
	var nativePropertyIsEnumerable = propertyIsEnumerableModule$1.f;
	var push = uncurryThis$a([].push);
	var AllSymbols = shared$3('symbols');
	var ObjectPrototypeSymbols = shared$3('op-symbols');
	var WellKnownSymbolsStore$1 = shared$3('wks'); // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173

	var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687

	var setSymbolDescriptor = DESCRIPTORS$5 && fails$d(function () {
	  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
	    get: function get() {
	      return nativeDefineProperty(this, 'a', {
	        value: 7
	      }).a;
	    }
	  })).a != 7;
	}) ? function (O, P, Attributes) {
	  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype$1, P);
	  if (ObjectPrototypeDescriptor) delete ObjectPrototype$1[P];
	  nativeDefineProperty(O, P, Attributes);

	  if (ObjectPrototypeDescriptor && O !== ObjectPrototype$1) {
	    nativeDefineProperty(ObjectPrototype$1, P, ObjectPrototypeDescriptor);
	  }
	} : nativeDefineProperty;

	var wrap = function wrap(tag, description) {
	  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
	  setInternalState$2(symbol, {
	    type: SYMBOL,
	    tag: tag,
	    description: description
	  });
	  if (!DESCRIPTORS$5) symbol.description = description;
	  return symbol;
	};

	var $defineProperty$1 = function defineProperty(O, P, Attributes) {
	  if (O === ObjectPrototype$1) $defineProperty$1(ObjectPrototypeSymbols, P, Attributes);
	  anObject$2(O);
	  var key = toPropertyKey$3(P);
	  anObject$2(Attributes);

	  if (hasOwn$a(AllSymbols, key)) {
	    if (!Attributes.enumerable) {
	      if (!hasOwn$a(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor$2(1, {}));
	      O[HIDDEN][key] = true;
	    } else {
	      if (hasOwn$a(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
	      Attributes = nativeObjectCreate(Attributes, {
	        enumerable: createPropertyDescriptor$2(0, false)
	      });
	    }

	    return setSymbolDescriptor(O, key, Attributes);
	  }

	  return nativeDefineProperty(O, key, Attributes);
	};

	var $defineProperties = function defineProperties(O, Properties) {
	  var _context;

	  anObject$2(O);
	  var properties = toIndexedObject$5(Properties);

	  var keys = _concatInstanceProperty(_context = objectKeys(properties)).call(_context, $getOwnPropertySymbols(properties));

	  $forEach$1(keys, function (key) {
	    if (!DESCRIPTORS$5 || call$6($propertyIsEnumerable, properties, key)) $defineProperty$1(O, key, properties[key]);
	  });
	  return O;
	};

	var $create = function create(O, Properties) {
	  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
	};

	var $propertyIsEnumerable = function propertyIsEnumerable(V) {
	  var P = toPropertyKey$3(V);
	  var enumerable = call$6(nativePropertyIsEnumerable, this, P);
	  if (this === ObjectPrototype$1 && hasOwn$a(AllSymbols, P) && !hasOwn$a(ObjectPrototypeSymbols, P)) return false;
	  return enumerable || !hasOwn$a(this, P) || !hasOwn$a(AllSymbols, P) || hasOwn$a(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
	};

	var $getOwnPropertyDescriptor$2 = function getOwnPropertyDescriptor(O, P) {
	  var it = toIndexedObject$5(O);
	  var key = toPropertyKey$3(P);
	  if (it === ObjectPrototype$1 && hasOwn$a(AllSymbols, key) && !hasOwn$a(ObjectPrototypeSymbols, key)) return;
	  var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);

	  if (descriptor && hasOwn$a(AllSymbols, key) && !(hasOwn$a(it, HIDDEN) && it[HIDDEN][key])) {
	    descriptor.enumerable = true;
	  }

	  return descriptor;
	};

	var $getOwnPropertyNames = function getOwnPropertyNames(O) {
	  var names = nativeGetOwnPropertyNames(toIndexedObject$5(O));
	  var result = [];
	  $forEach$1(names, function (key) {
	    if (!hasOwn$a(AllSymbols, key) && !hasOwn$a(hiddenKeys, key)) push(result, key);
	  });
	  return result;
	};

	var $getOwnPropertySymbols = function $getOwnPropertySymbols(O) {
	  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$1;
	  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject$5(O));
	  var result = [];
	  $forEach$1(names, function (key) {
	    if (hasOwn$a(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn$a(ObjectPrototype$1, key))) {
	      push(result, AllSymbols[key]);
	    }
	  });
	  return result;
	}; // `Symbol` constructor
	// https://tc39.es/ecma262/#sec-symbol-constructor


	if (!NATIVE_SYMBOL$5) {
	  $Symbol = function Symbol() {
	    if (isPrototypeOf$5(SymbolPrototype, this)) throw TypeError$1('Symbol is not a constructor');
	    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
	    var tag = uid$1(description);

	    var setter = function setter(value) {
	      if (this === ObjectPrototype$1) call$6(setter, ObjectPrototypeSymbols, value);
	      if (hasOwn$a(this, HIDDEN) && hasOwn$a(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDescriptor(this, tag, createPropertyDescriptor$2(1, value));
	    };

	    if (DESCRIPTORS$5 && USE_SETTER) setSymbolDescriptor(ObjectPrototype$1, tag, {
	      configurable: true,
	      set: setter
	    });
	    return wrap(tag, description);
	  };

	  SymbolPrototype = $Symbol[PROTOTYPE];
	  defineBuiltIn$2(SymbolPrototype, 'toString', function toString() {
	    return getInternalState$2(this).tag;
	  });
	  defineBuiltIn$2($Symbol, 'withoutSetter', function (description) {
	    return wrap(uid$1(description), description);
	  });
	  propertyIsEnumerableModule$1.f = $propertyIsEnumerable;
	  definePropertyModule.f = $defineProperty$1;
	  definePropertiesModule.f = $defineProperties;
	  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor$2;
	  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
	  getOwnPropertySymbolsModule$1.f = $getOwnPropertySymbols;

	  wrappedWellKnownSymbolModule.f = function (name) {
	    return wrap(wellKnownSymbol$a(name), name);
	  };

	  if (DESCRIPTORS$5) {
	    // https://github.com/tc39/proposal-Symbol-description
	    nativeDefineProperty(SymbolPrototype, 'description', {
	      configurable: true,
	      get: function description() {
	        return getInternalState$2(this).description;
	      }
	    });
	  }
	}

	$$d({
	  global: true,
	  constructor: true,
	  wrap: true,
	  forced: !NATIVE_SYMBOL$5,
	  sham: !NATIVE_SYMBOL$5
	}, {
	  Symbol: $Symbol
	});
	$forEach$1(objectKeys(WellKnownSymbolsStore$1), function (name) {
	  defineWellKnownSymbol$d(name);
	});
	$$d({
	  target: SYMBOL,
	  stat: true,
	  forced: !NATIVE_SYMBOL$5
	}, {
	  useSetter: function useSetter() {
	    USE_SETTER = true;
	  },
	  useSimple: function useSimple() {
	    USE_SETTER = false;
	  }
	});
	$$d({
	  target: 'Object',
	  stat: true,
	  forced: !NATIVE_SYMBOL$5,
	  sham: !DESCRIPTORS$5
	}, {
	  // `Object.create` method
	  // https://tc39.es/ecma262/#sec-object.create
	  create: $create,
	  // `Object.defineProperty` method
	  // https://tc39.es/ecma262/#sec-object.defineproperty
	  defineProperty: $defineProperty$1,
	  // `Object.defineProperties` method
	  // https://tc39.es/ecma262/#sec-object.defineproperties
	  defineProperties: $defineProperties,
	  // `Object.getOwnPropertyDescriptor` method
	  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor$2
	});
	$$d({
	  target: 'Object',
	  stat: true,
	  forced: !NATIVE_SYMBOL$5
	}, {
	  // `Object.getOwnPropertyNames` method
	  // https://tc39.es/ecma262/#sec-object.getownpropertynames
	  getOwnPropertyNames: $getOwnPropertyNames
	}); // `Symbol.prototype[@@toPrimitive]` method
	// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive

	defineSymbolToPrimitive$1(); // `Symbol.prototype[@@toStringTag]` property
	// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag

	setToStringTag$4($Symbol, SYMBOL);
	hiddenKeys[HIDDEN] = true;

	var _for$2 = {exports: {}};

	var path$8 = path$j;
	var _for$1 = path$8.Symbol['for'];

	var parent$c = _for$1;
	var _for = parent$c;

	(function (module) {
	  module.exports = _for;
	})(_for$2);

	var _Symbol$for = /*@__PURE__*/getDefaultExportFromCjs(_for$2.exports);

	var keyFor$2 = {exports: {}};

	var path$7 = path$j;
	var keyFor$1 = path$7.Symbol.keyFor;

	var parent$b = keyFor$1;
	var keyFor = parent$b;

	(function (module) {
	  module.exports = keyFor;
	})(keyFor$2);

	var _Symbol$keyFor = /*@__PURE__*/getDefaultExportFromCjs(keyFor$2.exports);

	var NATIVE_SYMBOL$4 = nativeSymbol;
	/* eslint-disable es-x/no-symbol -- safe */

	var nativeSymbolRegistry = NATIVE_SYMBOL$4 && !!_Symbol$for && !!_Symbol$keyFor;

	var $$c = _export;
	var getBuiltIn$5 = getBuiltIn$8;
	var hasOwn$9 = hasOwnProperty_1;
	var toString$3 = toString$5;
	var shared$2 = shared$6.exports;
	var NATIVE_SYMBOL_REGISTRY$1 = nativeSymbolRegistry;
	var StringToSymbolRegistry = shared$2('string-to-symbol-registry');
	var SymbolToStringRegistry$1 = shared$2('symbol-to-string-registry'); // `Symbol.for` method
	// https://tc39.es/ecma262/#sec-symbol.for

	$$c({
	  target: 'Symbol',
	  stat: true,
	  forced: !NATIVE_SYMBOL_REGISTRY$1
	}, {
	  'for': function _for(key) {
	    var string = toString$3(key);
	    if (hasOwn$9(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
	    var symbol = getBuiltIn$5('Symbol')(string);
	    StringToSymbolRegistry[string] = symbol;
	    SymbolToStringRegistry$1[symbol] = string;
	    return symbol;
	  }
	});

	var $$b = _export;
	var hasOwn$8 = hasOwnProperty_1;
	var isSymbol$4 = isSymbol$2;
	var tryToString = tryToString$2;
	var shared$1 = shared$6.exports;
	var NATIVE_SYMBOL_REGISTRY = nativeSymbolRegistry;
	var SymbolToStringRegistry = shared$1('symbol-to-string-registry'); // `Symbol.keyFor` method
	// https://tc39.es/ecma262/#sec-symbol.keyfor

	$$b({
	  target: 'Symbol',
	  stat: true,
	  forced: !NATIVE_SYMBOL_REGISTRY
	}, {
	  keyFor: function keyFor(sym) {
	    if (!isSymbol$4(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');
	    if (hasOwn$8(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
	  }
	});

	var uncurryThis$9 = functionUncurryThis;
	var arraySlice$2 = uncurryThis$9(_sliceInstanceProperty([]));

	var $$a = _export;
	var getBuiltIn$4 = getBuiltIn$8;
	var apply$1 = functionApply;
	var call$5 = functionCall;
	var uncurryThis$8 = functionUncurryThis;
	var fails$c = fails$l;
	var isArray$3 = isArray$1;
	var isCallable$9 = isCallable$f;
	var isObject$5 = isObject$a;
	var isSymbol$3 = isSymbol$2;
	var arraySlice$1 = arraySlice$2;
	var NATIVE_SYMBOL$3 = nativeSymbol;
	var $stringify = getBuiltIn$4('JSON', 'stringify');
	var exec$1 = uncurryThis$8(/./.exec);
	var charAt$2 = uncurryThis$8(''.charAt);
	var charCodeAt$1 = uncurryThis$8(''.charCodeAt);
	var replace = uncurryThis$8(''.replace);
	var numberToString = uncurryThis$8(1.0.toString);
	var tester = /[\uD800-\uDFFF]/g;
	var low = /^[\uD800-\uDBFF]$/;
	var hi = /^[\uDC00-\uDFFF]$/;
	var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL$3 || fails$c(function () {
	  var symbol = getBuiltIn$4('Symbol')(); // MS Edge converts symbol values to JSON as {}

	  return $stringify([symbol]) != '[null]' // WebKit converts symbol values to JSON as null
	  || $stringify({
	    a: symbol
	  }) != '{}' // V8 throws on boxed symbols
	  || $stringify(Object(symbol)) != '{}';
	}); // https://github.com/tc39/proposal-well-formed-stringify

	var ILL_FORMED_UNICODE = fails$c(function () {
	  return $stringify("\uDF06\uD834") !== "\"\\udf06\\ud834\"" || $stringify("\uDEAD") !== "\"\\udead\"";
	});

	var stringifyWithSymbolsFix = function stringifyWithSymbolsFix(it, replacer) {
	  var args = arraySlice$1(arguments);
	  var $replacer = replacer;
	  if (!isObject$5(replacer) && it === undefined || isSymbol$3(it)) return; // IE8 returns string on undefined

	  if (!isArray$3(replacer)) replacer = function replacer(key, value) {
	    if (isCallable$9($replacer)) value = call$5($replacer, this, key, value);
	    if (!isSymbol$3(value)) return value;
	  };
	  args[1] = replacer;
	  return apply$1($stringify, null, args);
	};

	var fixIllFormed = function fixIllFormed(match, offset, string) {
	  var prev = charAt$2(string, offset - 1);
	  var next = charAt$2(string, offset + 1);

	  if (exec$1(low, match) && !exec$1(hi, next) || exec$1(hi, match) && !exec$1(low, prev)) {
	    return "\\u" + numberToString(charCodeAt$1(match, 0), 16);
	  }

	  return match;
	};

	if ($stringify) {
	  // `JSON.stringify` method
	  // https://tc39.es/ecma262/#sec-json.stringify
	  $$a({
	    target: 'JSON',
	    stat: true,
	    arity: 3,
	    forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE
	  }, {
	    // eslint-disable-next-line no-unused-vars -- required for `.length`
	    stringify: function stringify(it, replacer, space) {
	      var args = arraySlice$1(arguments);
	      var result = apply$1(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
	      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;
	    }
	  });
	}

	var $$9 = _export;
	var NATIVE_SYMBOL$2 = nativeSymbol;
	var fails$b = fails$l;
	var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
	var toObject$3 = toObject$7; // V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
	// https://bugs.chromium.org/p/v8/issues/detail?id=3443

	var FORCED$2 = !NATIVE_SYMBOL$2 || fails$b(function () {
	  getOwnPropertySymbolsModule.f(1);
	}); // `Object.getOwnPropertySymbols` method
	// https://tc39.es/ecma262/#sec-object.getownpropertysymbols

	$$9({
	  target: 'Object',
	  stat: true,
	  forced: FORCED$2
	}, {
	  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
	    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
	    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject$3(it)) : [];
	  }
	});

	var path$6 = path$j;
	var getOwnPropertySymbols$1 = path$6.Object.getOwnPropertySymbols;

	var parent$a = getOwnPropertySymbols$1;
	var getOwnPropertySymbols = parent$a;

	(function (module) {
	  module.exports = getOwnPropertySymbols;
	})(getOwnPropertySymbols$2);

	var _Object$getOwnPropertySymbols = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertySymbols$2.exports);

	var getBuiltIn$3 = getBuiltIn$8;
	var engineUserAgent = getBuiltIn$3('navigator', 'userAgent') || '';

	var global$5 = global$d;
	var userAgent = engineUserAgent;
	var process = global$5.process;
	var Deno = global$5.Deno;
	var versions = process && process.versions || Deno && Deno.version;
	var v8 = versions && versions.v8;
	var match, version;

	if (v8) {
	  match = v8.split('.'); // in old Chrome, versions of V8 isn't V8 = Chrome / 10
	  // but their correct versions are not interesting for us

	  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
	} // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
	// so check `userAgent` even if `.v8` exists, but 0


	if (!version && userAgent) {
	  match = userAgent.match(/Edge\/(\d+)/);

	  if (!match || match[1] >= 74) {
	    match = userAgent.match(/Chrome\/(\d+)/);
	    if (match) version = +match[1];
	  }
	}

	var engineV8Version = version;

	var V8_VERSION$2 = engineV8Version;
	var fails$a = fails$l; // eslint-disable-next-line es-x/no-object-getownpropertysymbols -- required for testing

	var nativeSymbol = !!_Object$getOwnPropertySymbols && !fails$a(function () {
	  var symbol = _Symbol(); // Chrome 38 Symbol has incorrect toString conversion
	  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances


	  return !String(symbol) || !(Object(symbol) instanceof _Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
	  !_Symbol.sham && V8_VERSION$2 && V8_VERSION$2 < 41;
	});

	var global$4 = global$d;
	var shared = shared$6.exports;
	var hasOwn$7 = hasOwnProperty_1;
	var uid = uid$3;
	var NATIVE_SYMBOL$1 = nativeSymbol;
	var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;
	var WellKnownSymbolsStore = shared('wks');
	var Symbol = global$4.Symbol;
	var symbolFor = Symbol && Symbol['for'];
	var createWellKnownSymbol = USE_SYMBOL_AS_UID$1 ? Symbol : Symbol && Symbol.withoutSetter || uid;

	var wellKnownSymbol$9 = function wellKnownSymbol(name) {
	  if (!hasOwn$7(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL$1 || typeof WellKnownSymbolsStore[name] == 'string')) {
	    var description = 'Symbol.' + name;

	    if (NATIVE_SYMBOL$1 && hasOwn$7(Symbol, name)) {
	      WellKnownSymbolsStore[name] = Symbol[name];
	    } else if (USE_SYMBOL_AS_UID$1 && symbolFor) {
	      WellKnownSymbolsStore[name] = symbolFor(description);
	    } else {
	      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
	    }
	  }

	  return WellKnownSymbolsStore[name];
	};

	var wellKnownSymbol$8 = wellKnownSymbol$9;
	var TO_STRING_TAG$2 = wellKnownSymbol$8('toStringTag');
	var test = {};
	test[TO_STRING_TAG$2] = 'z';
	var toStringTagSupport = String(test) === '[object z]';

	var TO_STRING_TAG_SUPPORT = toStringTagSupport;
	var isCallable$8 = isCallable$f;
	var classofRaw$1 = classofRaw;
	var wellKnownSymbol$7 = wellKnownSymbol$9;
	var TO_STRING_TAG$1 = wellKnownSymbol$7('toStringTag');
	var $Object$3 = Object; // ES3 wrong here

	var CORRECT_ARGUMENTS = classofRaw$1(function () {
	  return arguments;
	}()) == 'Arguments'; // fallback for IE11 Script Access Denied error

	var tryGet = function tryGet(it, key) {
	  try {
	    return it[key];
	  } catch (error) {
	    /* empty */
	  }
	}; // getting tag from ES6+ `Object.prototype.toString`


	var classof$6 = TO_STRING_TAG_SUPPORT ? classofRaw$1 : function (it) {
	  var O, tag, result;
	  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
	  : typeof (tag = tryGet(O = $Object$3(it), TO_STRING_TAG$1)) == 'string' ? tag // builtinTag case
	  : CORRECT_ARGUMENTS ? classofRaw$1(O) // ES3 arguments fallback
	  : (result = classofRaw$1(O)) == 'Object' && isCallable$8(O.callee) ? 'Arguments' : result;
	};

	var uncurryThis$7 = functionUncurryThis;
	var fails$9 = fails$l;
	var isCallable$7 = isCallable$f;
	var classof$5 = classof$6;
	var getBuiltIn$2 = getBuiltIn$8;
	var inspectSource = inspectSource$2;

	var noop = function noop() {
	  /* empty */
	};

	var empty = [];
	var construct$1 = getBuiltIn$2('Reflect', 'construct');
	var constructorRegExp = /^\s*(?:class|function)\b/;
	var exec = uncurryThis$7(constructorRegExp.exec);
	var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

	var isConstructorModern = function isConstructor(argument) {
	  if (!isCallable$7(argument)) return false;

	  try {
	    construct$1(noop, empty, argument);
	    return true;
	  } catch (error) {
	    return false;
	  }
	};

	var isConstructorLegacy = function isConstructor(argument) {
	  if (!isCallable$7(argument)) return false;

	  switch (classof$5(argument)) {
	    case 'AsyncFunction':
	    case 'GeneratorFunction':
	    case 'AsyncGeneratorFunction':
	      return false;
	  }

	  try {
	    // we can't check .prototype since constructors produced by .bind haven't it
	    // `Function#toString` throws on some built-it function in some legacy engines
	    // (for example, `DOMQuad` and similar in FF41-)
	    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
	  } catch (error) {
	    return true;
	  }
	};

	isConstructorLegacy.sham = true; // `IsConstructor` abstract operation
	// https://tc39.es/ecma262/#sec-isconstructor

	var isConstructor$1 = !construct$1 || fails$9(function () {
	  var called;
	  return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {
	    called = true;
	  }) || called;
	}) ? isConstructorLegacy : isConstructorModern;

	var fails$8 = fails$l;
	var wellKnownSymbol$6 = wellKnownSymbol$9;
	var V8_VERSION$1 = engineV8Version;
	var SPECIES$1 = wellKnownSymbol$6('species');

	var arrayMethodHasSpeciesSupport$2 = function arrayMethodHasSpeciesSupport(METHOD_NAME) {
	  // We can't use this feature detection in V8 since it causes
	  // deoptimization and serious performance degradation
	  // https://github.com/zloirock/core-js/issues/677
	  return V8_VERSION$1 >= 51 || !fails$8(function () {
	    var array = [];
	    var constructor = array.constructor = {};

	    constructor[SPECIES$1] = function () {
	      return {
	        foo: 1
	      };
	    };

	    return array[METHOD_NAME](Boolean).foo !== 1;
	  });
	};

	var $$8 = _export;
	var isArray$2 = isArray$1;
	var isConstructor = isConstructor$1;
	var isObject$4 = isObject$a;
	var toAbsoluteIndex = toAbsoluteIndex$3;
	var lengthOfArrayLike$1 = lengthOfArrayLike$5;
	var toIndexedObject$4 = toIndexedObject$1;
	var createProperty$1 = createProperty$3;
	var wellKnownSymbol$5 = wellKnownSymbol$9;
	var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$2;
	var un$Slice = arraySlice$2;
	var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport$1('slice');
	var SPECIES = wellKnownSymbol$5('species');
	var $Array = Array;
	var max = Math.max; // `Array.prototype.slice` method
	// https://tc39.es/ecma262/#sec-array.prototype.slice
	// fallback for not array-like ES3 strings and DOM objects

	$$8({
	  target: 'Array',
	  proto: true,
	  forced: !HAS_SPECIES_SUPPORT
	}, {
	  slice: function slice(start, end) {
	    var O = toIndexedObject$4(this);
	    var length = lengthOfArrayLike$1(O);
	    var k = toAbsoluteIndex(start, length);
	    var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible

	    var Constructor, result, n;

	    if (isArray$2(O)) {
	      Constructor = O.constructor; // cross-realm fallback

	      if (isConstructor(Constructor) && (Constructor === $Array || isArray$2(Constructor.prototype))) {
	        Constructor = undefined;
	      } else if (isObject$4(Constructor)) {
	        Constructor = Constructor[SPECIES];
	        if (Constructor === null) Constructor = undefined;
	      }

	      if (Constructor === $Array || Constructor === undefined) {
	        return un$Slice(O, k, fin);
	      }
	    }

	    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));

	    for (n = 0; k < fin; k++, n++) {
	      if (k in O) createProperty$1(result, n, O[k]);
	    }

	    result.length = n;
	    return result;
	  }
	});

	var entryVirtual$3 = entryVirtual$7;

	var slice$2 = _sliceInstanceProperty(entryVirtual$3('Array'));

	var isPrototypeOf$4 = objectIsPrototypeOf;
	var method$3 = slice$2;
	var ArrayPrototype$2 = Array.prototype;

	var slice$1 = function slice(it) {
	  var own = _sliceInstanceProperty(it);

	  return it === ArrayPrototype$2 || isPrototypeOf$4(ArrayPrototype$2, it) && own === _sliceInstanceProperty(ArrayPrototype$2) ? method$3 : own;
	};

	var parent$9 = slice$1;
	var slice = parent$9;

	(function (module) {
	  module.exports = slice;
	})(slice$3);

	var _sliceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(slice$3.exports);

	var uncurryThis$6 = functionUncurryThis;
	var toString$2 = uncurryThis$6({}.toString);
	var stringSlice$1 = uncurryThis$6(_sliceInstanceProperty(''));

	var classofRaw = function classofRaw(it) {
	  return stringSlice$1(toString$2(it), 8, -1);
	};

	var classof$4 = classofRaw; // `IsArray` abstract operation
	// https://tc39.es/ecma262/#sec-isarray
	// eslint-disable-next-line es-x/no-array-isarray -- safe

	var isArray$1 = _Array$isArray || function isArray(argument) {
	  return classof$4(argument) == 'Array';
	};

	var $TypeError$4 = TypeError;
	var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

	var doesNotExceedSafeInteger$1 = function doesNotExceedSafeInteger(it) {
	  if (it > MAX_SAFE_INTEGER) throw $TypeError$4('Maximum allowed index exceeded');
	  return it;
	};

	var $$7 = _export;
	var fails$7 = fails$l;
	var isArray = isArray$1;
	var isObject$3 = isObject$a;
	var toObject$2 = toObject$7;
	var lengthOfArrayLike = lengthOfArrayLike$5;
	var doesNotExceedSafeInteger = doesNotExceedSafeInteger$1;
	var createProperty = createProperty$3;
	var arraySpeciesCreate = arraySpeciesCreate$2;
	var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$2;
	var wellKnownSymbol$4 = wellKnownSymbol$9;
	var V8_VERSION = engineV8Version;
	var IS_CONCAT_SPREADABLE = wellKnownSymbol$4('isConcatSpreadable'); // We can't use this feature detection in V8 since it causes
	// deoptimization and serious performance degradation
	// https://github.com/zloirock/core-js/issues/679

	var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails$7(function () {
	  var array = [];
	  array[IS_CONCAT_SPREADABLE] = false;
	  return _concatInstanceProperty(array).call(array)[0] !== array;
	});
	var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

	var isConcatSpreadable = function isConcatSpreadable(O) {
	  if (!isObject$3(O)) return false;
	  var spreadable = O[IS_CONCAT_SPREADABLE];
	  return spreadable !== undefined ? !!spreadable : isArray(O);
	};

	var FORCED$1 = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method
	// https://tc39.es/ecma262/#sec-array.prototype.concat
	// with adding support of @@isConcatSpreadable and @@species

	$$7({
	  target: 'Array',
	  proto: true,
	  arity: 1,
	  forced: FORCED$1
	}, {
	  // eslint-disable-next-line no-unused-vars -- required for `.length`
	  concat: function concat(arg) {
	    var O = toObject$2(this);
	    var A = arraySpeciesCreate(O, 0);
	    var n = 0;
	    var i, k, length, len, E;

	    for (i = -1, length = arguments.length; i < length; i++) {
	      E = i === -1 ? O : arguments[i];

	      if (isConcatSpreadable(E)) {
	        len = lengthOfArrayLike(E);
	        doesNotExceedSafeInteger(n + len);

	        for (k = 0; k < len; k++, n++) {
	          if (k in E) createProperty(A, n, E[k]);
	        }
	      } else {
	        doesNotExceedSafeInteger(n + 1);
	        createProperty(A, n++, E);
	      }
	    }

	    A.length = n;
	    return A;
	  }
	});

	var defineWellKnownSymbol$c = defineWellKnownSymbol$e; // `Symbol.asyncIterator` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.asynciterator

	defineWellKnownSymbol$c('asyncIterator');

	var defineWellKnownSymbol$b = defineWellKnownSymbol$e; // `Symbol.hasInstance` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.hasinstance

	defineWellKnownSymbol$b('hasInstance');

	var defineWellKnownSymbol$a = defineWellKnownSymbol$e; // `Symbol.isConcatSpreadable` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable

	defineWellKnownSymbol$a('isConcatSpreadable');

	var defineWellKnownSymbol$9 = defineWellKnownSymbol$e; // `Symbol.iterator` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.iterator

	defineWellKnownSymbol$9('iterator');

	var defineWellKnownSymbol$8 = defineWellKnownSymbol$e; // `Symbol.match` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.match

	defineWellKnownSymbol$8('match');

	var defineWellKnownSymbol$7 = defineWellKnownSymbol$e; // `Symbol.matchAll` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.matchall

	defineWellKnownSymbol$7('matchAll');

	var defineWellKnownSymbol$6 = defineWellKnownSymbol$e; // `Symbol.replace` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.replace

	defineWellKnownSymbol$6('replace');

	var defineWellKnownSymbol$5 = defineWellKnownSymbol$e; // `Symbol.search` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.search

	defineWellKnownSymbol$5('search');

	var defineWellKnownSymbol$4 = defineWellKnownSymbol$e; // `Symbol.species` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.species

	defineWellKnownSymbol$4('species');

	var defineWellKnownSymbol$3 = defineWellKnownSymbol$e; // `Symbol.split` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.split

	defineWellKnownSymbol$3('split');

	var defineWellKnownSymbol$2 = defineWellKnownSymbol$e;
	var defineSymbolToPrimitive = symbolDefineToPrimitive; // `Symbol.toPrimitive` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.toprimitive

	defineWellKnownSymbol$2('toPrimitive'); // `Symbol.prototype[@@toPrimitive]` method
	// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive

	defineSymbolToPrimitive();

	var getBuiltIn$1 = getBuiltIn$8;
	var defineWellKnownSymbol$1 = defineWellKnownSymbol$e;
	var setToStringTag$3 = setToStringTag$5; // `Symbol.toStringTag` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.tostringtag

	defineWellKnownSymbol$1('toStringTag'); // `Symbol.prototype[@@toStringTag]` property
	// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag

	setToStringTag$3(getBuiltIn$1('Symbol'), 'Symbol');

	var defineWellKnownSymbol = defineWellKnownSymbol$e; // `Symbol.unscopables` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.unscopables

	defineWellKnownSymbol('unscopables');

	var global$3 = global$d;
	var setToStringTag$2 = setToStringTag$5; // JSON[@@toStringTag] property
	// https://tc39.es/ecma262/#sec-json-@@tostringtag

	setToStringTag$2(global$3.JSON, 'JSON', true);

	var path$5 = path$j;
	var symbol$1 = path$5.Symbol;

	var parent$8 = symbol$1;
	var symbol = parent$8;

	(function (module) {
	  module.exports = symbol;
	})(symbol$2);

	var _Symbol = /*@__PURE__*/getDefaultExportFromCjs(symbol$2.exports);

	var iterator$2 = {exports: {}};

	var uncurryThis$5 = functionUncurryThis;
	var toIntegerOrInfinity = toIntegerOrInfinity$3;
	var toString$1 = toString$5;
	var requireObjectCoercible$1 = requireObjectCoercible$3;
	var charAt$1 = uncurryThis$5(''.charAt);
	var charCodeAt = uncurryThis$5(''.charCodeAt);
	var stringSlice = uncurryThis$5(_sliceInstanceProperty(''));

	var createMethod = function createMethod(CONVERT_TO_STRING) {
	  return function ($this, pos) {
	    var S = toString$1(requireObjectCoercible$1($this));
	    var position = toIntegerOrInfinity(pos);
	    var size = S.length;
	    var first, second;
	    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
	    first = charCodeAt(S, position);
	    return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt$1(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
	  };
	};

	var stringMultibyte = {
	  // `String.prototype.codePointAt` method
	  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
	  codeAt: createMethod(false),
	  // `String.prototype.at` method
	  // https://github.com/mathiasbynens/String.prototype.at
	  charAt: createMethod(true)
	};

	var entries$3 = {exports: {}};

	var entryVirtual$2 = entryVirtual$7;

	var entries$2 = _entriesInstanceProperty(entryVirtual$2('Array'));

	var parent$7 = entries$2;
	var entries$1 = parent$7;

	var classof$3 = classof$6;
	var hasOwn$6 = hasOwnProperty_1;
	var isPrototypeOf$3 = objectIsPrototypeOf;
	var method$2 = entries$1;
	var ArrayPrototype$1 = Array.prototype;
	var DOMIterables$2 = {
	  DOMTokenList: true,
	  NodeList: true
	};

	var entries = function entries(it) {
	  var own = _entriesInstanceProperty(it);

	  return it === ArrayPrototype$1 || isPrototypeOf$3(ArrayPrototype$1, it) && own === _entriesInstanceProperty(ArrayPrototype$1) || hasOwn$6(DOMIterables$2, classof$3(it)) ? method$2 : own;
	};

	(function (module) {
	  module.exports = entries;
	})(entries$3);

	var _entriesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(entries$3.exports);

	var DESCRIPTORS$4 = descriptors;
	var hasOwn$5 = hasOwnProperty_1;
	var FunctionPrototype$2 = Function.prototype; // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe

	var getDescriptor = DESCRIPTORS$4 && _Object$getOwnPropertyDescriptor;
	var EXISTS = hasOwn$5(FunctionPrototype$2, 'name'); // additional protection from minified / mangled / dropped function names

	var PROPER = EXISTS && function something() {
	  /* empty */
	}.name === 'something';

	var CONFIGURABLE$1 = EXISTS && (!DESCRIPTORS$4 || DESCRIPTORS$4 && getDescriptor(FunctionPrototype$2, 'name').configurable);
	var functionName = {
	  EXISTS: EXISTS,
	  PROPER: PROPER,
	  CONFIGURABLE: CONFIGURABLE$1
	};

	var getPrototypeOf$4 = {exports: {}};

	var fails$6 = fails$l;
	var correctPrototypeGetter = !fails$6(function () {
	  function F() {
	    /* empty */
	  }

	  F.prototype.constructor = null; // eslint-disable-next-line es-x/no-object-getprototypeof -- required for testing

	  return _Object$getPrototypeOf(new F()) !== F.prototype;
	});

	var $$6 = _export;
	var fails$5 = fails$l;
	var toObject$1 = toObject$7;
	var nativeGetPrototypeOf = objectGetPrototypeOf;
	var CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;
	var FAILS_ON_PRIMITIVES$1 = fails$5(function () {
	  nativeGetPrototypeOf(1);
	}); // `Object.getPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.getprototypeof

	$$6({
	  target: 'Object',
	  stat: true,
	  forced: FAILS_ON_PRIMITIVES$1,
	  sham: !CORRECT_PROTOTYPE_GETTER$1
	}, {
	  getPrototypeOf: function getPrototypeOf(it) {
	    return nativeGetPrototypeOf(toObject$1(it));
	  }
	});

	var path$4 = path$j;
	var getPrototypeOf$3 = path$4.Object.getPrototypeOf;

	var parent$6 = getPrototypeOf$3;
	var getPrototypeOf$2 = parent$6;

	(function (module) {
	  module.exports = getPrototypeOf$2;
	})(getPrototypeOf$4);

	var _Object$getPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(getPrototypeOf$4.exports);

	var hasOwn$4 = hasOwnProperty_1;
	var isCallable$6 = isCallable$f;
	var toObject = toObject$7;
	var sharedKey = sharedKey$4;
	var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;
	var IE_PROTO = sharedKey('IE_PROTO');
	var $Object$2 = Object;
	var ObjectPrototype = $Object$2.prototype; // `Object.getPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.getprototypeof
	// eslint-disable-next-line es-x/no-object-getprototypeof -- safe

	var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER ? _Object$getPrototypeOf : function (O) {
	  var object = toObject(O);
	  if (hasOwn$4(object, IE_PROTO)) return object[IE_PROTO];
	  var constructor = object.constructor;

	  if (isCallable$6(constructor) && object instanceof constructor) {
	    return constructor.prototype;
	  }

	  return object instanceof $Object$2 ? ObjectPrototype : null;
	};

	var fails$4 = fails$l;
	var isCallable$5 = isCallable$f;
	var create$1 = objectCreate;
	var getPrototypeOf$1 = objectGetPrototypeOf;
	var defineBuiltIn$1 = defineBuiltIn$4;
	var wellKnownSymbol$3 = wellKnownSymbol$9;
	var ITERATOR$1 = wellKnownSymbol$3('iterator');
	var BUGGY_SAFARI_ITERATORS$1 = false; // `%IteratorPrototype%` object
	// https://tc39.es/ecma262/#sec-%iteratorprototype%-object

	var IteratorPrototype$1, PrototypeOfArrayIteratorPrototype, arrayIterator;
	/* eslint-disable es-x/no-array-prototype-keys -- safe */

	if (_keysInstanceProperty([])) {
	  var _context;

	  arrayIterator = _keysInstanceProperty(_context = []).call(_context); // Safari 8 has buggy iterators w/o `next`

	  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;else {
	    PrototypeOfArrayIteratorPrototype = getPrototypeOf$1(getPrototypeOf$1(arrayIterator));
	    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$1 = PrototypeOfArrayIteratorPrototype;
	  }
	}

	var NEW_ITERATOR_PROTOTYPE = IteratorPrototype$1 == undefined || fails$4(function () {
	  var test = {}; // FF44- legacy iterators case

	  return IteratorPrototype$1[ITERATOR$1].call(test) !== test;
	});
	if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$1 = {};else IteratorPrototype$1 = create$1(IteratorPrototype$1); // `%IteratorPrototype%[@@iterator]()` method
	// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator

	if (!isCallable$5(IteratorPrototype$1[ITERATOR$1])) {
	  defineBuiltIn$1(IteratorPrototype$1, ITERATOR$1, function () {
	    return this;
	  });
	}

	var iteratorsCore = {
	  IteratorPrototype: IteratorPrototype$1,
	  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
	};

	var iterators = {};

	var IteratorPrototype = iteratorsCore.IteratorPrototype;
	var create = objectCreate;
	var createPropertyDescriptor$1 = createPropertyDescriptor$5;
	var setToStringTag$1 = setToStringTag$5;
	var Iterators$3 = iterators;

	var returnThis$1 = function returnThis() {
	  return this;
	};

	var createIteratorConstructor$1 = function createIteratorConstructor(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
	  var TO_STRING_TAG = NAME + ' Iterator';
	  IteratorConstructor.prototype = create(IteratorPrototype, {
	    next: createPropertyDescriptor$1(+!ENUMERABLE_NEXT, next)
	  });
	  setToStringTag$1(IteratorConstructor, TO_STRING_TAG, false, true);
	  Iterators$3[TO_STRING_TAG] = returnThis$1;
	  return IteratorConstructor;
	};

	var setPrototypeOf$3 = {exports: {}};

	var $$5 = _export;
	var setPrototypeOf$2 = objectSetPrototypeOf; // `Object.setPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.setprototypeof

	$$5({
	  target: 'Object',
	  stat: true
	}, {
	  setPrototypeOf: setPrototypeOf$2
	});

	var path$3 = path$j;
	var setPrototypeOf$1 = path$3.Object.setPrototypeOf;

	var parent$5 = setPrototypeOf$1;
	var setPrototypeOf = parent$5;

	(function (module) {
	  module.exports = setPrototypeOf;
	})(setPrototypeOf$3);

	var _Object$setPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(setPrototypeOf$3.exports);

	var isCallable$4 = isCallable$f;
	var $String = String;
	var $TypeError$3 = TypeError;

	var aPossiblePrototype$1 = function aPossiblePrototype(argument) {
	  if (typeof argument == 'object' || isCallable$4(argument)) return argument;
	  throw $TypeError$3("Can't set " + $String(argument) + ' as a prototype');
	};

	var uncurryThis$4 = functionUncurryThis;
	var anObject$1 = anObject$6;
	var aPossiblePrototype = aPossiblePrototype$1; // `Object.setPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.setprototypeof
	// Works with __proto__ only. Old v8 can't work with null proto objects.
	// eslint-disable-next-line es-x/no-object-setprototypeof -- safe

	var objectSetPrototypeOf = _Object$setPrototypeOf || ('__proto__' in {} ? function () {
	  var CORRECT_SETTER = false;
	  var test = {};
	  var setter;

	  try {
	    // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe
	    setter = uncurryThis$4(_Object$getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
	    setter(test, []);
	    CORRECT_SETTER = test instanceof Array;
	  } catch (error) {
	    /* empty */
	  }

	  return function setPrototypeOf(O, proto) {
	    anObject$1(O);
	    aPossiblePrototype(proto);
	    if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;
	    return O;
	  };
	}() : undefined);

	var $$4 = _export;
	var call$4 = functionCall;
	var FunctionName = functionName;
	var createIteratorConstructor = createIteratorConstructor$1;
	var getPrototypeOf = objectGetPrototypeOf;
	var setToStringTag = setToStringTag$5;
	var defineBuiltIn = defineBuiltIn$4;
	var wellKnownSymbol$2 = wellKnownSymbol$9;
	var Iterators$2 = iterators;
	var IteratorsCore = iteratorsCore;
	var PROPER_FUNCTION_NAME = FunctionName.PROPER;
	var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
	var ITERATOR = wellKnownSymbol$2('iterator');
	var KEYS = 'keys';
	var VALUES = 'values';
	var ENTRIES = 'entries';

	var returnThis = function returnThis() {
	  return this;
	};

	var defineIterator$2 = function defineIterator(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
	  createIteratorConstructor(IteratorConstructor, NAME, next);

	  var getIterationMethod = function getIterationMethod(KIND) {
	    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
	    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];

	    switch (KIND) {
	      case KEYS:
	        return function keys() {
	          return new IteratorConstructor(this, KIND);
	        };

	      case VALUES:
	        return function values() {
	          return new IteratorConstructor(this, KIND);
	        };

	      case ENTRIES:
	        return function entries() {
	          return new IteratorConstructor(this, KIND);
	        };
	    }

	    return function () {
	      return new IteratorConstructor(this);
	    };
	  };

	  var TO_STRING_TAG = NAME + ' Iterator';
	  var INCORRECT_VALUES_NAME = false;
	  var IterablePrototype = Iterable.prototype;
	  var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
	  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
	  var anyNativeIterator = NAME == 'Array' ? _entriesInstanceProperty(IterablePrototype) || nativeIterator : nativeIterator;
	  var CurrentIteratorPrototype, methods, KEY; // fix native

	  if (anyNativeIterator) {
	    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));

	    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {


	      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
	      Iterators$2[TO_STRING_TAG] = returnThis;
	    }
	  } // fix Array.prototype.{ values, @@iterator }.name in V8 / FF


	  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
	    {
	      INCORRECT_VALUES_NAME = true;

	      defaultIterator = function values() {
	        return call$4(nativeIterator, this);
	      };
	    }
	  } // export additional methods


	  if (DEFAULT) {
	    methods = {
	      values: getIterationMethod(VALUES),
	      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
	      entries: getIterationMethod(ENTRIES)
	    };
	    if (FORCED) for (KEY in methods) {
	      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
	        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
	      }
	    } else $$4({
	      target: NAME,
	      proto: true,
	      forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
	    }, methods);
	  } // define iterator


	  if ((FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
	    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, {
	      name: DEFAULT
	    });
	  }

	  Iterators$2[NAME] = defaultIterator;
	  return methods;
	};

	var charAt = stringMultibyte.charAt;
	var toString = toString$5;
	var InternalStateModule$1 = internalState;
	var defineIterator$1 = defineIterator$2;
	var STRING_ITERATOR = 'String Iterator';
	var setInternalState$1 = InternalStateModule$1.set;
	var getInternalState$1 = InternalStateModule$1.getterFor(STRING_ITERATOR); // `String.prototype[@@iterator]` method
	// https://tc39.es/ecma262/#sec-string.prototype-@@iterator

	defineIterator$1(String, 'String', function (iterated) {
	  setInternalState$1(this, {
	    type: STRING_ITERATOR,
	    string: toString(iterated),
	    index: 0
	  }); // `%StringIteratorPrototype%.next` method
	  // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
	}, function next() {
	  var state = getInternalState$1(this);
	  var string = state.string;
	  var index = state.index;
	  var point;
	  if (index >= string.length) return {
	    value: undefined,
	    done: true
	  };
	  point = charAt(string, index);
	  state.index += point.length;
	  return {
	    value: point,
	    done: false
	  };
	});

	var WrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
	var iterator$1 = WrappedWellKnownSymbolModule.f('iterator');

	var parent$4 = iterator$1;
	var iterator = parent$4;

	(function (module) {
	  module.exports = iterator;
	})(iterator$2);

	var _Symbol$iterator = /*@__PURE__*/getDefaultExportFromCjs(iterator$2.exports);

	var NATIVE_SYMBOL = nativeSymbol;
	var useSymbolAsUid = NATIVE_SYMBOL && !_Symbol.sham && typeof _Symbol$iterator == 'symbol';

	var getBuiltIn = getBuiltIn$8;
	var isCallable$3 = isCallable$f;
	var isPrototypeOf$2 = objectIsPrototypeOf;
	var USE_SYMBOL_AS_UID = useSymbolAsUid;
	var $Object$1 = Object;
	var isSymbol$2 = USE_SYMBOL_AS_UID ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  var $Symbol = getBuiltIn('Symbol');
	  return isCallable$3($Symbol) && isPrototypeOf$2($Symbol.prototype, $Object$1(it));
	};

	var aCallable$1 = aCallable$4; // `GetMethod` abstract operation
	// https://tc39.es/ecma262/#sec-getmethod

	var getMethod$1 = function getMethod(V, P) {
	  var func = V[P];
	  return func == null ? undefined : aCallable$1(func);
	};

	var call$3 = functionCall;
	var isCallable$2 = isCallable$f;
	var isObject$2 = isObject$a;
	var $TypeError$2 = TypeError; // `OrdinaryToPrimitive` abstract operation
	// https://tc39.es/ecma262/#sec-ordinarytoprimitive

	var ordinaryToPrimitive$1 = function ordinaryToPrimitive(input, pref) {
	  var fn, val;
	  if (pref === 'string' && isCallable$2(fn = input.toString) && !isObject$2(val = call$3(fn, input))) return val;
	  if (isCallable$2(fn = input.valueOf) && !isObject$2(val = call$3(fn, input))) return val;
	  if (pref !== 'string' && isCallable$2(fn = input.toString) && !isObject$2(val = call$3(fn, input))) return val;
	  throw $TypeError$2("Can't convert object to primitive value");
	};

	var call$2 = functionCall;
	var isObject$1 = isObject$a;
	var isSymbol$1 = isSymbol$2;
	var getMethod = getMethod$1;
	var ordinaryToPrimitive = ordinaryToPrimitive$1;
	var wellKnownSymbol$1 = wellKnownSymbol$9;
	var $TypeError$1 = TypeError;
	var TO_PRIMITIVE = wellKnownSymbol$1('toPrimitive'); // `ToPrimitive` abstract operation
	// https://tc39.es/ecma262/#sec-toprimitive

	var toPrimitive$1 = function toPrimitive(input, pref) {
	  if (!isObject$1(input) || isSymbol$1(input)) return input;
	  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
	  var result;

	  if (exoticToPrim) {
	    if (pref === undefined) pref = 'default';
	    result = call$2(exoticToPrim, input, pref);
	    if (!isObject$1(result) || isSymbol$1(result)) return result;
	    throw $TypeError$1("Can't convert object to primitive value");
	  }

	  if (pref === undefined) pref = 'number';
	  return ordinaryToPrimitive(input, pref);
	};

	var toPrimitive = toPrimitive$1;
	var isSymbol = isSymbol$2; // `ToPropertyKey` abstract operation
	// https://tc39.es/ecma262/#sec-topropertykey

	var toPropertyKey$2 = function toPropertyKey(argument) {
	  var key = toPrimitive(argument, 'string');
	  return isSymbol(key) ? key : key + '';
	};

	var DESCRIPTORS$3 = descriptors;
	var IE8_DOM_DEFINE$1 = ie8DomDefine;
	var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
	var anObject = anObject$6;
	var toPropertyKey$1 = toPropertyKey$2;
	var $TypeError = TypeError; // eslint-disable-next-line es-x/no-object-defineproperty -- safe

	var $defineProperty = _Object$defineProperty; // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe

	var $getOwnPropertyDescriptor$1 = _Object$getOwnPropertyDescriptor;
	var ENUMERABLE = 'enumerable';
	var CONFIGURABLE = 'configurable';
	var WRITABLE = 'writable'; // `Object.defineProperty` method
	// https://tc39.es/ecma262/#sec-object.defineproperty

	objectDefineProperty.f = DESCRIPTORS$3 ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPropertyKey$1(P);
	  anObject(Attributes);

	  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
	    var current = $getOwnPropertyDescriptor$1(O, P);

	    if (current && current[WRITABLE]) {
	      O[P] = Attributes.value;
	      Attributes = {
	        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
	        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
	        writable: false
	      };
	    }
	  }

	  return $defineProperty(O, P, Attributes);
	} : $defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPropertyKey$1(P);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE$1) try {
	    return $defineProperty(O, P, Attributes);
	  } catch (error) {
	    /* empty */
	  }
	  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};

	var $$3 = _export;
	var DESCRIPTORS$2 = descriptors;
	var defineProperty$2 = objectDefineProperty.f; // `Object.defineProperty` method
	// https://tc39.es/ecma262/#sec-object.defineproperty
	// eslint-disable-next-line es-x/no-object-defineproperty -- safe

	$$3({
	  target: 'Object',
	  stat: true,
	  forced: _Object$defineProperty !== defineProperty$2,
	  sham: !DESCRIPTORS$2
	}, {
	  defineProperty: defineProperty$2
	});

	var path$2 = path$j;
	var Object$2 = path$2.Object;

	var defineProperty$1 = defineProperty$6.exports = function defineProperty(it, key, desc) {
	  return Object$2.defineProperty(it, key, desc);
	};

	if (Object$2.defineProperty.sham) defineProperty$1.sham = true;

	var parent$3 = defineProperty$6.exports;
	var defineProperty = parent$3;

	(function (module) {
	  module.exports = defineProperty;
	})(defineProperty$7);

	var _Object$defineProperty = /*@__PURE__*/getDefaultExportFromCjs(defineProperty$7.exports);

	var fails$3 = fails$l; // Detect IE8's incomplete defineProperty implementation

	var descriptors = !fails$3(function () {
	  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing
	  return _Object$defineProperty({}, 1, {
	    get: function get() {
	      return 7;
	    }
	  })[1] != 7;
	});

	var $$2 = _export;
	var fails$2 = fails$l;
	var toIndexedObject$3 = toIndexedObject$1;
	var nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
	var DESCRIPTORS$1 = descriptors;
	var FAILS_ON_PRIMITIVES = fails$2(function () {
	  nativeGetOwnPropertyDescriptor(1);
	});
	var FORCED = !DESCRIPTORS$1 || FAILS_ON_PRIMITIVES; // `Object.getOwnPropertyDescriptor` method
	// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

	$$2({
	  target: 'Object',
	  stat: true,
	  forced: FORCED,
	  sham: !DESCRIPTORS$1
	}, {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
	    return nativeGetOwnPropertyDescriptor(toIndexedObject$3(it), key);
	  }
	});

	var path$1 = path$j;
	var Object$1 = path$1.Object;

	var getOwnPropertyDescriptor$2 = getOwnPropertyDescriptor$4.exports = function getOwnPropertyDescriptor(it, key) {
	  return Object$1.getOwnPropertyDescriptor(it, key);
	};

	if (Object$1.getOwnPropertyDescriptor.sham) getOwnPropertyDescriptor$2.sham = true;

	var parent$2 = getOwnPropertyDescriptor$4.exports;
	var getOwnPropertyDescriptor$1 = parent$2;

	(function (module) {
	  module.exports = getOwnPropertyDescriptor$1;
	})(getOwnPropertyDescriptor$5);

	var _Object$getOwnPropertyDescriptor = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyDescriptor$5.exports);

	var objectGetOwnPropertyDescriptor = {};

	var DESCRIPTORS = descriptors;
	var call$1 = functionCall;
	var propertyIsEnumerableModule = objectPropertyIsEnumerable;
	var createPropertyDescriptor = createPropertyDescriptor$5;
	var toIndexedObject$2 = toIndexedObject$1;
	var toPropertyKey = toPropertyKey$2;
	var hasOwn$3 = hasOwnProperty_1;
	var IE8_DOM_DEFINE = ie8DomDefine; // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe

	var $getOwnPropertyDescriptor = _Object$getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method
	// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

	objectGetOwnPropertyDescriptor.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
	  O = toIndexedObject$2(O);
	  P = toPropertyKey(P);
	  if (IE8_DOM_DEFINE) try {
	    return $getOwnPropertyDescriptor(O, P);
	  } catch (error) {
	    /* empty */
	  }
	  if (hasOwn$3(O, P)) return createPropertyDescriptor(!call$1(propertyIsEnumerableModule.f, O, P), O[P]);
	};

	var fails$1 = fails$l;
	var isCallable$1 = isCallable$f;
	var replacement = /#|\.prototype\./;

	var isForced$1 = function isForced(feature, detection) {
	  var value = data[normalize(feature)];
	  return value == POLYFILL ? true : value == NATIVE ? false : isCallable$1(detection) ? fails$1(detection) : !!detection;
	};

	var normalize = isForced$1.normalize = function (string) {
	  return String(string).replace(replacement, '.').toLowerCase();
	};

	var data = isForced$1.data = {};
	var NATIVE = isForced$1.NATIVE = 'N';
	var POLYFILL = isForced$1.POLYFILL = 'P';
	var isForced_1 = isForced$1;

	var global$2 = global$d;
	var apply = functionApply;
	var uncurryThis$3 = functionUncurryThis;
	var isCallable = isCallable$f;
	var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
	var isForced = isForced_1;
	var path = path$j;
	var bind$5 = functionBindContext;
	var createNonEnumerableProperty$1 = createNonEnumerableProperty$5;
	var hasOwn$2 = hasOwnProperty_1;

	var wrapConstructor = function wrapConstructor(NativeConstructor) {
	  var Wrapper = function Wrapper(a, b, c) {
	    if (this instanceof Wrapper) {
	      switch (arguments.length) {
	        case 0:
	          return new NativeConstructor();

	        case 1:
	          return new NativeConstructor(a);

	        case 2:
	          return new NativeConstructor(a, b);
	      }

	      return new NativeConstructor(a, b, c);
	    }

	    return apply(NativeConstructor, this, arguments);
	  };

	  Wrapper.prototype = NativeConstructor.prototype;
	  return Wrapper;
	};
	/*
	  options.target         - name of the target object
	  options.global         - target is the global object
	  options.stat           - export as static methods of target
	  options.proto          - export as prototype methods of target
	  options.real           - real prototype method for the `pure` version
	  options.forced         - export even if the native feature is available
	  options.bind           - bind methods to the target, required for the `pure` version
	  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
	  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
	  options.sham           - add a flag to not completely full polyfills
	  options.enumerable     - export as enumerable property
	  options.dontCallGetSet - prevent calling a getter on target
	  options.name           - the .name of the function if it does not match the key
	*/


	var _export = function _export(options, source) {
	  var TARGET = options.target;
	  var GLOBAL = options.global;
	  var STATIC = options.stat;
	  var PROTO = options.proto;
	  var nativeSource = GLOBAL ? global$2 : STATIC ? global$2[TARGET] : (global$2[TARGET] || {}).prototype;
	  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty$1(path, TARGET, {})[TARGET];
	  var targetPrototype = target.prototype;
	  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
	  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;

	  for (key in source) {
	    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contains in native

	    USE_NATIVE = !FORCED && nativeSource && hasOwn$2(nativeSource, key);
	    targetProperty = target[key];
	    if (USE_NATIVE) if (options.dontCallGetSet) {
	      descriptor = getOwnPropertyDescriptor(nativeSource, key);
	      nativeProperty = descriptor && descriptor.value;
	    } else nativeProperty = nativeSource[key]; // export native or implementation

	    sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
	    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue; // bind timers to global for call from export context

	    if (_bindInstanceProperty(options) && USE_NATIVE) resultProperty = bind$5(sourceProperty, global$2); // wrap global constructors for prevent changs in this version
	    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty); // make static versions for prototype methods
	    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis$3(sourceProperty); // default case
	    else resultProperty = sourceProperty; // add a flag to not completely full polyfills

	    if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
	      createNonEnumerableProperty$1(resultProperty, 'sham', true);
	    }

	    createNonEnumerableProperty$1(target, key, resultProperty);

	    if (PROTO) {
	      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';

	      if (!hasOwn$2(path, VIRTUAL_PROTOTYPE)) {
	        createNonEnumerableProperty$1(path, VIRTUAL_PROTOTYPE, {});
	      } // export virtual prototype methods


	      createNonEnumerableProperty$1(path[VIRTUAL_PROTOTYPE], key, sourceProperty); // export real prototype methods

	      if (options.real && targetPrototype && !targetPrototype[key]) {
	        createNonEnumerableProperty$1(targetPrototype, key, sourceProperty);
	      }
	    }
	  }
	};

	var uncurryThis$2 = functionUncurryThis;
	var aCallable = aCallable$4;
	var isObject = isObject$a;
	var hasOwn$1 = hasOwnProperty_1;
	var arraySlice = arraySlice$2;
	var NATIVE_BIND$1 = functionBindNative;
	var $Function = Function;
	var concat = uncurryThis$2(_concatInstanceProperty([]));
	var join = uncurryThis$2([].join);
	var factories = {};

	var construct = function construct(C, argsLength, args) {
	  if (!hasOwn$1(factories, argsLength)) {
	    for (var list = [], i = 0; i < argsLength; i++) {
	      list[i] = 'a[' + i + ']';
	    }

	    factories[argsLength] = $Function('C,a', 'return new C(' + join(list, ',') + ')');
	  }

	  return factories[argsLength](C, args);
	}; // `Function.prototype.bind` method implementation
	// https://tc39.es/ecma262/#sec-function.prototype.bind


	var functionBind = NATIVE_BIND$1 ? _bindInstanceProperty($Function) : function bind(that
	/* , ...args */
	) {
	  var F = aCallable(this);
	  var Prototype = F.prototype;
	  var partArgs = arraySlice(arguments, 1);

	  var boundFunction = function
	    /* args... */
	  bound() {
	    var args = concat(partArgs, arraySlice(arguments));
	    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
	  };

	  if (isObject(Prototype)) boundFunction.prototype = Prototype;
	  return boundFunction;
	};

	var $$1 = _export;
	var bind$4 = functionBind; // `Function.prototype.bind` method
	// https://tc39.es/ecma262/#sec-function.prototype.bind

	$$1({
	  target: 'Function',
	  proto: true,
	  forced: _bindInstanceProperty(Function) !== bind$4
	}, {
	  bind: bind$4
	});

	var entryVirtual$1 = entryVirtual$7;

	var bind$3 = _bindInstanceProperty(entryVirtual$1('Function'));

	var isPrototypeOf$1 = objectIsPrototypeOf;
	var method$1 = bind$3;
	var FunctionPrototype$1 = Function.prototype;

	var bind$2 = function bind(it) {
	  var own = _bindInstanceProperty(it);

	  return it === FunctionPrototype$1 || isPrototypeOf$1(FunctionPrototype$1, it) && own === _bindInstanceProperty(FunctionPrototype$1) ? method$1 : own;
	};

	var parent$1 = bind$2;
	var bind$1 = parent$1;

	(function (module) {
	  module.exports = bind$1;
	})(bind$8);

	var _bindInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(bind$8.exports);

	var NATIVE_BIND = functionBindNative;
	var FunctionPrototype = Function.prototype;

	var bind = _bindInstanceProperty(FunctionPrototype);

	var call = FunctionPrototype.call;

	var uncurryThis$1 = NATIVE_BIND && _bindInstanceProperty(bind).call(bind, call, call);

	var functionUncurryThis = NATIVE_BIND ? function (fn) {
	  return fn && uncurryThis$1(fn);
	} : function (fn) {
	  return fn && function () {
	    return call.apply(fn, arguments);
	  };
	};

	var uncurryThis = functionUncurryThis;
	var fails = fails$l;
	var classof$2 = classofRaw;
	var $Object = Object;
	var split = uncurryThis(''.split); // fallback for non-array-like ES3 and non-enumerable old V8 strings

	var indexedObject = fails(function () {
	  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
	  // eslint-disable-next-line no-prototype-builtins -- safe
	  return !$Object('z').propertyIsEnumerable(0);
	}) ? function (it) {
	  return classof$2(it) == 'String' ? split(it, '') : $Object(it);
	} : $Object;

	var IndexedObject = indexedObject;
	var requireObjectCoercible = requireObjectCoercible$3;

	var toIndexedObject$1 = function toIndexedObject(it) {
	  return IndexedObject(requireObjectCoercible(it));
	};

	var toIndexedObject = toIndexedObject$1;
	var Iterators$1 = iterators;
	var InternalStateModule = internalState;
	objectDefineProperty.f;
	var defineIterator = defineIterator$2;
	var ARRAY_ITERATOR = 'Array Iterator';
	var setInternalState = InternalStateModule.set;
	var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR); // `Array.prototype.entries` method
	// https://tc39.es/ecma262/#sec-array.prototype.entries
	// `Array.prototype.keys` method
	// https://tc39.es/ecma262/#sec-array.prototype.keys
	// `Array.prototype.values` method
	// https://tc39.es/ecma262/#sec-array.prototype.values
	// `Array.prototype[@@iterator]` method
	// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
	// `CreateArrayIterator` internal method
	// https://tc39.es/ecma262/#sec-createarrayiterator

	defineIterator(Array, 'Array', function (iterated, kind) {
	  setInternalState(this, {
	    type: ARRAY_ITERATOR,
	    target: toIndexedObject(iterated),
	    // target
	    index: 0,
	    // next index
	    kind: kind // kind

	  }); // `%ArrayIteratorPrototype%.next` method
	  // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
	}, function () {
	  var state = getInternalState(this);
	  var target = state.target;
	  var kind = state.kind;
	  var index = state.index++;

	  if (!target || index >= target.length) {
	    state.target = undefined;
	    return {
	      value: undefined,
	      done: true
	    };
	  }

	  if (kind == 'keys') return {
	    value: index,
	    done: false
	  };
	  if (kind == 'values') return {
	    value: target[index],
	    done: false
	  };
	  return {
	    value: [index, target[index]],
	    done: false
	  };
	}, 'values'); // argumentsList[@@iterator] is %ArrayProto_values%
	// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
	// https://tc39.es/ecma262/#sec-createmappedargumentsobject

	Iterators$1.Arguments = Iterators$1.Array; // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

	// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods

	var domIterables = {
	  CSSRuleList: 0,
	  CSSStyleDeclaration: 0,
	  CSSValueList: 0,
	  ClientRectList: 0,
	  DOMRectList: 0,
	  DOMStringList: 0,
	  DOMTokenList: 1,
	  DataTransferItemList: 0,
	  FileList: 0,
	  HTMLAllCollection: 0,
	  HTMLCollection: 0,
	  HTMLFormElement: 0,
	  HTMLSelectElement: 0,
	  MediaList: 0,
	  MimeTypeArray: 0,
	  NamedNodeMap: 0,
	  NodeList: 1,
	  PaintRequestList: 0,
	  Plugin: 0,
	  PluginArray: 0,
	  SVGLengthList: 0,
	  SVGNumberList: 0,
	  SVGPathSegList: 0,
	  SVGPointList: 0,
	  SVGStringList: 0,
	  SVGTransformList: 0,
	  SourceBufferList: 0,
	  StyleSheetList: 0,
	  TextTrackCueList: 0,
	  TextTrackList: 0,
	  TouchList: 0
	};

	var DOMIterables$1 = domIterables;
	var global$1 = global$d;
	var classof$1 = classof$6;
	var createNonEnumerableProperty = createNonEnumerableProperty$5;
	var Iterators = iterators;
	var wellKnownSymbol = wellKnownSymbol$9;
	var TO_STRING_TAG = wellKnownSymbol('toStringTag');

	for (var COLLECTION_NAME in DOMIterables$1) {
	  var Collection = global$1[COLLECTION_NAME];
	  var CollectionPrototype = Collection && Collection.prototype;

	  if (CollectionPrototype && classof$1(CollectionPrototype) !== TO_STRING_TAG) {
	    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
	  }

	  Iterators[COLLECTION_NAME] = Iterators.Array;
	}

	var $forEach = _forEachInstanceProperty(arrayIteration);

	var arrayMethodIsStrict = arrayMethodIsStrict$2;
	var STRICT_METHOD = arrayMethodIsStrict('forEach'); // `Array.prototype.forEach` method implementation
	// https://tc39.es/ecma262/#sec-array.prototype.foreach

	var arrayForEach = !STRICT_METHOD ? function forEach(callbackfn
	/* , thisArg */
	) {
	  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined); // eslint-disable-next-line es-x/no-array-prototype-foreach -- safe
	} : _forEachInstanceProperty([]);

	var $ = _export;
	var forEach$3 = arrayForEach; // `Array.prototype.forEach` method
	// https://tc39.es/ecma262/#sec-array.prototype.foreach
	// eslint-disable-next-line es-x/no-array-prototype-foreach -- safe

	$({
	  target: 'Array',
	  proto: true,
	  forced: _forEachInstanceProperty([]) != forEach$3
	}, {
	  forEach: forEach$3
	});

	var entryVirtual = entryVirtual$7;

	var forEach$2 = _forEachInstanceProperty(entryVirtual('Array'));

	var parent = forEach$2;
	var forEach$1 = parent;

	var classof = classof$6;
	var hasOwn = hasOwnProperty_1;
	var isPrototypeOf = objectIsPrototypeOf;
	var method = forEach$1;
	var ArrayPrototype = Array.prototype;
	var DOMIterables = {
	  DOMTokenList: true,
	  NodeList: true
	};

	var forEach = function forEach(it) {
	  var own = _forEachInstanceProperty(it);

	  return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === _forEachInstanceProperty(ArrayPrototype) || hasOwn(DOMIterables, classof(it)) ? method : own;
	};

	(function (module) {
	  module.exports = forEach;
	})(forEach$4);

	var _forEachInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(forEach$4.exports);

	//
	//
	//
	//
	//
	//

	var script$1 = {
	    name: 'ui-button',
	};

	function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
	/* server only */
	, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
	  if (typeof shadowMode !== 'boolean') {
	    createInjectorSSR = createInjector;
	    createInjector = shadowMode;
	    shadowMode = false;
	  } // Vue.extend constructor export interop.


	  var options = typeof script === 'function' ? script.options : script; // render functions

	  if (template && template.render) {
	    options.render = template.render;
	    options.staticRenderFns = template.staticRenderFns;
	    options._compiled = true; // functional template

	    if (isFunctionalTemplate) {
	      options.functional = true;
	    }
	  } // scopedId


	  if (scopeId) {
	    options._scopeId = scopeId;
	  }

	  var hook;

	  if (moduleIdentifier) {
	    // server build
	    hook = function hook(context) {
	      // 2.3 injection
	      context = context || // cached call
	      this.$vnode && this.$vnode.ssrContext || // stateful
	      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
	      // 2.2 with runInNewContext: true

	      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
	        context = __VUE_SSR_CONTEXT__;
	      } // inject component styles


	      if (style) {
	        style.call(this, createInjectorSSR(context));
	      } // register component module identifier for async chunk inference


	      if (context && context._registeredComponents) {
	        context._registeredComponents.add(moduleIdentifier);
	      }
	    }; // used by ssr in case component is cached and beforeCreate
	    // never gets called


	    options._ssrRegister = hook;
	  } else if (style) {
	    hook = shadowMode ? function (context) {
	      style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
	    } : function (context) {
	      style.call(this, createInjector(context));
	    };
	  }

	  if (hook) {
	    if (options.functional) {
	      // register for functional component in vue file
	      var originalRender = options.render;

	      options.render = function renderWithStyleInjection(h, context) {
	        hook.call(context);
	        return originalRender(h, context);
	      };
	    } else {
	      var _context;

	      // inject component registration as beforeCreate hook
	      var existing = options.beforeCreate;
	      options.beforeCreate = existing ? _concatInstanceProperty(_context = []).call(_context, existing, hook) : [hook];
	    }
	  }

	  return script;
	}

	/* script */
	const __vue_script__$1 = script$1;

	/* template */
	var __vue_render__$1 = function () {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "button",
	    _vm._g({ staticClass: "ui-button" }, _vm.$listeners),
	    [_vm._t("default")],
	    2
	  )
	};
	var __vue_staticRenderFns__$1 = [];
	__vue_render__$1._withStripped = true;

	  /* style */
	  const __vue_inject_styles__$1 = undefined;
	  /* scoped */
	  const __vue_scope_id__$1 = undefined;
	  /* module identifier */
	  const __vue_module_identifier__$1 = undefined;
	  /* functional template */
	  const __vue_is_functional_template__$1 = false;
	  /* style inject */
	  
	  /* style inject SSR */
	  
	  /* style inject shadow dom */
	  

	  
	  const __vue_component__$1 = /*#__PURE__*/normalizeComponent(
	    { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
	    __vue_inject_styles__$1,
	    __vue_script__$1,
	    __vue_scope_id__$1,
	    __vue_is_functional_template__$1,
	    __vue_module_identifier__$1,
	    false,
	    undefined,
	    undefined,
	    undefined
	  );

	__vue_component__$1.install = function (Vue) {
	  Vue.component(__vue_component__$1.name, __vue_component__$1);
	};

	function addCount(count) {
	  return ++count;
	}

	//

	var script = {
	    name: 'ui-form',

	    components: {
	        [__vue_component__$1.name]: __vue_component__$1,
	    },

	    data() {
	        return {
	            count: 0,
	        }
	    },

	    methods: {
	        onClick() {
	            this.count = addCount(this.count);
	        }
	    }
	};

	/* script */
	const __vue_script__ = script;

	/* template */
	var __vue_render__ = function () {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "ui-form-container" }, [
	    _c(
	      "div",
	      { staticStyle: { "font-weight": "bold", "margin-bottom": "15px" } },
	      [_vm._v("ç»ä»¶ ui-form")]
	    ),
	    _vm._v(" "),
	    _c("div", { staticClass: "ui-form-content" }, [
	      _vm._v("\n        count: " + _vm._s(_vm.count) + "\n    "),
	    ]),
	    _vm._v(" "),
	    _c(
	      "div",
	      { staticClass: "ui-form-footer" },
	      [_c("ui-button", { on: { click: _vm.onClick } }, [_vm._v("count++")])],
	      1
	    ),
	  ])
	};
	var __vue_staticRenderFns__ = [];
	__vue_render__._withStripped = true;

	  /* style */
	  const __vue_inject_styles__ = undefined;
	  /* scoped */
	  const __vue_scope_id__ = undefined;
	  /* module identifier */
	  const __vue_module_identifier__ = undefined;
	  /* functional template */
	  const __vue_is_functional_template__ = false;
	  /* style inject */
	  
	  /* style inject SSR */
	  
	  /* style inject shadow dom */
	  

	  
	  const __vue_component__ = /*#__PURE__*/normalizeComponent(
	    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
	    __vue_inject_styles__,
	    __vue_script__,
	    __vue_scope_id__,
	    __vue_is_functional_template__,
	    __vue_module_identifier__,
	    false,
	    undefined,
	    undefined,
	    undefined
	  );

	__vue_component__.install = function (Vue) {
	  Vue.component(__vue_component__.name, __vue_component__);
	};

	var components = [__vue_component__$1, __vue_component__];

	var install = function install(Vue) {
	  _forEachInstanceProperty(components).call(components, function (component) {
	    Vue.use(component);
	  });
	};
	var index = {
	  install: install
	}; // unpkgå¼å¥æ¶ï¼ä¼åå¼å¥vueå¹¶æè½½å°windowå¯¹è±¡ä¸

	if (typeof window !== 'undefined' && typeof window.Vue !== 'undefined') {
	  console.log('vue2-components-build window.Vueå­å¨');
	  install(window.Vue);
	}

	exports.Button = __vue_component__$1;
	exports.Form = __vue_component__;
	exports["default"] = index;

	Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=vue2-components-build.min.js.map
